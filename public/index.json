[{"content":" We\u0026rsquo;ll be using yml/yaml format for all examples down below, it is recommend to use yaml over toml as it is easier to read. You can find any YML to TOML converters if needed. Getting Started üöÄ Follow Hugo Docs\u0026rsquo;s - Quick Start guide to install . (Make sure you install Hugo \u0026gt;= v0.112.4)\nCreate a new site\nhugo new site MyFreshWebsite --format yaml # replace MyFreshWebsite with name of your website Note:\nOlder versions of Hugo may not support --format yaml Read more here about Hugo Docs\u0026rsquo;s - hugo new site command After you have created a new site, follow the below steps to add PaperMod\nInstalling/Updating PaperMod Themes reside in MyFreshWebsite/themes directory. PaperMod will be installed in MyFreshWebsite/themes/PaperMod Expand Method 1 - Git Clone INSTALL : Inside the folder of your Hugo site MyFreshWebsite, run:\ngit clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 You may use --branch v7.0 to end of above command if you want to stick to specific release.\nUPDATE: Inside the folder of your Hugo site MyFreshWebsite, run:\ncd themes/PaperMod git pull Expand Method 2 - Git Submodule (recomended) INSTALL : Inside the folder of your Hugo site MyFreshWebsite, run:\ngit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) You may use --branch v7.0 to end of above command if you want to stick to specific release. Read more about git submodules here.\nUPDATE: Inside the folder of your Hugo site MyFreshWebsite, run:\ngit submodule update --remote --merge Expand Method 3 - Download an unzip Download PaperMod source as Zip from Github Releases and extract in your themes directory at MyFreshWebsite/themes/PaperMod\nDirect Links:\nMaster Branch (Latest) v7.0 v6.0 v5.0 v4.0 v3.0 v2.0 v1.0 Expand Method 4 - Hugo module INSTALL :\nInstall Go programming language in your operating system.\nIntialize your own hugo mod\nhugo mod init YOUR_OWN_GIT_REPOSITORY Add PaperMod in your config.yml file 1 2 3 module: imports: - path: github.com/adityatelange/hugo-PaperMod UPDATE:\nhugo mod get -u Read more : Hugo Docs\u0026rsquo;s - HUGO MODULES\nFinally set theme as PaperMod in your site config In config.yml add:\n1 theme: [\u0026#34;PaperMod\u0026#34;] Next up - Customizing PaperMod to suit your preferences. Your site will be blank after you set up for the very first time. You may go through this website\u0026rsquo;s source code - PaperMod\u0026rsquo;s exampleSite\u0026rsquo;s souce Scroll below this page where you will find more specific details about each section. Kindly go through all of the pages below to know how to configure PaperMod. Support ü´∂ Star üåü PaperMod\u0026rsquo;s Github repository. Help spread the word about PaperMod by sharing it on social media and recommending it to your friends. üó£Ô∏è You can also sponsor üèÖ on Github Sponsors / Ko-Fi. Videos featuring PaperMod You can go through few videos which are available on YouTube for getting to know the creator\u0026rsquo;s thoughts as well as the setup process.\n‚ñ∂Ô∏è https://youtube.com/playlist?list=PLeiDFxcsdhUrzkK5Jg9IZyiTsIMvXxKZP\nQuick Links Papermod - Features Papermod - FAQs Papermod - Variables Papermod - Icons ChangeLog Sample config.yml Example Site Structure is present here: exampleSite\nUse appropriately\nbaseURL: \u0026#34;https://examplesite.com/\u0026#34; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026#34;ExampleSite description\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;January 2, 2006\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;Home\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026#34;Hi there \\U0001F44B\u0026#34; Content: Welcome to my blog socialIcons: - name: x url: \u0026#34;https://x.com/\u0026#34; - name: stackoverflow url: \u0026#34;https://stackoverflow.com\u0026#34; - name: github url: \u0026#34;https://github.com/\u0026#34; analytics: google: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; bing: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; yandex: SiteVerificationTag: \u0026#34;XYZabc\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai Sample Page.md --- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- You can use it by creating archetypes/post.md\nhugo new --kind post \u0026lt;name\u0026gt; ","permalink":"http://knightsnape.github.io/public/posts/papermod/papermod-installation/","summary":"Read aboout Install and Update instructions and sampled configuration templates","title":"Install / Update PaperMod"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\nYou can find any YML to TOML converters if necessary.\nAssets (js/css) The following is enabled by default\nminification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/intergity check. Default Theme light/dark/auto 1 2 3 4 params: # defaultTheme: light # defaultTheme: dark defaultTheme: auto # to switch between dark or light according to browser theme Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\n1 disableThemeToggle: true You can refer following table for better understanding\u0026hellip;\ndefaultTheme disableThemeToggle checks local storage? checks system theme? Info auto true No Yes only system theme false Yes (if not-\u0026gt;2) Yes (2) switch present dark true No No force dark only false Yes No switch present light true No No force light only false Yes No switch present Archives Layout Create a page with archive.md in content directory with following content\n. ‚îú‚îÄ‚îÄ config.yml ‚îú‚îÄ‚îÄ content/ ‚îÇ ‚îú‚îÄ‚îÄ archives.md \u0026lt;--- Create archive.md here ‚îÇ ‚îî‚îÄ‚îÄ posts/ ‚îú‚îÄ‚îÄ static/ ‚îî‚îÄ‚îÄ themes/ ‚îî‚îÄ‚îÄ PaperMod/ and add the following to it\n--- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- Note: Archives Layout does not support Multilingual Month Translations.\nex: archives.md\nRegular Mode (default-mode) Home-Info Mode Use 1st entry as some Information\nadd following to config file\nparams: homeInfoParams: Title: Hi there wave Content: Can be Info, links, about... socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Profile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 params: profileMode: enabled: true title: \u0026#34;\u0026lt;Title\u0026gt;\u0026#34; # optional default will be site title subtitle: \u0026#34;This is subtitle\u0026#34; imageUrl: \u0026#34;\u0026lt;image link\u0026gt;\u0026#34; # optional imageTitle: \u0026#34;\u0026lt;title of image as alt\u0026gt;\u0026#34; # optional imageWidth: 120 # custom size imageHeight: 120 # custom size buttons: - name: Archive url: \u0026#34;/archive\u0026#34; - name: Github url: \u0026#34;https://github.com/\u0026#34; socialIcons: # optional - name: \u0026#34;\u0026lt;platform\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link\u0026gt;\u0026#34; - name: \u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34; url: \u0026#34;\u0026lt;link2\u0026gt;\u0026#34; Search Page PaperMod uses Fuse.js Basic for search functionality\nAdd the following to site config, config.yml\n1 2 3 4 5 outputs: home: - HTML - RSS - JSON # necessary for search Create a page with search.md in content directory with following content\n1 2 3 4 5 6 7 8 --- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # necessary for search # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;placeholder text in search input box\u0026#34; --- To hide a particular page from being searched, add it in post\u0026rsquo;s frontmatter\n1 searchHidden: true ex: search.md\nSearch Page also has Key bindings:\nArrow keys to move up/down the list Enter key (return) or Right Arrow key to go to the highlighted page Escape key to clear searchbox and results For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\n1 2 3 4 5 6 7 8 9 10 params: fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 # limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] Draft Page indication adds [draft] mark to indicate draft pages.\nPost Cover Image In post\u0026rsquo;s page-variables add :\n1 2 3 4 5 6 7 cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; relative: false # To use relative path for cover image, used in hugo Page-bundles When you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\n1 2 3 params: cover: responsiveImages: false To enable hyperlinks to the full image size on post pages, use\n1 2 3 params: cover: linkFullImages: true Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\nparams: ShowShareButtons: true Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\nParams: ShowReadingTime: true Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\nShowToc: true To keep Toc Open by default on a post add following to page-variables:\nTocOpen: true BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\nparams: ShowBreadCrumbs: true Can be diabled for particular page\u0026rsquo;s front-matter\n--- ShowBreadCrumbs: false --- Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\nParams: editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link Can be modified for individual pages\n--- editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\nParameter Required Default Value editPost.URL true - editPost.appendFilePath false false editPost.Text false Edit Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\nOther Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\nparams: ShowPostNavLinks: true Code Copy Button Adds a copy button in code block to copy the code it contains\nparams: ShowCodeCopyButtons: true Multiple Authors To Use multiple authors for a post, in post-variables:\n--- author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] --- To use Multiple Authors Site-wide, in config.yml:\nparams: author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\nparams: comments: true read more about this hugo-comments\nAccessKeys c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu What\u0026rsquo;s AccessKeys ?\nEnhanced SEO Enabled only when env: production\nRich Results/Snippets Support Twitter Cards Support The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. OpenGraph support The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. images: - image_01.png - image_02.png Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. videos: - filename01.mov - filename02.avi Multilingual Support Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) Displays a Scroll-to-Top button in right-bottom corner Google Analytics integration Syntax highlighting RSS feeds ","permalink":"http://knightsnape.github.io/public/posts/papermod/papermod-features/","summary":"Learn About All Features in PaperMod","title":"Features / Mods"},{"content":"Ê¶ÇÁéáËÆ∫ 1.Ë¥ùÂè∂ÊñØÂÖ¨Âºè\n2.ÈöèÊú∫ÂèòÈáè\n2.1.ÈöèÊú∫ÂèòÈáè\n2.2.ÈöèÊú∫ÂèòÈáèÁöÑÊúüÊúõ‰∏éÊñπÂ∑Æ\n2.3.Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞\n3.Á¶ªÊï£ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É\n3.1.‰∫åÈ°πÂàÜÂ∏É\n3.2.Âá†‰ΩïÂàÜÂ∏É\n3.3.Ê≥äÊùæÂàÜÂ∏É\n3.4.Ë∂ÖÂá†‰ΩïÂàÜÂ∏É\n3.5.Ë¥ü‰∫åÈ°πÂàÜÂ∏É\n4.ËøûÁª≠ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É\n4.1.ËøûÁª≠ÂûãÂùáÂåÄÂàÜÂ∏É\n4.2.ÊåáÊï∞ÂàÜÂ∏É\n4.3.Ê≠£ÊÄÅÂàÜÂ∏É\n4.4.Âç°ÊñπÂàÜÂ∏É\n1.Ë¥ùÂè∂ÊñØÂÖ¨Âºè ‰∏Ä‰ΩçÂèÇËßÇËÄÖÂ∞ÜÊù•Âà∞Ë•ø‰∫§Âà©Áâ©Êµ¶Â§ßÂ≠¶ÂèÇÂä†Á†îËÆ®‰ºö„ÄÇ‰ªñÊù•ÁöÑÊ¶ÇÁéá ÁÅ´ËΩ¶„ÄÅÊ±ΩËΩ¶ÂíåËà™Áè≠ÂàÜÂà´‰∏∫0.5„ÄÅ0.3Âíå0.2„ÄÇ‰ª•ÂèäÂª∂ËøüÁöÑÂèØËÉΩÊÄß Ëøô‰∏âÁßçËøêËæìÊñπÂºèÂàÜÂà´ÊòØ0.1„ÄÅ0.3Âíå0.4„ÄÇÂ¶ÇÊûúËÆøÂÆ¢ Á†îËÆ®‰ºöËøüÂà∞‰∫ÜÔºåÈÇ£‰πà‰ªñÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÊòØÂ§öÂ∞ëÔºü\nÂèØ‰ª•‰ΩøÁî®Ë¥ùÂè∂ÊñØÂÖ¨ÂºèÊù•ËÆ°ÁÆóÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºåÂÅáËÆæ‰∫ã‰ª∂CË°®Á§∫ÂèÇËßÇËÄÖËøüÂà∞Ôºå‰∫ã‰ª∂TË°®Á§∫ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶„ÄÇ\nÊ†πÊçÆÂÖ®Ê¶ÇÁéáÂÖ¨ÂºèÔºåÂèØ‰ª•ËÆ°ÁÆóÂèÇËßÇËÄÖËøüÂà∞ÁöÑÊ¶ÇÁéáÔºö\nP(C) = P(C|T) * P(T) + P(C|not T) * P(not T)\nÂÖ∂‰∏≠ÔºåP(C|T)Ë°®Á§∫Âú®ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊÉÖÂÜµ‰∏ã‰ªñËøüÂà∞ÁöÑÊ¶ÇÁéáÔºåP(C|not T)Ë°®Á§∫Âú®ÂèÇËßÇËÄÖ‰∏ç‰πòÂùêÁÅ´ËΩ¶ÁöÑÊÉÖÂÜµ‰∏ã‰ªñËøüÂà∞ÁöÑÊ¶ÇÁéáÔºåP(T)Ë°®Á§∫ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºåP(not T)Ë°®Á§∫ÂèÇËßÇËÄÖ‰∏ç‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéá„ÄÇ\nÊ†πÊçÆÈ¢òÁõÆ‰∏≠ÁöÑÊù°‰ª∂ÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\nP(T) = 0.5 P(not T) = 0.5 P(C|T) = 0.1 P(C|not T) = 0.3\nÂ∞ÜËøô‰∫õÂÄºÂ∏¶ÂÖ•‰∏äÈù¢ÁöÑÂÖ¨ÂºèÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\nP(C) = 0.1 * 0.5 + 0.3 * 0.5 P(C) = 0.2\nÂèÇËßÇËÄÖËøüÂà∞ÁöÑÊ¶ÇÁéáÊòØ0.2„ÄÇ\nÁé∞Âú®‰ΩøÁî®Ë¥ùÂè∂ÊñØÂÖ¨ÂºèËÆ°ÁÆóÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºö\nP(T|C) = P(C|T) * P(T) / P(C)\nÂ∞Ü‰∏äÈù¢ËÆ°ÁÆóÁöÑÁªìÊûú‰ª£ÂÖ•ÂÖ¨ÂºèÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\nP(T|C) = 0.1 * 0.5 / 0.2 P(T|C) = 0.25\nÂõ†Ê≠§ÔºåÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÊòØ0.25ÔºåÂç≥Êúâ25%ÁöÑÊ¶ÇÁéáÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑ„ÄÇ\nË¥ùÂè∂ÊñØÂÖ¨ÂºèÁöÑÈÄöÈ°πÂÖ¨ÂºèÂ¶Ç‰∏ãÔºö\n$$ P(A|B) = \\frac{P(B|A) \\cdot P(A)}{P(B)} $$\nÂÖ∂‰∏≠Ôºå$P(A|B)$Ë°®Á§∫Âú®Â∑≤Áü•‰∫ã‰ª∂BÂèëÁîüÁöÑÊÉÖÂÜµ‰∏ã‰∫ã‰ª∂AÂèëÁîüÁöÑÊ¶ÇÁéáÔºåÁß∞‰∏∫ÂêéÈ™åÊ¶ÇÁéáÔºõ$P(B|A)$Ë°®Á§∫Âú®Â∑≤Áü•‰∫ã‰ª∂AÂèëÁîüÁöÑÊÉÖÂÜµ‰∏ã‰∫ã‰ª∂BÂèëÁîüÁöÑÊ¶ÇÁéáÔºåÁß∞‰∏∫‰ººÁÑ∂Ê¶ÇÁéáÔºõ$P(A)$Ë°®Á§∫‰∫ã‰ª∂AÂèëÁîüÁöÑÊ¶ÇÁéáÔºåÁß∞‰∏∫ÂÖàÈ™åÊ¶ÇÁéáÔºõ$P(B)$Ë°®Á§∫‰∫ã‰ª∂BÂèëÁîüÁöÑÊ¶ÇÁéáÔºåÁß∞‰∏∫ËæπÁºòÊ¶ÇÁéá„ÄÇ\nÂÖàÈ™åÊ¶ÇÁéáÊòØÂú®ËÄÉËôëÊñ∞ËØÅÊçÆÂâçÊàë‰ª¨ÂØπ‰∫ã‰ª∂Ê¶ÇÁéáÁöÑÈ¢ÑÂÖà‰º∞ËÆ°„ÄÇÂú®Ë¥ùÂè∂ÊñØÂÖ¨Âºè‰∏≠ÔºåÊàë‰ª¨ÈúÄË¶ÅÁî®ÂÖàÈ™åÊ¶ÇÁéá‰Ωú‰∏∫Ëµ∑ÁÇπÔºåÂπ∂Â∞ÜÂÖ∂‰∏éÊñ∞ÁöÑËØÅÊçÆÁõ∏ÁªìÂêàÊù•ËÆ°ÁÆóÂêéÈ™åÊ¶ÇÁéá„ÄÇ\nÂêéÈ™åÊ¶ÇÁéáÊòØÂú®ËÄÉËôë‰∫ÜÊñ∞ËØÅÊçÆÂêéÔºåÊàë‰ª¨ÂØπ‰∫ã‰ª∂Ê¶ÇÁéáÁöÑÊõ¥Êñ∞„ÄÇÂú®Ë¥ùÂè∂ÊñØÂÖ¨Âºè‰∏≠ÔºåÊàë‰ª¨‰ΩøÁî®ÂÖàÈ™åÊ¶ÇÁéáÂíåÊñ∞ÁöÑËØÅÊçÆÊù•ËÆ°ÁÆóÂêéÈ™åÊ¶ÇÁéáÔºå‰ªéËÄåÊõ¥Êñ∞Êàë‰ª¨ÂØπ‰∫ã‰ª∂Ê¶ÇÁéáÁöÑËÆ§ËØÜ„ÄÇ\n‰ººÁÑ∂Ê¶ÇÁéáÊòØÊåáÂú®ÁªôÂÆöÊüê‰∏Ä‰∫ã‰ª∂ÂèëÁîüÁöÑÂâçÊèê‰∏ãÔºåËßÇÂØüÂà∞ÊüêÁßçËØÅÊçÆÁöÑÊ¶ÇÁéá„ÄÇÂú®Ë¥ùÂè∂ÊñØÂÖ¨Âºè‰∏≠Ôºå‰ººÁÑ∂Ê¶ÇÁéáÁî®‰∫éÊèèËø∞Êñ∞ËØÅÊçÆÂØπ‰∫ã‰ª∂Ê¶ÇÁéáÁöÑÂΩ±ÂìçÔºåÊòØÊ†πÊçÆÊàë‰ª¨Â∑≤Áü•ÁöÑÊù°‰ª∂ÂíåÁªèÈ™åÊù•Êé®Êñ≠‰∫ã‰ª∂ÂèëÁîüÁöÑÊ¶ÇÁéá„ÄÇ\nÂ¶ÇÊûúÊòØ‰∏ÄÂ∫èÂàóÁöÑ‰∫ã‰ª∂ÔºåÂèØ‰ª•‰ΩøÁî®Ë¥ùÂè∂ÊñØÂÆöÁêÜÁöÑÊù°‰ª∂Ê¶ÇÁéáÁöÑÈìæÂºèÊ≥ïÂàôÔºàChain Rule of Conditional ProbabilityÔºâÊù•Ë°®Á§∫ÔºåËØ•Ê≥ïÂàôÊòØË¥ùÂè∂ÊñØÂÆöÁêÜÁöÑËá™ÁÑ∂Êé®ËÆ∫„ÄÇ\nÂÖ∑‰ΩìÊù•ËØ¥ÔºåÂØπ‰∫é‰∏ÄÂ∫èÂàóÁöÑ‰∫ã‰ª∂ $E_1, E_2, \u0026hellip;, E_n$ Âíå‰ªªÊÑè‰∫ã‰ª∂ $H$ÔºåË¥ùÂè∂ÊñØÂÖ¨ÂºèÂèØ‰ª•Ë°®Á§∫‰∏∫Ôºö\n$$ P(E_n | E_1, E_2, \u0026hellip;, E_{n-1}, H) = \\frac{P(H | E_1, E_2, \u0026hellip;, E_{n-1}, E_n) \\cdot P(E_n | E_1, E_2, \u0026hellip;, E_{n-1})}{P(H | E_1, E_2, \u0026hellip;, E_{n-1})} $$\nÂÖ∂‰∏≠Ôºå$P(E_n | E_1, E_2, \u0026hellip;, E_{n-1}, H)$Ë°®Á§∫Âú®Â∑≤Áü•ÂâçÈù¢ $n-1$ ‰∏™‰∫ã‰ª∂ÂíåËØÅÊçÆ $H$ ÁöÑÊÉÖÂÜµ‰∏ãÔºå‰∫ã‰ª∂ $E_n$ ÂèëÁîüÁöÑÊ¶ÇÁéáÔºõ$P(H | E_1, E_2, \u0026hellip;, E_{n-1}, E_n)$Ë°®Á§∫Âú®Â∑≤Áü•ÊâÄÊúâ $n$ ‰∏™‰∫ã‰ª∂ÁöÑÊÉÖÂÜµ‰∏ãÔºåËØÅÊçÆ $H$ ÂèëÁîüÁöÑÊ¶ÇÁéáÔºõ$P(E_n | E_1, E_2, \u0026hellip;, E_{n-1})$Ë°®Á§∫Âú®Â∑≤Áü•ÂâçÈù¢ $n-1$ ‰∏™‰∫ã‰ª∂ÁöÑÊÉÖÂÜµ‰∏ãÔºå‰∫ã‰ª∂ $E_n$ ÂèëÁîüÁöÑÊ¶ÇÁéáÔºõ$P(H | E_1, E_2, \u0026hellip;, E_{n-1})$Ë°®Á§∫Âú®Â∑≤Áü•ÂâçÈù¢ $n-1$ ‰∏™‰∫ã‰ª∂ÁöÑÊÉÖÂÜµ‰∏ãÔºåËØÅÊçÆ $H$ ÂèëÁîüÁöÑÊ¶ÇÁéá„ÄÇ\nÈÄöËøá‰∏çÊñ≠Âú∞Â∫îÁî®‰∏äËø∞ÂÖ¨ÂºèÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\n$$ P(E_n | E_1, E_2, \u0026hellip;, E_{n-1}, H) = \\frac{P(H | E_n, E_{n-1}, \u0026hellip;, E_1) \\cdot P(E_n | E_{n-1}, \u0026hellip;, E_1)}{P(H | E_{n-1}, \u0026hellip;, E_1)} $$\nËøô‰∏™ÂÖ¨ÂºèË°®Á§∫Âú®Â∑≤Áü•ÂâçÈù¢ $n-1$ ‰∏™‰∫ã‰ª∂ÁöÑÊÉÖÂÜµ‰∏ãÔºå‰∫ã‰ª∂ $E_n$ ÂèëÁîüÁöÑÊ¶ÇÁéáÔºåÂÖ∂‰∏≠ÂêéÈ™åÊ¶ÇÁéáÊòØÈÄöËøáÂâçÈù¢ÁöÑÂÖàÈ™åÊ¶ÇÁéáÂíåÊñ∞ËØÅÊçÆÊù•ËÆ°ÁÆóÁöÑ„ÄÇ\n2.ÈöèÊú∫ÂèòÈáè 2.1.ÈöèÊú∫ÂèòÈáè Âú®Ê¶ÇÁéáËÆ∫‰∏≠ÔºåÈöèÊú∫ÂèòÈáèÊòØ‰∏Ä‰∏™ÂèòÈáèÔºåÂÆÉÁöÑÂèñÂÄºÊòØÁî±ÈöèÊú∫‰∫ã‰ª∂ÊâÄÂÜ≥ÂÆöÁöÑÔºåÂÖ∂ÂèñÂÄº‰∏çÁ°ÆÂÆöÔºå‰ΩÜÂÖ∂ÂèñÂÄºÁöÑËåÉÂõ¥ÂíåÊ¶ÇÁéáÂàÜÂ∏ÉÊòØÂ∑≤Áü•ÁöÑ„ÄÇ\nÊï∞Â≠¶‰∏äÔºåÈöèÊú∫ÂèòÈáèÂèØ‰ª•ÂÆö‰πâ‰∏∫‰∏Ä‰∏™ÂáΩÊï∞ $X: \\Omega \\rightarrow \\mathbb{R}$ÔºåÂÆÉÂ∞ÜÊ†∑Êú¨Á©∫Èó¥ $\\Omega$ ‰∏≠ÁöÑÊØè‰∏Ä‰∏™ÂÖÉÁ¥† $\\omega$ Êò†Â∞ÑÂà∞‰∏Ä‰∏™ÂÆûÊï∞ $X(\\omega)$„ÄÇÈöèÊú∫ÂèòÈáè $X$ ÁöÑÂèñÂÄº $x$ ÊòØ $\\Omega$ ‰∏≠‰ΩøÂæó $X(\\omega)=x$ ÁöÑÊâÄÊúâ $\\omega$ ÁöÑÈõÜÂêàÔºåÈÄöÂ∏∏Áî® $P(X=x)$ Ë°®Á§∫ËØ•ÈõÜÂêàÁöÑÊ¶ÇÁéá„ÄÇ\nÈöèÊú∫ÂèòÈáèÂÖ∑Êúâ‰ª•‰∏ãÊÄßË¥®Ôºö\nÂÆÉÁöÑÂèñÂÄºÊòØ‰∏çÁ°ÆÂÆöÁöÑÔºå‰ΩÜÂÖ∂ÂèñÂÄºËåÉÂõ¥ÂíåÊ¶ÇÁéáÂàÜÂ∏ÉÊòØÂ∑≤Áü•ÁöÑÔºõ ÂÆÉÂèØ‰ª•ÊòØÁ¶ªÊï£ÁöÑÊàñËøûÁª≠ÁöÑÔºõ ÂØπ‰∫é‰ªªÊÑèÂÆûÊï∞ $x$Ôºå$P(X=x) \\geq 0$Ôºõ ÂØπ‰∫éÊâÄÊúâÁöÑ $x$Ôºå$\\sum_{i} P(X=x_i) = 1$ Êàñ $\\int_{-\\infty}^{\\infty} f(x) dx = 1$Ôºõ ÂØπ‰∫é‰ªªÊÑèÂáΩÊï∞ $g(x)$ÔºåÊàë‰ª¨ÂèØ‰ª•ÂÆö‰πâ‰∏Ä‰∏™Êñ∞ÁöÑÈöèÊú∫ÂèòÈáè $Y = g(X)$Ôºå$Y$ ÁöÑÊ¶ÇÁéáÂàÜÂ∏ÉÂèØ‰ª•ÈÄöËøá $X$ ÁöÑÊ¶ÇÁéáÂàÜÂ∏ÉÂíå $g(x)$ ÁöÑÂáΩÊï∞ÂÖ≥Á≥ªÊù•ËÆ°ÁÆó„ÄÇ\n2.2.Á¶ªÊï£ÈöèÊú∫ÂèòÈáèÁöÑÊúüÊúõÂíåÊñπÂ∑Æ ÂØπ‰∫é‰∏ÄÁª¥Á¶ªÊï£ÈöèÊú∫ÂèòÈáè $X$ÔºåÂÅáËÆæÂÆÉÁöÑÂèñÂÄº‰∏∫ $x_1, x_2, \u0026hellip;, x_n$ÔºåÊ¶ÇÁéáÂàÜÂ∏É‰∏∫ $P(X=x_1), P(X=x_2), \u0026hellip;, P(X=x_n)$„ÄÇ\nÂàô $X$ ÁöÑÊúüÊúõÔºàExpected ValueÔºåÁÆÄÁß∞ EVÔºâÂÆö‰πâ‰∏∫Ôºö\n$$ E(X) = \\sum_{i=1}^{n} x_i P(X=x_i) $$\nÂç≥ $X$ ÁöÑÊØè‰∏™ÂèØËÉΩÂèñÂÄº‰∏éÂÖ∂ÂØπÂ∫îÁöÑÊ¶ÇÁéáÁöÑ‰πòÁßØ‰πãÂíå„ÄÇ\nËÄå $X$ ÁöÑÊñπÂ∑ÆÔºàVarianceÔºâÂÆö‰πâ‰∏∫Ôºö\n$$ Var(X) = E[(X - E(X))^2] = E(X^2) - [E(X)]^2 $$\nÂÖ∂‰∏≠Ôºå$E(X^2)$ Ë°®Á§∫ $X^2$ ÁöÑÊúüÊúõ„ÄÇ\nÊúüÊúõÂíåÊñπÂ∑Æ‰πãÈó¥ÁöÑÂÖ≥Á≥ª‰∏∫Ôºö\n$$ Var(X) = E(X^2) - [E(X)]^2 $$\n$$ \\Rightarrow E(X^2) = Var(X) + [E(X)]^2 $$\nÂç≥ $X$ ÁöÑÊúüÊúõÁöÑÂπ≥ÊñπÂä†‰∏ä $X$ ÁöÑÊñπÂ∑ÆÁ≠â‰∫é $X^2$ ÁöÑÊúüÊúõ„ÄÇ\n2.3.Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ÊòØÊèèËø∞ËøûÁª≠ÈöèÊú∫ÂèòÈáèÊ¶ÇÁéáÂàÜÂ∏ÉÁöÑÂáΩÊï∞„ÄÇÂÆÉÂèØ‰ª•Áî®Êù•ËÆ°ÁÆóËøûÁª≠ÈöèÊú∫ÂèòÈáèËêΩÂú®Êüê‰∏™Âå∫Èó¥ÂÜÖÁöÑÊ¶ÇÁéá„ÄÇ\nÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ $f(x)$ ÂÆö‰πâ‰∏∫Âú® $x$ Â§ÑÁöÑÂØºÊï∞ÔºåÂç≥Ôºö\n$$f(x) = \\frac{dF(x)}{dx}$$\nÂÖ∂‰∏≠ $F(x)$ Ë°®Á§∫ËøûÁª≠ÈöèÊú∫ÂèòÈáè $X$ ÁöÑÂàÜÂ∏ÉÂáΩÊï∞ÔºàCumulative Distribution FunctionÔºåÁÆÄÁß∞ CDFÔºâÔºåÂÆÉÊòØÂú® $(-\\infty, x]$ Âå∫Èó¥ÂÜÖ $X$ ÂèñÂÄºÁöÑÊ¶ÇÁéá„ÄÇÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ÂèØ‰ª•ÁêÜËß£‰∏∫ÂàÜÂ∏ÉÂáΩÊï∞ÁöÑÊñúÁéáÔºåÂÆÉÂú® $x$ Â§ÑÁöÑÂÄºÂπ∂‰∏çË°®Á§∫Ê¶ÇÁéáÔºåËÄåÊòØË°®Á§∫Âú® $x$ Â§ÑÂçï‰ΩçÂå∫Èó¥ÂÜÖÈöèÊú∫ÂèòÈáè $X$ ÂèñÂÄºÁöÑÂèØËÉΩÊÄßÂ§ßÂ∞è„ÄÇ\nÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ÈúÄË¶ÅÊª°Ë∂≥‰ª•‰∏ã‰∏§‰∏™ÊÄßË¥®Ôºö\n$f(x) \\geq 0$ÔºåÂç≥Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞ÁöÑÂÄºÈùûË¥üÔºõ $\\int_{-\\infty}^{\\infty} f(x) dx = 1$ÔºåÂç≥Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞Âú®Êï¥‰∏™ÂÆö‰πâÂüüÂÜÖÁöÑÁßØÂàÜÁ≠â‰∫é1ÔºåÂõ†‰∏∫ËøûÁª≠ÈöèÊú∫ÂèòÈáèÂú®ÂÆö‰πâÂüüÂÜÖÂèñÂÄºÁöÑÊÄªÊ¶ÇÁéá‰∏∫1„ÄÇ Âú®ÂÆûÈôÖÂ∫îÁî®‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî®Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞Êù•ËÆ°ÁÆóÊüê‰∏™Âå∫Èó¥ÂÜÖËøûÁª≠ÈöèÊú∫ÂèòÈáèÁöÑÊ¶ÇÁéáÔºåÂç≥Ôºö\n$$ P(a \\leq X \\leq b) = \\int_a^b f(x) dx $$\nÂÖ∂‰∏≠ $a$ Âíå $b$ ÂàÜÂà´‰∏∫Âå∫Èó¥ÁöÑ‰∏ãÈôêÂíå‰∏äÈôê„ÄÇ\n3.Á¶ªÊï£ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É 3.1.‰∫åÈ°πÂàÜÂ∏É ‰∫åÈ°πÂàÜÂ∏ÉÔºàBinomial distributionÔºâÊòØ‰∏ÄÁßçÁ¶ªÊï£Ê¶ÇÁéáÂàÜÂ∏ÉÔºåÊèèËø∞‰∫ÜÂú®‰∏ÄÁ≥ªÂàóÁã¨Á´ãÈáçÂ§çÁöÑ‰ºØÂä™Âà©ËØïÈ™å‰∏≠ÊàêÂäüÊ¨°Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇÂÖ∂‰∏≠ÊØèÊ¨°ËØïÈ™åÊúâ‰∏§‰∏™ÂèØËÉΩÁªìÊûúÔºöÊàêÂäüÊàñÂ§±Ë¥•„ÄÇËØ•ÂàÜÂ∏ÉÁöÑÂèÇÊï∞ÊòØËØïÈ™åÊ¨°Êï∞ n ÂíåÊàêÂäüÊ¶ÇÁéá p„ÄÇ\n‰∫åÈ°πÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáË¥®ÈáèÂáΩÊï∞ÔºàPMFÔºâÂ¶Ç‰∏ãÔºö\n$$P(X=k) = \\binom{n}{k}p^k(1-p)^{n-k}$$\nÂÖ∂‰∏≠Ôºå$X$ Ë°®Á§∫ÊàêÂäüÊ¨°Êï∞Ôºå$k$ Ë°®Á§∫ÊàêÂäüÁöÑÊ¨°Êï∞Ôºå$\\binom{n}{k}$ Ë°®Á§∫‰ªé $n$ Ê¨°ËØïÈ™å‰∏≠ÂèñÂá∫ $k$ Ê¨°ÊàêÂäüÁöÑÁªÑÂêàÊï∞Ôºå$p$ Ë°®Á§∫ÊØèÊ¨°ËØïÈ™åÊàêÂäüÁöÑÊ¶ÇÁéáÔºå$(1-p)$ Ë°®Á§∫ÊØèÊ¨°ËØïÈ™åÂ§±Ë¥•ÁöÑÊ¶ÇÁéá„ÄÇ\n‰∫åÈ°πÂàÜÂ∏ÉÁöÑÊÄßË¥®Â¶Ç‰∏ãÔºö\nÊúüÊúõÂÄºÔºö$E(X) = np$ ÊñπÂ∑ÆÔºö$Var(X) = np(1-p)$\n‰∫åÈ°πÂàÜÂ∏ÉÈÄÇÁî®‰∫é‰ª•‰∏ãÂú∫ÊôØÔºö\nÂú®‰∏ÄÁªÑÁã¨Á´ãÈáçÂ§çÁöÑËØïÈ™å‰∏≠ÔºåÊØèÊ¨°ËØïÈ™åÊúâ‰∏§ÁßçÂèØËÉΩÁöÑÁªìÊûúÔºöÊàêÂäüÊàñÂ§±Ë¥•„ÄÇ ÊØèÊ¨°ËØïÈ™åÁöÑÊàêÂäüÊ¶ÇÁéáÈÉΩÊòØÁõ∏ÂêåÁöÑÔºåËÆ∞‰∏∫ pÔºåÂ§±Ë¥•Ê¶ÇÁéá‰∏∫ 1-p„ÄÇ ÊØèÊ¨°ËØïÈ™åÈÉΩÊòØÁã¨Á´ãÁöÑÔºåÂç≥ÊØèÊ¨°ËØïÈ™åÁöÑÁªìÊûú‰∏çÂèó‰πãÂâçËØïÈ™åÁöÑÁªìÊûúÂΩ±Âìç„ÄÇ ÊÑüÂÖ¥Ë∂£ÁöÑÊòØÂú® n Ê¨°ËØïÈ™å‰∏≠ÊàêÂäüÁöÑÊ¨°Êï∞ÔºåËÄå‰∏çÊòØÊàêÂäüÁöÑÊ¶ÇÁéáÊàñÂ§±Ë¥•ÁöÑÊ¶ÇÁéá„ÄÇ ‰∏æ‰æãÊù•ËØ¥Ôºå‰ª•‰∏ãÂú∫ÊôØÁ¨¶Âêà‰∫åÈ°πÂàÜÂ∏ÉÔºö\nÊäïÊé∑Á°¨Â∏Å n Ê¨°ÔºåÊØèÊ¨°Âá∫Áé∞Ê≠£Èù¢ÁöÑÊ¶ÇÁéá‰∏∫ pÔºåÊ±ÇÂá∫Áé∞Ê≠£Èù¢ÁöÑÊ¨°Êï∞„ÄÇ ‰∏ÄÂÆ∂ÂåªÈô¢ÊØèÂ§©Êé•Êî∂ n ÂêçÊñ∞ÁîüÂÑøÔºåÊØè‰∏™Êñ∞ÁîüÂÑøÊÇ£ÊúâÊüêÁßçÁñæÁóÖÁöÑÊ¶ÇÁéá‰∏∫ pÔºåÊ±ÇÊØèÂ§©ÊÇ£ÁóÖÂ©¥ÂÑøÁöÑÊï∞Èáè„ÄÇ ‰∏ÄÂÆ∂ÁîµÂïÜÁΩëÁ´ôÊØèÂ§©ËøõË°å n Ê¨°ÂπøÂëäÊäïÊîæÔºåÊØèÊ¨°ÊäïÊîæË¢´Áî®Êà∑ÁÇπÂáªÁöÑÊ¶ÇÁéá‰∏∫ pÔºåÊ±ÇÊØèÂ§©Ë¢´ÁÇπÂáªÁöÑÂπøÂëäÊï∞Èáè„ÄÇ\n‰∫åÈ°πÂàÜÂ∏ÉÁöÑÊúüÊúõÊé®ÂØºÂ¶Ç‰∏ãÔºö\n$$E = \\sum_{k=0}^{n}{k\\binom{n}{k}p^k(1-p)^{n-k}} \\ \\quad \\quad \\quad= \\sum_{k=1}^{n}\\frac{n!}{k!(n-k)!}p^k(1-p)^{n-k} \\ \\quad \\quad \\quad \\quad \\quad \\ \\ = \\sum_{k=1}^{n}{\\frac{n!}{(k-1)!(n-k)!}p^k(1-p)^{n-k}} \\ \\quad \\quad \\quad \\quad \\quad \\quad \\quad \\quad \\quad \\quad \\ = np\\sum_{j=0}^{n-1}\\binom{n-1}{j}p^j(1-p)^{n-1-j} \\quad let j = k - 1 \\ \\quad = np\\sum_{j=0}^{n-1}P(X=j) = np$$\n3.2.Âá†‰ΩïÂàÜÂ∏É Âá†‰ΩïÂàÜÂ∏ÉÊòØÊèèËø∞Áã¨Á´ãÈáçÂ§çËØïÈ™å‰∏≠Á¨¨‰∏ÄÊ¨°ÊàêÂäüÊâÄÈúÄÁöÑËØïÈ™åÊ¨°Êï∞ÁöÑÁ¶ªÊï£Ê¶ÇÁéáÂàÜÂ∏É„ÄÇÈÄö‰øóÂú∞ËØ¥ÔºåÂÆÉÊèèËø∞‰∫ÜÂú®ËøõË°å‰∏ÄÁ≥ªÂàóÁã¨Á´ãÈáçÂ§çËØïÈ™å‰∏≠ÔºåÁ¨¨‰∏ÄÊ¨°ÊàêÂäüÈúÄË¶ÅÂ∞ùËØïÁöÑÊ¨°Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇ‰æãÂ¶ÇÔºåÊüê‰∫∫Â∞ÑÁÆ≠ÔºåÊØèÊ¨°Â∞Ñ‰∏≠ÁõÆÊ†áÁöÑÊ¶ÇÁéá‰∏∫$p$ÔºåÈÇ£‰πàÁ¨¨‰∏ÄÊ¨°ÂëΩ‰∏≠ÁõÆÊ†áÁöÑÂ∞ÑÂáªÊ¨°Êï∞Â∞±Á¨¶ÂêàÂá†‰ΩïÂàÜÂ∏É„ÄÇ\nÂá†‰ΩïÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáË¥®ÈáèÂáΩÊï∞‰∏∫Ôºö\n$$P(X=k) = (1-p)^{k-1}p$$\nÂÖ∂‰∏≠Ôºå$k$Ë°®Á§∫Á¨¨‰∏ÄÊ¨°ÊàêÂäüÊâÄÈúÄÁöÑËØïÈ™åÊ¨°Êï∞Ôºå$p$Ë°®Á§∫ÊØèÊ¨°ËØïÈ™åÊàêÂäüÁöÑÊ¶ÇÁéá„ÄÇÂá†‰ΩïÂàÜÂ∏ÉÁöÑÊúüÊúõÂíåÊñπÂ∑ÆÂàÜÂà´‰∏∫Ôºö\n$E(X) = \\frac{1}{p}$\n$Var(X) = \\frac{1-p}{p^2}$\n‰∏ãÈù¢ÊòØÂá†‰ΩïÂàÜÂ∏ÉÁöÑ‰∏Ä‰∫õÊÄßË¥®Ôºö\nÂá†‰ΩïÂàÜÂ∏ÉÊòØÁ¶ªÊï£ÁöÑÊ¶ÇÁéáÂàÜÂ∏ÉÔºåÂÆÉÁöÑÂèñÂÄº‰∏∫Ê≠£Êï¥Êï∞„ÄÇ\nÂá†‰ΩïÂàÜÂ∏ÉÊòØÊó†ËÆ∞ÂøÜÁöÑÔºåÂç≥ÂÆÉ‰∏é‰πãÂâçÁöÑËØïÈ™åÊ¨°Êï∞Êó†ÂÖ≥„ÄÇËøôÊÑèÂë≥ÁùÄÔºåÂú®Êüê‰∫∫Â∞ÑÁÆ≠ÁöÑ‰æãÂ≠ê‰∏≠ÔºåÂ¶ÇÊûú‰ªñÂú®Á¨¨$k$Ê¨°Â∞ùËØï‰∏≠Êú™ÂëΩ‰∏≠ÔºåÈÇ£‰πàÂú®Êé•‰∏ãÊù•ÁöÑÂ∞ùËØï‰∏≠ÔºåÁ¨¨‰∏ÄÊ¨°ÂëΩ‰∏≠ÁõÆÊ†áÁöÑÊ¶ÇÁéá‰ªçÁÑ∂‰∏∫$p$ÔºåÂç≥‰ΩøÂ∑≤ÁªèÂ∞ùËØï‰∫Ü$k$Ê¨°„ÄÇ\nÂá†‰ΩïÂàÜÂ∏ÉÁöÑÊúüÊúõÈöèÁùÄ$p$ÁöÑÂ¢ûÂä†ËÄåÂáèÂ∞èÔºåÊñπÂ∑ÆÈöèÁùÄ$p$ÁöÑÂ¢ûÂä†ËÄåÂ¢ûÂ§ß„ÄÇÂΩì$p$Êé•Ëøë0Êó∂ÔºåÊúüÊúõÂíåÊñπÂ∑ÆÈÉΩÂèòÂæóÈùûÂ∏∏Â§ß„ÄÇ\nÂá†‰ΩïÂàÜÂ∏ÉÂèØ‰ª•Áî®Êù•ÊèèËø∞‰∏Ä‰∫õÂú∫ÊôØÔºå‰æãÂ¶ÇÔºö\nÂú®‰∏Ä‰∏™Âà∂ÈÄ†ËøáÁ®ã‰∏≠ÔºåÊØè‰ª∂‰∫ßÂìÅÊúâ‰∏ÄÂÆöÁöÑÊ¶ÇÁéáÂá∫Áé∞Áº∫Èô∑ÔºåÂá†‰ΩïÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Âú®Ê£ÄÊü•Â§öÂ∞ë‰ª∂‰∫ßÂìÅÂêéÁ¨¨‰∏ÄÊ¨°ÂèëÁé∞Áº∫Èô∑ÁöÑÊ¶ÇÁéá„ÄÇ\nÂú®‰∏ÄÂú∫Ë∂≥ÁêÉÊØîËµõ‰∏≠ÔºåÂ∞ÑÈó®ÁêÉÂëòÊØèÊ¨°Â∞ÑÈó®ÂæóÂàÜÁöÑÊ¶ÇÁéá‰∏∫$p$ÔºåÂá†‰ΩïÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Á¨¨‰∏ÄÊ¨°ËøõÁêÉÈúÄË¶ÅÂ§öÂ∞ëÊ¨°Â∞ÑÈó®ÁöÑÊ¶ÇÁéá„ÄÇ\nÂú®‰∏Ä‰∏™Âú®Á∫øÂπøÂëäÊäïÊîæÁ≥ªÁªü‰∏≠ÔºåÊüê‰∏™ÂπøÂëäË¢´ÁÇπÂáªÁöÑÊ¶ÇÁéá‰∏∫$p$ÔºåÂá†‰ΩïÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Âú®Â§öÂ∞ëÊ¨°Â±ïÁ§∫ÂêéÁ¨¨‰∏ÄÊ¨°Ë¢´ÁÇπÂáªÁöÑÊ¶ÇÁéá„ÄÇ\n3.3.Ê≥äÊùæÂàÜÂ∏É Ê≥äÊùæÂàÜÂ∏ÉÊòØ‰∏ÄÁßçÊèèËø∞Á®ÄÊúâ‰∫ã‰ª∂ÂèëÁîüÊ¨°Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏ÉÔºåÈÄöÂ∏∏Áî®‰∫éÊèèËø∞Âú®‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÊüê‰∏™‰∫ã‰ª∂ÂèëÁîüÁöÑÊ¨°Êï∞„ÄÇ‰æãÂ¶ÇÔºåÂú®‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÔºåÁîµËØùÊé•Á∫øÂëòÊé•Âà∞ÁöÑÁîµËØùÊï∞„ÄÅÈÇÆÂ±ÄÊî∂Âà∞ÁöÑÈÇÆ‰ª∂Êï∞„ÄÅÂú®È´òÂ≥∞Êó∂Èó¥ÊÆµÂÜÖÈÄöËøáÊüê‰∏™Ë∑ØÂè£ÁöÑËΩ¶ËæÜÊï∞Á≠âÔºåÈÉΩÂèØËÉΩÁ¨¶ÂêàÊ≥äÊùæÂàÜÂ∏É„ÄÇ\nÊ≥äÊùæÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáË¥®ÈáèÂáΩÊï∞‰∏∫Ôºö\n$$P(X=k) = \\frac{\\lambda^ke^{-\\lambda}}{k!}$$\nÂÖ∂‰∏≠Ôºå$k$Ë°®Á§∫‰∫ã‰ª∂ÂèëÁîüÁöÑÊ¨°Êï∞Ôºå$\\lambda$Ë°®Á§∫Âú®Âçï‰ΩçÊó∂Èó¥ÂÜÖËØ•‰∫ã‰ª∂Âπ≥ÂùáÂèëÁîüÁöÑÊ¨°Êï∞„ÄÇÊ≥äÊùæÂàÜÂ∏ÉÁöÑÊúüÊúõÂíåÊñπÂ∑ÆÂùá‰∏∫$\\lambda$ÔºåÂç≥Ôºö\n$$E(X) = \\lambda,Var(X) =\\lambda$$\n‰∏ãÈù¢ÊòØÊ≥äÊùæÂàÜÂ∏ÉÁöÑ‰∏Ä‰∫õÊÄßË¥®Ôºö\nÊ≥äÊùæÂàÜÂ∏ÉÊòØÁ¶ªÊï£ÁöÑÊ¶ÇÁéáÂàÜÂ∏ÉÔºåÂÆÉÁöÑÂèñÂÄº‰∏∫ÈùûË¥üÊï¥Êï∞„ÄÇ\nÊ≥äÊùæÂàÜÂ∏ÉÊòØÊó†ËÆ∞ÂøÜÁöÑÔºåÂç≥‰∫ã‰ª∂ÂèëÁîüÁöÑÊ¨°Êï∞‰∏é‰πãÂâç‰∫ã‰ª∂ÂèëÁîüÁöÑÊó∂Èó¥Êó†ÂÖ≥„ÄÇ\nÂΩì$\\lambda$Ë∂äÂ§ßÊó∂ÔºåÊ≥äÊùæÂàÜÂ∏ÉË∂äÊé•ËøëÊ≠£ÊÄÅÂàÜÂ∏É„ÄÇ\nÊ≥äÊùæÂàÜÂ∏ÉÂèØ‰ª•Áî®Êù•ÊèèËø∞‰∏Ä‰∫õÂú∫ÊôØÔºå‰æãÂ¶ÇÔºö\nÂú®‰∏ÄÂÆ∂ÂåªÈô¢ÊÄ•ËØäÂÆ§ÔºåÊØèÂ∞èÊó∂Âπ≥ÂùáÊúâ10ÂêçÊÇ£ËÄÖÂÖ•Èô¢Â∞±ËØäÔºåÊ≥äÊùæÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Âú®‰∏Ä‰∏™Â∞èÊó∂ÂÜÖÂÖ•Èô¢Â∞±ËØäÁöÑÊÇ£ËÄÖÊï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇ\nÂú®‰∏ÄÂÆ∂ÁîµËßÜÂè∞ÁöÑÊñ∞ÈóªÈÉ®Èó®ÔºåÂπ≥ÂùáÊØèÂ§©Êî∂Âà∞10ÁØáÊñ∞ÈóªÁ®ø‰ª∂ÔºåÊ≥äÊùæÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Âú®‰∏ÄÂ§©ÂÜÖÊî∂Âà∞Êñ∞ÈóªÁ®ø‰ª∂Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇ\nÂú®‰∏ÄÂÆ∂Èì∂Ë°åÁöÑÊüê‰∏™Ëá™Âä®ÂèñÊ¨æÊú∫ÂâçÔºåÂπ≥ÂùáÊØèÂàÜÈíüÊúâ3ÂêçÁî®Êà∑‰ΩøÁî®ËØ•Êú∫Âô®ÂèñÊ¨æÔºåÊ≥äÊùæÂàÜÂ∏ÉÂèØ‰ª•ÊèèËø∞Âú®‰∏ÄÂàÜÈíüÂÜÖ‰ΩøÁî®ËØ•ÂèñÊ¨æÊú∫ÂèñÊ¨æÁöÑÁî®Êà∑Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇ\n3.4.Ë∂ÖÂá†‰ΩïÂàÜÂ∏É $\\quad$ Ë∂ÖÂá†‰ΩïÂàÜÂ∏ÉÊòØÁªüËÆ°Â≠¶‰∏ä‰∏ÄÁßçÁ¶ªÊï£Ê¶ÇÁéáÂàÜÂ∏É„ÄÇÂÆÉÊèèËø∞‰∫ÜÁî±ÊúâÈôê‰∏™ÂØπË±°‰∏≠ÊäΩË±°ÔºåÊàêÂäüÊäΩÂá∫$k$Ê¨°ÊåáÂÆöÁßçÁ±ªÁöÑÂØπË±°ÁöÑÊ¶ÇÁéá(ÊäΩÂá∫‰∏çÊîæÂõû)„ÄÇ\n$\\quad$ ‰æãÂ¶ÇÂú®Êúâ$N$‰∏™Ê†∑Êú¨ÔºåÂÖ∂‰∏≠$K$‰∏™ÊòØ‰∏çÂèäÊ†ºÁöÑ„ÄÇË∂ÖÂá†‰ΩïÂàÜÂ∏ÉÊèèËø∞‰∫ÜÂú®ËØ•$N$‰∏™Ê†∑Êú¨‰∏≠ÊäΩÂá∫$n$‰∏™ÔºåÂÖ∂‰∏≠$k$‰∏™ÊòØ‰∏çÂèäÊ†ºÁöÑ‰∏™Êï∞„ÄÇ\n$$f(k;n,K,N) = \\frac{C_{K}^{k}C_{N-K}^{n-k}}{C_{N}^{n}}$$\n$\\quad$ ‰∏äÂºèÂèØÂ¶ÇÊ≠§ÁêÜËß£Ôºö$C_{N}^{n}$ Ë°®Á§∫ÊâÄÊúâÂú® $N$ ‰∏™Ê†∑Êú¨‰∏≠ÊäΩÂá∫$n$ ‰∏™ÊñπÊ≥ïÊï∞ÁõÆ„ÄÇ$C_{K}^{k}$ Ë°®Á§∫Âú® $K$ ‰∏™Ê†∑Êú¨‰∏≠ÔºåÊäΩÂá∫$k$‰∏™ÊñπÊ≥ïÊï∞ÁõÆÔºåÂç≥ÁªÑÂêàÊï∞ÔºåÂèàÁß∞‰∫åÈ°πÂºèÁ≥ªÊï∞„ÄÇÂâ©‰∏ãÁöÑÊ†∑Êú¨ÈÉΩÊòØÂèäÊ†ºÁöÑÔºåËÄåÂèäÊ†ºÁöÑÊ†∑Êú¨Êúâ$N-K$‰∏™ÔºåÂâ©‰∏ãÁöÑÊäΩÊ≥ïÊúâ$C_{N-K}^{n-k}$ „ÄÇËã•$n=1$ÔºåË∂ÖÂá†‰ΩïÂàÜÂ∏ÉÈÄÄÂåñ‰∏∫‰ºØÂä™Âà©ÂàÜÂ∏É„ÄÇ\n$\\quad$ Ë∂ÖÂá†‰ΩïÂàÜÂ∏ÉÁöÑÊúüÊúõÂÄº‰∏∫ $\\frac{nK}{N}$ ÔºåÊñπÂ∑Æ $n\\frac{K}{N}\\frac{(N-K)}{N}\\frac{N-n}{N-1}$\n3.5.Ë¥ü‰∫åÈ°πÂàÜÂ∏É $\\quad$ Ë¥ü‰∫åÈ°πÂàÜÂ∏ÉÊòØÁªüËÆ°Â≠¶‰∏äÁöÑ‰∏ÄÁßçÊèèËø∞Âú®‰∏ÄÁ≥ªÂàóÁã¨Á´ãÂêåÂàÜÂ∏ÉÁöÑ‰ºØÂä™Âà©ËØïÈ™å‰∏≠ÔºåÊàêÂäüÊ¨°Êï∞ËææÂà∞ÊåáÂÆöÊ¨°Êï∞ÔºàËÆ∞‰∏∫$r$ÔºâÊó∂Â§±Ë¥•Ê¨°Êï∞ÁöÑÁ¶ªÊï£Ê¶ÇÁéáÂàÜÂ∏É„ÄÇÊØîÂ¶ÇÔºåÂ¶ÇÊûúÊàë‰ª¨ÂÆö‰πâÊé∑È™∞Â≠êÈöèÊú∫ÂèòÈáè$x$ÁöÑÂÄº‰∏∫$x=1$Êó∂ÊàêÂäüÔºå$x 1$ ‰∏∫Â§±Ë¥•ÔºåËøôÊó∂Êàë‰ª¨ÂèçÂ§çÊé∑È™∞Â≠êÁõ¥Âà∞1Âá∫Áé∞3Ê¨°(ÊàêÂäüÊ¨°Êï∞$r=3$)ÔºåÊ≠§Êó∂Èùû1Êï∞Â≠óÂá∫Áé∞Ê¨°Êï∞ÁöÑÊ¶ÇÁéáÂàÜÂ∏É‰∏∫Ë¥ü‰∫åÈ°πÂàÜÂ∏É„ÄÇ\n$\\quad$ ÂΩì$r$ ÊòØÊï¥Êï∞ÁöÑÊó∂ÂÄôÁöÑË¥ü‰∫åÈ°πÂàÜÂ∏ÉÂèàÁß∞Â∏ïÊñØÂç°ÂàÜÂ∏ÉÔºåÂÖ∂Ê¶ÇÁéáË¥®ÈáèÂáΩÊï∞‰∏∫Ôºö\n$$f(k;r,p) = Pr(X=k) = C_{k + r - 1}^{r - 1}p^r(1-p)^k \\quad for \\quad k=0,1,2\u0026hellip;$$\n$\\quad$ ÂÖ∂‰∏≠$k$ ÊòØÂ§±Ë¥•ÁöÑÊ¨°Êï∞Ôºå$r$ ÊòØÊàêÂäüÁöÑÊ¨°Êï∞Ôºå$p$ ÊòØ‰∫ã‰ª∂ÊàêÂäüÁöÑÊ¶ÇÁéá„ÄÇÂú®Ë¥ü‰∫åÈ°πÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáË¥®ÈáèÂáΩÊï∞ÔºåÁî±‰∫é$k + r$Ê¨°‰ºØÂä™Âà©ËØïÈ™å‰∏∫Áã¨Á´ãÂêåÂàÜÂ∏ÉÔºåÊØè‰∏™ÊàêÂäü$r$ÔºåÂ§±Ë¥•$k$Ê¨°ÁöÑ‰∫ã‰ª∂ÁöÑÊ¶ÇÁéá‰∏∫$p^r(1-p)^{k}$„ÄÇÁî±‰∫éÁ¨¨$r$Ê¨°ÊàêÂäü‰∏ÄÂÆöÊòØÊúÄÂêé‰∏ÄÊ¨°ËØïÈ™åÔºåÊâÄ‰ª•Â∫îËØ•Âú®$k + r - 1$Ê¨°ËØïÈ™å‰∏≠ÈÄâÊã©$r - 1$Ê¨°ÊàêÂäüÔºå‰ΩøÁî®ÊéíÂàóÁªÑÂêà‰∫åÈ°πÂºèÁ≥ªÊï∞Ëé∑ÂèñÊâÄÊúâÂèØËÉΩÁöÑÈÄâÊã©Êï∞„ÄÇ\nË¥ü‰∫åÈ°πÂàÜÂ∏ÉÁöÑÊúüÊúõÊòØ$\\frac{r(1-p)}{p}$ÔºåÊñπÂ∑Æ‰∏∫$\\frac{r(1-p)}{p^2}$\n4.ËøûÁª≠ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É 4.1.ËøûÁª≠ÂûãÂùáÂåÄÂàÜÂ∏É $\\quad$ ËøûÁª≠ÂûãÂùáÂåÄÂàÜÂ∏ÉÊàñÁü©ÂΩ¢ÂàÜÂ∏ÉÁöÑÈöèÊú∫ÂèòÈáè$X$ÔºåÂú®ÂÖ∂ÂÄºÂüüÂÜÖÊØè‰∏™Á≠âÈïøÂå∫Èó¥‰∏äÂèñÂÄºÁöÑÊ¶ÇÁéáÁöÜÁõ∏Á≠â„ÄÇÂÖ∂Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞Âú®ËØ•ÂèòÈáèÁöÑÂÄºÂüüÂÜÖ‰∏∫Â∏∏Êï∞„ÄÇËã•$X$Êúç‰ªé$[a,b]$‰∏äÁöÑÂùáÂåÄÂàÜÂ∏ÉÔºåÂàôËÆ∞‰Ωú$X \\sim U(a,b)$\n$\\quad$ ËØ•ÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞‰∏∫Ôºö\n$$f(x) = \\begin{cases} \\frac{1}{b - a} , for \\quad a \\leq x \\leq b \\ 0 , elsewhere \\end{cases}$$\n$\\quad$ Á¥ØÁßØÂàÜÂ∏ÉÂáΩÊï∞‰∏∫Ôºö\n$$F(x) = \\begin{cases} 0 , for \\quad x \u0026lt; a \\ \\frac{x - a}{b - a},for \\quad a \\leq x \u0026lt; b \\ 1 , for \\quad x \\geq b \\end{cases}$$\n$\\quad$ ËøûÁª≠ÈöèÊú∫ÂèòÈáèÁöÑÊúüÊúõÂÄºÔºö\n$$E[X] = \\frac{a + b}{2}$$\n$\\quad$ ÊñπÂ∑ÆÔºö\n$$VAR[X] = \\frac{(b - a)^2}{12}$$\n4.2.ÊåáÊï∞ÂàÜÂ∏É $\\quad$ ÊåáÊï∞ÂàÜÂ∏ÉË°®Á§∫Áã¨Á´ãÈöèÊú∫‰∫ã‰ª∂ÂèëÁîüÁöÑÊó∂Èó¥Èó¥Èöî„ÄÇ\n$\\quad$ ÊåáÊï∞ÂàÜÂ∏ÉÂç≥ÂΩ¢Áä∂ÂèÇÊï∞$\\alpha$‰∏∫1ÁöÑ‰ºΩÈ©¨ÂàÜÂ∏É„ÄÇËã•ÈöèÊú∫ÂèòÈáè$X$Êúç‰ªéÂèÇÊï∞‰∏∫ $\\lambda $Êàñ$\\beta$ÁöÑÊåáÊï∞ÂàÜÂ∏É,ÂàôËÆ∞‰ΩúÔºö\n$$X \\sim Exp(\\lambda) or X \\sim Exp(\\beta)$$\n$\\quad$ ‰∏§ËÄÖÊÑè‰πâÁõ∏ÂêåÔºåÂè™ÊòØ$\\lambda$‰∏é$\\beta$‰∫í‰∏∫ÂÄíÊï∞ÂÖ≥Á≥ª„ÄÇÂè™Ë¶ÅÂ∞Ü‰ª•‰∏ãÂºèÂ≠êÂÅöÔºö$\\lambda = \\frac{1}{\\beta}$Âç≥ÂèØ„ÄÇ\n$\\quad$ ÊåáÊï∞ÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞‰∏∫Ôºö\n$$f(x;\\lambda)= \\begin{cases} \\lambda e^{-\\lambda x}, x \\geq 0 \\ 0, x \u0026lt;0 \\end{cases}$$\n$\\quad$ Á¥ØÁßØÂàÜÂ∏ÉÂáΩÊï∞‰∏∫Ôºö\n$$F(x;\\lambda)= \\begin{cases} 1 - e^{-\\lambda x}, x \\geq 0 \\ 0, x \\geq 0. \\end{cases}$$\nÂØπ‰∫éÊåáÊï∞ÂàÜÂ∏ÉÁöÑÊúüÊúõÂÄºÊòØ\n$$E(X) = \\frac{1}{\\lambda}$$\nÊñπÂ∑Æ‰∏∫Ôºö\n$$Var(X) = \\frac{1}{\\lambda^2}$$\n4.3.Ê≠£ÊÄÅÂàÜÂ∏É Ê≠£ÊÄÅÂàÜÂ∏É‰πüË¢´Áß∞‰∏∫È´òÊñØÂàÜÂ∏ÉÔºåÊ≠£ÊÄÅÂàÜÂ∏ÉÁöÑÂèØËÉΩÂÄº‰∏∫ÂÖ®‰ΩìÂÆûÊï∞ÔºåÂèÇÊï∞‰∏∫$\\mu,\\sigma^2$ÔºåË°®Á§∫‰∏∫Ôºö$N(\\mu,\\sigma^2)$\n$$f(x) = \\frac{1}{\\sqrt{2\\pi} \\sigma}\\exp{(-\\frac{(x - \\mu)^2}{2\\sigma^2})}, \\quad x \\in \\mathbf{R}$$\nÊ≠£ÊÄÅÂàÜÂ∏ÉÁöÑÊúüÊúõÂíåÊñπÂ∑Æ‰∏∫:\n$$E(X) = \\mu, Var(X) = \\sigma^2$$\nÊ≠£ÊÄÅÂàÜÂ∏ÉÂÖ∑ÊúâÂÖ∂‰ªñÂ§ßÂ§öÊ¶ÇÁéáÂàÜÂ∏ÉÊâÄ‰∏çÂÖ∑Â§áÁöÑÊÄßË¥®ÔºåÈÇ£Â∞±ÊòØÂ∞ÜÊúç‰ªéÊ≠£ÊÄÅÂàÜÂ∏ÉÁöÑÈöèÊú∫ÂèòÈáè$X$ÂèòÊàê$aX+b$,ÂÖ∂Ê¶ÇÁéá‰πü‰ºöÊúç‰ªéÊ¶ÇÁéáÂàÜÂ∏ÉÔºåÂèòÊç¢ÂêéÁöÑÊúüÊúõÂíåÊñπÂ∑ÆÂèØ‰ª•ËøõË°åÁÆÄÂçïÁöÑËÆ°ÁÆóÔºö\n$$aX+b \\sim N(a\\mu + b,a^2\\sigma^2)$$\nÂà©Áî®Ëøô‰∏™ÊÄßË¥®Ôºå$X \\sim N(\\mu,\\sigma^2)$ ÁöÑÊ†áÂáÜÂåñÂêéÁöÑÈöèÊú∫ÂèòÈáè $Z = \\frac{(X - \\mu)}{\\sigma}$ Êúç‰ªé$N(0,1)$ ÂàÜÂ∏ÉÔºåË¢´Áß∞‰∏∫Ê†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏É„ÄÇ\nÈÄöÂ∏∏ËÆ∞Ê†áÂáÜÊ≠£ÊÄÅÂèòÈáè‰∏∫$Z (Z Score)$ÔºåËÆ∞Ê†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞‰∏∫ $\\phi(x)$ ÔºåÁ¥ØËÆ°ÂàÜÂ∏ÉÂáΩÊï∞‰∏∫ $\\Phi(x)$ÔºåÂàôÊúâÔºö\n$$\\phi(x) = \\frac{1}{\\sqrt{2}{\\pi}}\\exp{(-\\frac{x^2}{2})}, x \\in \\mathbf{R}$$\n$$\\Phi(x) = \\frac{1}{\\sqrt{2\\pi}}\\int_{-\\infty}^{x}{\\exp{(-\\frac{t^2}{2})}dt}$$\n4.4.Âç°ÊñπÂàÜÂ∏É Âç°ÊñπÂàÜÂ∏ÉÔºåÊòØÊ¶ÇÁéáËÆ∫ÂíåÁªüËÆ°Â≠¶‰∏≠Â∏∏Áî®ÁöÑÊ¶ÇÁéáÂàÜÂ∏É„ÄÇk‰∏™Áã¨Á´ãÁöÑÊ†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏ÉÂèòÈáèÁöÑÂπ≥ÊñπÂíåÊúç‰ªéËá™Áî±Â∫¶‰∏∫kÁöÑÂç°ÊñπÂàÜÂ∏É„ÄÇÂç°ÊñπÂàÜÂ∏É‰∏∫ÁâπÊÆäÁöÑ‰ºΩÈ©¨ÂàÜÂ∏ÉÔºåÊòØÁªüËÆ°Êé®Êñ≠‰∏≠Â∫îÁî®ÊúÄ‰∏∫ÂπøÊ≥õÁöÑÊ¶ÇÁéáÂàÜÂ∏É‰πã‰∏Ä„ÄÇ\nËã•$k$‰∏™ÈöèÊú∫ÂèòÈáè $Z_1,Z_2\u0026hellip;Z_k$ ÊòØÁõ∏‰∫íÁã¨Á´ã‰∏îÁ¨¶ÂêàÊ†áÂáÜÊ≠£ÊÄÅÂàÜÂ∏ÉÁöÑÈöèÊú∫ÂèòÈáèÔºåÂàôÈöèÊú∫ÂèòÈáè$Z$ÁöÑÂπ≥ÊñπÂíå„ÄÇ\n$$X = \\sum_{i=1}^{k}{Z_i^2}$$\nË¢´Áß∞‰∏∫Êúç‰ªéËá™Áî±Â∫¶‰∏∫$k$ÁöÑÂç°ÊñπÂàÜÂ∏ÉÔºåËÆ∞‰ΩúÔºö\n$$X \\sim \\chi^2(k)$$\n$$X \\sim \\chi_k^2$$\nÂç°ÊñπÂàÜÂ∏ÉÁöÑÊ¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞‰∏∫Ôºö\n$$f_k(x) = \\frac{1}{2^\\frac{k}{2}\\Gamma(\\frac{k}{2})}x^{\\frac{k}{2}-1}e^{\\frac{-x}{2}}$$\nÂÖ∂‰∏≠ $x \\geq 0 $,ÂΩì $x \\leq 0$Êó∂ÂÄôÔºå$f_k(x) = 0$ÔºåËøôÈáåÁöÑ$\\Gamma$‰ª£Ë°®GammaÂáΩÊï∞\nÂç°ÊñπÂàÜÂ∏ÉÁöÑÊúüÊúõ‰∏∫$k$ÔºåÊñπÂ∑Æ‰∏∫$2k$\n","permalink":"http://knightsnape.github.io/public/posts/math_probability/","summary":"Ê¶ÇÁéáËÆ∫ 1.Ë¥ùÂè∂ÊñØÂÖ¨Âºè\n2.ÈöèÊú∫ÂèòÈáè\n2.1.ÈöèÊú∫ÂèòÈáè\n2.2.ÈöèÊú∫ÂèòÈáèÁöÑÊúüÊúõ‰∏éÊñπÂ∑Æ\n2.3.Ê¶ÇÁéáÂØÜÂ∫¶ÂáΩÊï∞\n3.Á¶ªÊï£ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É\n3.1.‰∫åÈ°πÂàÜÂ∏É\n3.2.Âá†‰ΩïÂàÜÂ∏É\n3.3.Ê≥äÊùæÂàÜÂ∏É\n3.4.Ë∂ÖÂá†‰ΩïÂàÜÂ∏É\n3.5.Ë¥ü‰∫åÈ°πÂàÜÂ∏É\n4.ËøûÁª≠ÈöèÊú∫ÂèòÈáèÂàÜÂ∏É\n4.1.ËøûÁª≠ÂûãÂùáÂåÄÂàÜÂ∏É\n4.2.ÊåáÊï∞ÂàÜÂ∏É\n4.3.Ê≠£ÊÄÅÂàÜÂ∏É\n4.4.Âç°ÊñπÂàÜÂ∏É\n1.Ë¥ùÂè∂ÊñØÂÖ¨Âºè ‰∏Ä‰ΩçÂèÇËßÇËÄÖÂ∞ÜÊù•Âà∞Ë•ø‰∫§Âà©Áâ©Êµ¶Â§ßÂ≠¶ÂèÇÂä†Á†îËÆ®‰ºö„ÄÇ‰ªñÊù•ÁöÑÊ¶ÇÁéá ÁÅ´ËΩ¶„ÄÅÊ±ΩËΩ¶ÂíåËà™Áè≠ÂàÜÂà´‰∏∫0.5„ÄÅ0.3Âíå0.2„ÄÇ‰ª•ÂèäÂª∂ËøüÁöÑÂèØËÉΩÊÄß Ëøô‰∏âÁßçËøêËæìÊñπÂºèÂàÜÂà´ÊòØ0.1„ÄÅ0.3Âíå0.4„ÄÇÂ¶ÇÊûúËÆøÂÆ¢ Á†îËÆ®‰ºöËøüÂà∞‰∫ÜÔºåÈÇ£‰πà‰ªñÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÊòØÂ§öÂ∞ëÔºü\nÂèØ‰ª•‰ΩøÁî®Ë¥ùÂè∂ÊñØÂÖ¨ÂºèÊù•ËÆ°ÁÆóÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºåÂÅáËÆæ‰∫ã‰ª∂CË°®Á§∫ÂèÇËßÇËÄÖËøüÂà∞Ôºå‰∫ã‰ª∂TË°®Á§∫ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶„ÄÇ\nÊ†πÊçÆÂÖ®Ê¶ÇÁéáÂÖ¨ÂºèÔºåÂèØ‰ª•ËÆ°ÁÆóÂèÇËßÇËÄÖËøüÂà∞ÁöÑÊ¶ÇÁéáÔºö\nP(C) = P(C|T) * P(T) + P(C|not T) * P(not T)\nÂÖ∂‰∏≠ÔºåP(C|T)Ë°®Á§∫Âú®ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊÉÖÂÜµ‰∏ã‰ªñËøüÂà∞ÁöÑÊ¶ÇÁéáÔºåP(C|not T)Ë°®Á§∫Âú®ÂèÇËßÇËÄÖ‰∏ç‰πòÂùêÁÅ´ËΩ¶ÁöÑÊÉÖÂÜµ‰∏ã‰ªñËøüÂà∞ÁöÑÊ¶ÇÁéáÔºåP(T)Ë°®Á§∫ÂèÇËßÇËÄÖ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºåP(not T)Ë°®Á§∫ÂèÇËßÇËÄÖ‰∏ç‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéá„ÄÇ\nÊ†πÊçÆÈ¢òÁõÆ‰∏≠ÁöÑÊù°‰ª∂ÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\nP(T) = 0.5 P(not T) = 0.5 P(C|T) = 0.1 P(C|not T) = 0.3\nÂ∞ÜËøô‰∫õÂÄºÂ∏¶ÂÖ•‰∏äÈù¢ÁöÑÂÖ¨ÂºèÔºåÂèØ‰ª•ÂæóÂà∞Ôºö\nP(C) = 0.1 * 0.5 + 0.3 * 0.5 P(C) = 0.2\nÂèÇËßÇËÄÖËøüÂà∞ÁöÑÊ¶ÇÁéáÊòØ0.2„ÄÇ\nÁé∞Âú®‰ΩøÁî®Ë¥ùÂè∂ÊñØÂÖ¨ÂºèËÆ°ÁÆóÂèÇËßÇËÄÖÊòØ‰πòÂùêÁÅ´ËΩ¶ÁöÑÊ¶ÇÁéáÔºö\nP(T|C) = P(C|T) * P(T) / P(C)","title":"Math Probability"},{"content":"ÂØºËà™‰ΩøÁî®ÁöÑÁÆóÊ≥ï 1.Âü∫Êú¨ÁÆóÊ≥ï\n1.1.DFS\n1.2.ÂõæÁöÑÈÅçÂéÜ\n1.3.ÊúÄÁü≠Ë∑ØÈóÆÈ¢ò\n2.‰ª£‰ª∑Âú∞Âõæ\n3.ÊãìÂ±ïÂØºËà™ÁÆóÊ≥ï\n3.1.Âä®ÊÄÅËßÑÂàí\n3.2.ÈÅó‰º†ÁÆóÊ≥ïÔºåËöÅÁæ§ÁÆóÊ≥ï\n3.3.Ê®°ÊãüÈÄÄÁÅ´\n4.Ë∑ØÂæÑÂπ≥ÊªëÁÆóÊ≥ï\n4.1.Â§öÈ°πÂºèÊèíÂÄº\n4.2.Ë¥ùÂ°ûÂ∞îÊõ≤Á∫ø\n4.3.‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫ø,BÊ†∑Êù°Êõ≤Á∫ø\n4.4.ÁâπÊÆäÊõ≤Á∫ø\n5. Á©∫Èó¥ÈááÊ†∑ÁÆóÊ≥ï\n5.1.KËøëÈÇªÁÆóÊ≥ï\n5.2.PRMÁÆóÊ≥ï\n5.3.RRTÁÆóÊ≥ï\n5.4.RRT-Connect\n5.5.RRT*ÁÆóÊ≥ï\n1.Âü∫Êú¨ÁÆóÊ≥ï 1.1.DFS $\\quad$ ÊêúÁ¥¢Ôºå‰πüÂ∞±ÊòØÂØπÁä∂ÊÄÅÁ©∫Èó¥ËøõË°åÊûö‰∏æÔºåÈÄöËøáÁ©∑Â∞ΩÊâÄÊúâÁöÑÂèØËÉΩÊù•ÊâæÂà∞ÊúÄ‰ºòËß£,ÊàñËÄÖÁªüËÆ°ÂêàÊ≥ïËß£ÁöÑ‰∏™Êï∞„ÄÇ\n$\\quad$ ÊêúÁ¥¢ÊúâÂæàÂ§ö‰ºòÂåñÊñπÂºèÔºåÂ¶ÇÂáèÂ∞èÁä∂ÊÄÅÁ©∫Èó¥ÔºåÊõ¥ÊîπÊêúÁ¥¢È°∫Â∫èÔºåÂâ™ÊûùÁ≠âÁ≠â„ÄÇ\n$\\quad$ DFS‰∏∫ÂõæËÆ∫ÁöÑÊ¶ÇÂøµ„ÄÇÂú®ÊêúÁ¥¢ÁÆóÊ≥ï‰∏≠ÔºåËØ•ËØçÂ∏∏Â∏∏Âà©Áî®ÈÄíÂΩíÂáΩÊï∞Êñπ‰æøÂÆûÁé∞Êö¥ÂäõÊûö‰∏æÁöÑÁÆóÊ≥ï„ÄÇ\n$\\quad$ Â∏∏ËßÅ‰ΩøÁî®ÁöÑÂèØËÉΩÊñπÊ°àÔºåÂØπÂ∫îÁöÑÊ°ÜÊû∂Â¶Ç‰∏ã:\nvoid dfs(int state) { if(find) { return; } //ÂèØ‰ª•Êúâ‰∏çÂêåÁöÑÈÅçÂéÜÁ≠ñÁï• dfs(next(state)); } $\\quad$ Â∏∏ËßÅÁöÑÂÆû‰æãÂ¶Ç‰∏ãÔºöÊääÊ≠£Êï¥Êï∞$n$ÂàÜËß£Êàê3‰∏™‰∏çÂêåÁöÑÊ≠£Êï¥Êï∞ÔºåÂ¶Ç6=1+2+3„ÄÇÊéíÂú®ÂêéÈù¢ÁöÑÊï∞ÂøÖÈ°ªÂ§ß‰∫éÂâçÈù¢ÁöÑÊï∞ÔºåËæìÂá∫ÊâÄÊúâÁöÑÊñπÊ°àÊï∞„ÄÇ\nÂèØ‰ª•ËÄÉËôëÂæ™ÁéØÔºö\nfor (int i = 1; i \u0026lt;= n; ++i) for (int j = i; j \u0026lt;= n; ++j) for (int k = j; k \u0026lt;= n; ++k) if (i + j + k == n) printf(\u0026#34;%d = %d + %d + %d\\n\u0026#34;, n, i, j, k); $\\quad$ ÂèØ‰ª•ËÄÉËôëÂ¶Ç‰∏ãÊñπÊ°àÔºöËÆæ‰∏ÄÁªÑÊñπÊ°àÂ∞ÜÊ≠£Êï¥Êï∞$n$ÂàÜËß£Êàê$k$‰∏™Ê≠£Êï¥Êï∞$a_1,a_2,\u0026hellip;,a_k$ÁöÑÂíå„ÄÇ\n$\\quad$ Êàë‰ª¨Â∞ÜÈóÆÈ¢òÂàÜÂ±ÇÔºåÁ¨¨$i$Â±ÇÂÜ≥ÂÆö$a_i$„ÄÇÂàô‰∏∫‰∫ÜËøõË°åÁ¨¨$i$Â±ÇÂÜ≥Á≠ñÔºåÊàë‰ª¨ÈúÄË¶ÅËÆ∞ÂΩï‰∏â‰∏™Áä∂ÊÄÅÂèòÈáè$n - \\sum_{j=1}^{i}{a_j}$ÔºåË°®Á§∫ÂêéÈù¢ÊâÄÊúâÊ≠£Êï¥Êï∞ÁöÑÂíåÔºõ‰ª•Âèä$a_{i-1}$ÔºåË°®Á§∫Ââç‰∏ÄÂ±ÇÁöÑÊ≠£Êï¥Êï∞Ôºå‰ª•Á°Æ‰øùÊ≠£Êï¥Êï∞Â∫ïÂ±ÇÔºå‰ª•Âèä$i$ÔºåÁ°Æ‰øùÊàë‰ª¨ÊúÄÂ§öËæìÂá∫$m$‰∏™Ê≠£Êï¥Êï∞„ÄÇ\n$\\quad$ ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö\nint m, arr[103]; // arr Áî®‰∫éËÆ∞ÂΩïÊñπÊ°à void dfs(int n, int i, int a) { if (n == 0) { for (int j = 1; j \u0026lt;= i - 1; ++j) printf(\u0026#34;%d \u0026#34;, arr[j]); printf(\u0026#34;\\n\u0026#34;); } if (i \u0026lt;= m) { for (int j = a; j \u0026lt;= n; ++j) { arr[i] = j; dfs(n - j, i + 1, j); // ËØ∑‰ªîÁªÜÊÄùËÄÉËØ•Ë°åÂê´‰πâ„ÄÇ } } } // ‰∏ªÂáΩÊï∞ scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;n, \u0026amp;m); dfs(n, 1, 1); 1.2.ÂõæÁöÑÈÅçÂéÜ Âõæ (graph) ÊòØ‰∏Ä‰∏™‰∫åÂÖÉÁªÑ $G=(V(G), E(G))$„ÄÇÂÖ∂‰∏≠ $V(G)$ ÊòØÈùûÁ©∫ÈõÜÔºåÁß∞‰∏∫ ÁÇπÈõÜ (vertex set)ÔºåÂØπ‰∫é $V$ ‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†ÔºåÊàë‰ª¨Áß∞ÂÖ∂‰∏∫ È°∂ÁÇπ (vertex) Êàñ ËäÇÁÇπ (node)ÔºåÁÆÄÁß∞ ÁÇπÔºõ$E(G)$ ‰∏∫ $V(G)$ ÂêÑÁªìÁÇπ‰πãÈó¥ËæπÁöÑÈõÜÂêàÔºåÁß∞‰∏∫ ËæπÈõÜ (edge set)„ÄÇ\nÂ∏∏Áî® $G=(V,E)$ Ë°®Á§∫Âõæ„ÄÇ\nÂΩì $V,E$ ÈÉΩÊòØÊúâÈôêÈõÜÂêàÊó∂ÔºåÁß∞ $G$ ‰∏∫ ÊúâÈôêÂõæ„ÄÇ\nÂΩì $V$ Êàñ $E$ ÊòØÊó†ÈôêÈõÜÂêàÊó∂ÔºåÁß∞ $G$ ‰∏∫ Êó†ÈôêÂõæ„ÄÇ\nÂõæÊúâÂ§öÁßçÔºåÂåÖÊã¨ Êó†ÂêëÂõæ (undirected graph)ÔºåÊúâÂêëÂõæ (directed graph)ÔºåÊ∑∑ÂêàÂõæ (mixed graph) Á≠â„ÄÇ\nËã• $G$ ‰∏∫Êó†ÂêëÂõæÔºåÂàô $E$ ‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†‰∏∫‰∏Ä‰∏™Êó†Â∫è‰∫åÂÖÉÁªÑ $(u, v)$ÔºåÁß∞‰Ωú Êó†ÂêëËæπ (undirected edge)ÔºåÁÆÄÁß∞ Ëæπ (edge)ÔºåÂÖ∂‰∏≠ $u, v \\in V$„ÄÇËÆæ $e = (u, v)$ÔºåÂàô $u$ Âíå $v$ Áß∞‰∏∫ $e$ ÁöÑ Á´ØÁÇπ (endpoint)„ÄÇ\nËã• $G$ ‰∏∫ÊúâÂêëÂõæÔºåÂàô $E$ ‰∏≠ÁöÑÊØè‰∏Ä‰∏™ÂÖÉÁ¥†‰∏∫‰∏Ä‰∏™ÊúâÂ∫è‰∫åÂÖÉÁªÑ $(u, v)$ÔºåÊúâÊó∂‰πüÂÜô‰Ωú $u \\to v$ÔºåÁß∞‰Ωú ÊúâÂêëËæπ (directed edge) Êàñ Âºß (arc)ÔºåÂú®‰∏çÂºïËµ∑Ê∑∑Ê∑ÜÁöÑÊÉÖÂÜµ‰∏ã‰πüÂèØ‰ª•Áß∞‰Ωú Ëæπ (edge)„ÄÇËÆæ $e = u \\to v$ÔºåÂàôÊ≠§Êó∂ $u$ Áß∞‰∏∫ $e$ ÁöÑ Ëµ∑ÁÇπ (tail)Ôºå$v$ Áß∞‰∏∫ $e$ ÁöÑ ÁªàÁÇπ (head)ÔºåËµ∑ÁÇπÂíåÁªàÁÇπ‰πüÁß∞‰∏∫ $e$ ÁöÑ Á´ØÁÇπ (endpoint)„ÄÇÂπ∂Áß∞ $u$ ÊòØ $v$ ÁöÑÁõ¥Êé•ÂâçÈ©±Ôºå$v$ ÊòØ $u$ ÁöÑÁõ¥Êé•ÂêéÁªß„ÄÇ\n???+ note \u0026ldquo;‰∏∫‰ªÄ‰πàËµ∑ÁÇπÊòØ tailÔºåÁªàÁÇπÊòØ headÔºü\u0026rdquo; ËæπÈÄöÂ∏∏Áî®ÁÆ≠Â§¥Ë°®Á§∫ÔºåËÄåÁÆ≠Â§¥ÊòØ‰ªé„ÄåÂ∞æ„ÄçÊåáÂêë„ÄåÂ§¥„ÄçÁöÑ„ÄÇ\nËã• $G$ ‰∏∫Ê∑∑ÂêàÂõæÔºåÂàô $E$ ‰∏≠Êó¢Êúâ ÊúâÂêëËæπÔºåÂèàÊúâ Êó†ÂêëËæπ„ÄÇ\nËã• $G$ ÁöÑÊØèÊù°Ëæπ $e_k=(u_k,v_k)$ ÈÉΩË¢´Ëµã‰∫à‰∏Ä‰∏™Êï∞‰Ωú‰∏∫ËØ•ËæπÁöÑ ÊùÉÔºåÂàôÁß∞ $G$ ‰∏∫ ËµãÊùÉÂõæ„ÄÇÂ¶ÇÊûúËøô‰∫õÊùÉÈÉΩÊòØÊ≠£ÂÆûÊï∞ÔºåÂ∞±Áß∞ $G$ ‰∏∫ Ê≠£ÊùÉÂõæ„ÄÇ\nÂõæ $G$ ÁöÑÁÇπÊï∞ $\\left| V(G) \\right|$ ‰πüË¢´Áß∞‰ΩúÂõæ $G$ ÁöÑ Èò∂ (order)„ÄÇ\nÂΩ¢Ë±°Âú∞ËØ¥ÔºåÂõæÊòØÁî±Ëã•Âπ≤ÁÇπ‰ª•ÂèäËøûÊé•ÁÇπ‰∏éÁÇπÁöÑËæπÊûÑÊàêÁöÑ„ÄÇ\nÈÄîÂæÑ (walk)ÔºöÈÄîÂæÑÊòØËøûÊé•‰∏ÄËøû‰∏≤È°∂ÁÇπÁöÑËæπÁöÑÂ∫èÂàóÔºåÂèØ‰ª•‰∏∫ÊúâÈôêÊàñÊó†ÈôêÈïøÂ∫¶„ÄÇÂΩ¢ÂºèÂåñÂú∞ËØ¥Ôºå‰∏ÄÊù°ÊúâÈôêÈÄîÂæÑ $w$ ÊòØ‰∏Ä‰∏™ËæπÁöÑÂ∫èÂàó $e_1, e_2, \\ldots, e_k$Ôºå‰ΩøÂæóÂ≠òÂú®‰∏Ä‰∏™È°∂ÁÇπÂ∫èÂàó $v_0, v_1, \\ldots, v_k$ Êª°Ë∂≥ $e_i = (v_{i-1}, v_i)$ÔºåÂÖ∂‰∏≠ $i \\in [1, k]$„ÄÇËøôÊ†∑ÁöÑÈÄîÂæÑÂèØ‰ª•ÁÆÄÂÜô‰∏∫ $v_0 \\to v_1 \\to v_2 \\to \\cdots \\to v_k$„ÄÇÈÄöÂ∏∏Êù•ËØ¥ÔºåËæπÁöÑÊï∞Èáè $k$ Ë¢´Áß∞‰ΩúËøôÊù°ÈÄîÂæÑÁöÑ ÈïøÂ∫¶ÔºàÂ¶ÇÊûúËæπÊòØÂ∏¶ÊùÉÁöÑÔºåÈïøÂ∫¶ÈÄöÂ∏∏ÊåáÈÄîÂæÑ‰∏äÁöÑËæπÊùÉ‰πãÂíåÔºåÈ¢òÁõÆ‰∏≠‰πüÂèØËÉΩÂè¶ÊúâÂÆö‰πâÔºâ„ÄÇ\nËøπ (trail)ÔºöÂØπ‰∫é‰∏ÄÊù°ÈÄîÂæÑ $w$ÔºåËã• $e_1, e_2, \\ldots, e_k$ ‰∏§‰∏§‰∫í‰∏çÁõ∏ÂêåÔºåÂàôÁß∞ $w$ ÊòØ‰∏ÄÊù°Ëøπ„ÄÇ\nË∑ØÂæÑ (path)ÔºàÂèàÁß∞ ÁÆÄÂçïË∑ØÂæÑ (simple path)ÔºâÔºöÂØπ‰∫é‰∏ÄÊù°Ëøπ $w$ÔºåËã•ÂÖ∂ËøûÊé•ÁöÑÁÇπÁöÑÂ∫èÂàó‰∏≠ÁÇπ‰∏§‰∏§‰∏çÂêåÔºåÂàôÁß∞ $w$ ÊòØ‰∏ÄÊù°Ë∑ØÂæÑ„ÄÇ\nÂõûË∑Ø (circuit)ÔºöÂØπ‰∫é‰∏ÄÊù°Ëøπ $w$ÔºåËã• $v_0 = v_k$ÔºåÂàôÁß∞ $w$ ÊòØ‰∏ÄÊù°ÂõûË∑Ø„ÄÇ\nÁéØ/Âúà (cycle)ÔºàÂèàÁß∞ ÁÆÄÂçïÂõûË∑Ø/ÁÆÄÂçïÁéØ (simple circuit)ÔºâÔºöÂØπ‰∫é‰∏ÄÊù°ÂõûË∑Ø $w$ÔºåËã• $v_0 = v_k$ ÊòØÁÇπÂ∫èÂàó‰∏≠ÂîØ‰∏ÄÈáçÂ§çÂá∫Áé∞ÁöÑÁÇπÂØπÔºåÂàôÁß∞ $w$ ÊòØ‰∏Ä‰∏™ÁéØ„ÄÇ\nÂÖ≥‰∫éË∑ØÂæÑÁöÑÂÆö‰πâÂú®‰∏çÂêåÂú∞ÊñπÂèØËÉΩÊúâÊâÄ‰∏çÂêåÔºåÂ¶ÇÔºå„ÄåË∑ØÂæÑ„ÄçÂèØËÉΩÊåáÊú¨Êñá‰∏≠ÁöÑ„ÄåÈÄîÂæÑ„ÄçÔºå„ÄåÁéØ„ÄçÂèØËÉΩÊåáÊú¨Êñá‰∏≠ÁöÑ„ÄåÂõûË∑Ø„Äç„ÄÇÂ¶ÇÊûúÂú®È¢òÁõÆ‰∏≠ÁúãÂà∞Á±ª‰ººÁöÑËØçÊ±áÔºå‰∏îÊ≤°Êúâ„ÄåÁÆÄÂçïË∑ØÂæÑ„Äç/„ÄåÈùûÁÆÄÂçïË∑ØÂæÑ„ÄçÔºàÂç≥Êú¨Êñá‰∏≠ÁöÑ„ÄåÈÄîÂæÑ„ÄçÔºâÁ≠âÁâπÊÆäËØ¥ÊòéÔºåÊúÄÂ•ΩËØ¢ÈóÆ‰∏Ä‰∏ãÂÖ∑‰ΩìÊåá‰ªÄ‰πà„ÄÇ\nÂØπ‰∫é‰∏ÄÂº†Êó†ÂêëÂõæ $G = (V, E)$ÔºåÂØπ‰∫é $u, v \\in V$ÔºåËã•Â≠òÂú®‰∏ÄÊù°ÈÄîÂæÑ‰ΩøÂæó $v_0 = u, v_k = v$ÔºåÂàôÁß∞ $u$ Âíå $v$ ÊòØ ËøûÈÄöÁöÑ (connected)„ÄÇÁî±ÂÆö‰πâÔºå‰ªªÊÑè‰∏Ä‰∏™È°∂ÁÇπÂíåËá™Ë∫´ËøûÈÄöÔºå‰ªªÊÑè‰∏ÄÊù°ËæπÁöÑ‰∏§‰∏™Á´ØÁÇπËøûÈÄö„ÄÇ\nËã•Êó†ÂêëÂõæ $G = (V, E)$ÔºåÊª°Ë∂≥ÂÖ∂‰∏≠‰ªªÊÑè‰∏§‰∏™È°∂ÁÇπÂùáËøûÈÄöÔºåÂàôÁß∞ $G$ ÊòØ ËøûÈÄöÂõæ (connected graph)Ôºå$G$ ÁöÑËøô‰∏ÄÊÄßË¥®Áß∞‰Ωú ËøûÈÄöÊÄß (connectivity)„ÄÇ\nËã• $H$ ÊòØ $G$ ÁöÑ‰∏Ä‰∏™ËøûÈÄöÂ≠êÂõæÔºå‰∏î‰∏çÂ≠òÂú® $F$ Êª°Ë∂≥ $H\\subsetneq F \\subseteq G$ ‰∏î $F$ ‰∏∫ËøûÈÄöÂõæÔºåÂàô $H$ ÊòØ $G$ ÁöÑ‰∏Ä‰∏™ ËøûÈÄöÂùó/ËøûÈÄöÂàÜÈáè (connected component)ÔºàÊûÅÂ§ßËøûÈÄöÂ≠êÂõæÔºâ„ÄÇ\nÂØπ‰∫é‰∏ÄÂº†ÊúâÂêëÂõæ $G = (V, E)$ÔºåÂØπ‰∫é $u, v \\in V$ÔºåËã•Â≠òÂú®‰∏ÄÊù°ÈÄîÂæÑ‰ΩøÂæó $v_0 = u, v_k = v$ÔºåÂàôÁß∞ $u$ ÂèØËææ $v$„ÄÇÁî±ÂÆö‰πâÔºå‰ªªÊÑè‰∏Ä‰∏™È°∂ÁÇπÂèØËææËá™Ë∫´Ôºå‰ªªÊÑè‰∏ÄÊù°ËæπÁöÑËµ∑ÁÇπÂèØËææÁªàÁÇπ„ÄÇÔºàÊó†ÂêëÂõæ‰∏≠ÁöÑËøûÈÄö‰πüÂèØ‰ª•ËßÜ‰ΩúÂèåÂêëÂèØËææ„ÄÇÔºâ\nËã•‰∏ÄÂº†ÊúâÂêëÂõæÁöÑËäÇÁÇπ‰∏§‰∏§‰∫íÁõ∏ÂèØËææÔºåÂàôÁß∞ËøôÂº†ÂõæÊòØ Âº∫ËøûÈÄöÁöÑ (strongly connected)„ÄÇ\nËã•‰∏ÄÂº†ÊúâÂêëÂõæÁöÑËæπÊõøÊç¢‰∏∫Êó†ÂêëËæπÂêéÂèØ‰ª•ÂæóÂà∞‰∏ÄÂº†ËøûÈÄöÂõæÔºåÂàôÁß∞ÂéüÊù•ËøôÂº†ÊúâÂêëÂõæÊòØ Âº±ËøûÈÄöÁöÑ (weakly connected)„ÄÇ\n‰∏éËøûÈÄöÂàÜÈáèÁ±ª‰ººÔºå‰πüÊúâ Âº±ËøûÈÄöÂàÜÈáè (weakly connected component)ÔºàÊûÅÂ§ßÂº±ËøûÈÄöÂ≠êÂõæÔºâÂíå Âº∫ËøûÈÄöÂàÜÈáè (strongly connected component)ÔºàÊûÅÂ§ßÂº∫ËøûÈÄöÂ≠êÂõæÔºâ„ÄÇ\nÂõæÁöÑÂ≠òÂÇ®ÂíåÈÅçÂéÜ Áõ¥Êé•Â≠òËæπ ‰ΩøÁî®‰∏Ä‰∏™Êï∞ÁªÑÊù•Â≠òËæπÔºåÊï∞ÁªÑ‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†ÈÉΩÂåÖÂê´‰∏ÄÊù°ËæπÁöÑËµ∑ÁÇπ‰∏éÁªàÁÇπ(Â∏¶ËæπÊùÉÁöÑÂõæËøòÂåÖÂê´ËæπÊùÉ)„ÄÇ(ÊàñËÄÖ‰ΩøÁî®Â§ö‰∏™Êï∞ÁªÑÂàÜÂà´Â≠òËµ∑ÁÇπÔºåÁªàÁÇπÂíåËæπÊùÉ„ÄÇ)\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; struct Edge { int u, v; }; int n, m; vector\u0026lt;Edge\u0026gt; e; vector\u0026lt;bool\u0026gt; vis; bool find_edge(int u, int v) { for (int i = 1; i \u0026lt;= m; ++i) { if (e[i].u == u \u0026amp;\u0026amp; e[i].v == v) { return true; } } return false; } void dfs(int u) { if (vis[u]) return; vis[u] = true; for (int i = 1; i \u0026lt;= m; ++i) { if (e[i].u == u) { dfs(e[i].v); } } } int main() { cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vis.resize(n + 1, false); e.resize(m + 1); for (int i = 1; i \u0026lt;= m; ++i) cin \u0026gt;\u0026gt; e[i].u \u0026gt;\u0026gt; e[i].v; return 0; } Â§çÊùÇÂ∫¶ Êü•ËØ¢ÊòØÂê¶Â≠òÂú®ÊüêÊù°ËæπÔºö$O(m)$„ÄÇ\nÈÅçÂéÜ‰∏Ä‰∏™ÁÇπÁöÑÊâÄÊúâÂá∫ËæπÔºö$O(m)$„ÄÇ\nÈÅçÂéÜÊï¥Âº†ÂõæÔºö$O(nm)$„ÄÇ\nÁ©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(m)$„ÄÇ\nÂ∫îÁî® Áî±‰∫éÁõ¥Êé•Â≠òËæπÁöÑÈÅçÂéÜÊïàÁéá‰Ωé‰∏ãÔºå‰∏ÄËà¨‰∏çÁî®‰∫éÈÅçÂéÜÂõæ„ÄÇ\nÂú®KruskalÁÆóÊ≥ï ‰∏≠ÔºåÁî±‰∫éÈúÄË¶ÅÂ∞ÜËæπÊåâËæπÊùÉÊéíÂ∫èÔºåÈúÄË¶ÅÁõ¥Êé•Â≠òËæπ„ÄÇ\nÂú®ÊúâÁöÑÈ¢òÁõÆ‰∏≠ÔºåÈúÄË¶ÅÂ§öÊ¨°Âª∫ÂõæÔºàÂ¶ÇÂª∫‰∏ÄÈÅçÂéüÂõæÔºåÂª∫‰∏ÄÈÅçÂèçÂõæÔºâÔºåÊ≠§Êó∂Êó¢ÂèØ‰ª•‰ΩøÁî®Â§ö‰∏™ÂÖ∂ÂÆÉÊï∞ÊçÆÁªìÊûÑÊù•ÂêåÊó∂Â≠òÂÇ®Â§öÂº†ÂõæÔºå‰πüÂèØ‰ª•Â∞ÜËæπÁõ¥Êé•Â≠ò‰∏ãÊù•ÔºåÈúÄË¶ÅÈáçÊñ∞Âª∫ÂõæÊó∂Âà©Áî®Áõ¥Êé•Â≠ò‰∏ãÁöÑËæπÊù•Âª∫Âõæ„ÄÇ\nÈÇªÊé•Áü©Èòµ ‰ΩøÁî®‰∏Ä‰∏™‰∫åÁª¥Êï∞ÁªÑ adj Êù•Â≠òËæπÔºåÂÖ∂‰∏≠ adj[u][v] ‰∏∫ 1 Ë°®Á§∫Â≠òÂú® $u$ Âà∞ $v$ ÁöÑËæπÔºå‰∏∫ 0 Ë°®Á§∫‰∏çÂ≠òÂú®„ÄÇÂ¶ÇÊûúÊòØÂ∏¶ËæπÊùÉÁöÑÂõæÔºåÂèØ‰ª•Âú® adj[u][v] ‰∏≠Â≠òÂÇ® $u$ Âà∞ $v$ ÁöÑËæπÁöÑËæπÊùÉ„ÄÇ\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; int n, m; vector\u0026lt;bool\u0026gt; vis; vector\u0026lt;vector\u0026lt;bool\u0026gt; \u0026gt; adj; bool find_edge(int u, int v) { return adj[u][v]; } void dfs(int u) { if (vis[u]) return; vis[u] = true; for (int v = 1; v \u0026lt;= n; ++v) { if (adj[u][v]) { dfs(v); } } } int main() { cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vis.resize(n + 1, false); adj.resize(n + 1, vector\u0026lt;bool\u0026gt;(n + 1, false)); for (int i = 1; i \u0026lt;= m; ++i) { int u, v; cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; adj[u][v] = true; } return 0; } Â§çÊùÇÂ∫¶ Êü•ËØ¢ÊòØÂê¶Â≠òÂú®ÊüêÊù°ËæπÔºö$O(1)$„ÄÇ\nÈÅçÂéÜ‰∏Ä‰∏™ÁÇπÁöÑÊâÄÊúâÂá∫ËæπÔºö$O(n)$„ÄÇ\nÈÅçÂéÜÊï¥Âº†ÂõæÔºö$O(n^2)$„ÄÇ\nÁ©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(n^2)$„ÄÇ\nÂ∫îÁî® ÈÇªÊé•Áü©ÈòµÂè™ÈÄÇÁî®‰∫éÊ≤°ÊúâÈáçËæπÔºàÊàñÈáçËæπÂèØ‰ª•ÂøΩÁï•ÔºâÁöÑÊÉÖÂÜµ„ÄÇ\nÂÖ∂ÊúÄÊòæËëóÁöÑ‰ºòÁÇπÊòØÂèØ‰ª• $O(1)$ Êü•ËØ¢‰∏ÄÊù°ËæπÊòØÂê¶Â≠òÂú®„ÄÇ\nÁî±‰∫éÈÇªÊé•Áü©ÈòµÂú®Á®ÄÁñèÂõæ‰∏äÊïàÁéáÂæà‰ΩéÔºàÂ∞§ÂÖ∂ÊòØÂú®ÁÇπÊï∞ËæÉÂ§öÁöÑÂõæ‰∏äÔºåÁ©∫Èó¥Êó†Ê≥ïÊâøÂèóÔºâÔºåÊâÄ‰ª•‰∏ÄËà¨Âè™‰ºöÂú®Á®†ÂØÜÂõæ‰∏ä‰ΩøÁî®ÈÇªÊé•Áü©Èòµ„ÄÇ\nÈÇªÊé•Ë°® ‰ΩøÁî®‰∏Ä‰∏™ÊîØÊåÅÂä®ÊÄÅÂ¢ûÂä†ÂÖÉÁ¥†ÁöÑÊï∞ÊçÆÁªìÊûÑÊûÑÊàêÁöÑÊï∞ÁªÑÔºåÂ¶Ç vector\u0026lt;int\u0026gt; adj[n + 1] Êù•Â≠òËæπÔºåÂÖ∂‰∏≠ adj[u] Â≠òÂÇ®ÁöÑÊòØÁÇπ $u$ ÁöÑÊâÄÊúâÂá∫ËæπÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØÔºàÁªàÁÇπ„ÄÅËæπÊùÉÁ≠âÔºâ„ÄÇ\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; int n, m; vector\u0026lt;bool\u0026gt; vis; vector\u0026lt;vector\u0026lt;int\u0026gt; \u0026gt; adj; bool find_edge(int u, int v) { for (int i = 0; i \u0026lt; adj[u].size(); ++i) { if (adj[u][i] == v) { return true; } } return false; } void dfs(int u) { if (vis[u]) return; vis[u] = true; for (int i = 0; i \u0026lt; adj[u].size(); ++i) dfs(adj[u][i]); } int main() { cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vis.resize(n + 1, false); adj.resize(n + 1); for (int i = 1; i \u0026lt;= m; ++i) { int u, v; cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; adj[u].push_back(v); } return 0; } Â§çÊùÇÂ∫¶ Êü•ËØ¢ÊòØÂê¶Â≠òÂú® $u$ Âà∞ $v$ ÁöÑËæπÔºö$O(d^+(u))$ÔºàÂ¶ÇÊûú‰∫ãÂÖàËøõË°å‰∫ÜÊéíÂ∫èÂ∞±ÂèØ‰ª•‰ΩøÁî® ‰∫åÂàÜÊü•Êâæ ÂÅöÂà∞ $O(\\log(d^+(u)))$Ôºâ„ÄÇ\nÈÅçÂéÜÁÇπ $u$ ÁöÑÊâÄÊúâÂá∫ËæπÔºö$O(d^+(u))$„ÄÇ\nÈÅçÂéÜÊï¥Âº†ÂõæÔºö$O(n+m)$„ÄÇ\nÁ©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(m)$„ÄÇ\nÈìæÂºèÂâçÂêëÊòü // head[u] Âíå cnt ÁöÑÂàùÂßãÂÄºÈÉΩ‰∏∫ -1 void add(int u, int v) { nxt[++cnt] = head[u]; // ÂΩìÂâçËæπÁöÑÂêéÁªß head[u] = cnt; // Ëµ∑ÁÇπ u ÁöÑÁ¨¨‰∏ÄÊù°Ëæπ to[cnt] = v; // ÂΩìÂâçËæπÁöÑÁªàÁÇπ } // ÈÅçÂéÜ u ÁöÑÂá∫Ëæπ for (int i = head[u]; ~i; i = nxt[i]) { // ~i Ë°®Á§∫ i != -1 int v = to[i]; } ÂèÇËÄÉÁ§∫‰æã\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; int n, m; vector\u0026lt;bool\u0026gt; vis; vector\u0026lt;int\u0026gt; head, nxt, to; void add(int u, int v) { nxt.push_back(head[u]); head[u] = to.size(); to.push_back(v); } bool find_edge(int u, int v) { for (int i = head[u]; ~i; i = nxt[i]) { // ~i Ë°®Á§∫ i != -1 if (to[i] == v) { return true; } } return false; } void dfs(int u) { if (vis[u]) return; vis[u] = true; for (int i = head[u]; ~i; i = nxt[i]) dfs(to[i]); } int main() { cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vis.resize(n + 1, false); head.resize(n + 1, -1); for (int i = 1; i \u0026lt;= m; ++i) { int u, v; cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; add(u, v); } return 0; } Â§çÊùÇÂ∫¶ Êü•ËØ¢ÊòØÂê¶Â≠òÂú® $u$ Âà∞ $v$ ÁöÑËæπÔºö$O(d^+(u))$„ÄÇ\nÈÅçÂéÜÁÇπ $u$ ÁöÑÊâÄÊúâÂá∫ËæπÔºö$O(d^+(u))$„ÄÇ\nÈÅçÂéÜÊï¥Âº†ÂõæÔºö$O(n+m)$„ÄÇ\nÁ©∫Èó¥Â§çÊùÇÂ∫¶Ôºö$O(m)$„ÄÇ\n1.3.ÊúÄÁü≠Ë∑ØÈóÆÈ¢ò ‰∏∫‰∫ÜÊñπ‰æøÂèôËø∞ÔºåËøôÈáåÂÖàÁªôÂá∫‰∏ãÊñáÂ∞Ü‰ºöÁî®Âà∞ÁöÑ‰∏Ä‰∫õËÆ∞Âè∑ÁöÑÂê´‰πâ„ÄÇ\n$n$ ‰∏∫Âõæ‰∏äÁÇπÁöÑÊï∞ÁõÆÔºå$m$ ‰∏∫Âõæ‰∏äËæπÁöÑÊï∞ÁõÆÔºõ $s$ ‰∏∫ÊúÄÁü≠Ë∑ØÁöÑÊ∫êÁÇπÔºõ $D(u)$ ‰∏∫ $s$ ÁÇπÂà∞ $u$ ÁÇπÁöÑ ÂÆûÈôÖ ÊúÄÁü≠Ë∑ØÈïøÂ∫¶Ôºõ $dis(u)$ ‰∏∫ $s$ ÁÇπÂà∞ $u$ ÁÇπÁöÑ ‰º∞ËÆ° ÊúÄÁü≠Ë∑ØÈïøÂ∫¶„ÄÇ‰ªª‰ΩïÊó∂ÂÄôÈÉΩÊúâ $dis(u) \\geq D(u)$„ÄÇÁâπÂà´Âú∞ÔºåÂΩìÊúÄÁü≠Ë∑ØÁÆóÊ≥ïÁªàÊ≠¢Êó∂ÔºåÂ∫îÊúâ $dis(u)=D(u)$„ÄÇ $w(u,v)$ ‰∏∫ $(u,v)$ Ëøô‰∏ÄÊù°ËæπÁöÑËæπÊùÉ„ÄÇ FloydÁÆóÊ≥ï ÊòØÁî®Êù•Ê±Ç‰ªªÊÑè‰∏§‰∏™ÁªìÁÇπ‰πãÈó¥ÁöÑÊúÄÁü≠Ë∑ØÁöÑ„ÄÇ\nÂ§çÊùÇÂ∫¶ÊØîËæÉÈ´òÔºå‰ΩÜÊòØÂ∏∏Êï∞Â∞èÔºåÂÆπÊòìÂÆûÁé∞„ÄÇ\nÈÄÇÁî®‰∫é‰ªª‰ΩïÂõæÔºå‰∏çÁÆ°ÊúâÂêëÊó†ÂêëÔºåËæπÊùÉÊ≠£Ë¥üÔºå‰ΩÜÊòØÊúÄÁü≠Ë∑ØÂøÖÈ°ªÂ≠òÂú®„ÄÇÔºà‰∏çËÉΩÊúâ‰∏™Ë¥üÁéØÔºâ\nÊàë‰ª¨ÂÆö‰πâ‰∏Ä‰∏™Êï∞ÁªÑ f[k][x][y]ÔºåË°®Á§∫Âè™ÂÖÅËÆ∏ÁªèËøáÁªìÁÇπ $1$ Âà∞ $k$Ôºà‰πüÂ∞±ÊòØËØ¥ÔºåÂú®Â≠êÂõæ $V\u0026rsquo;={1, 2, \\ldots, k}$ ‰∏≠ÁöÑË∑ØÂæÑÔºåÊ≥®ÊÑèÔºå$x$ ‰∏é $y$ ‰∏ç‰∏ÄÂÆöÂú®Ëøô‰∏™Â≠êÂõæ‰∏≠ÔºâÔºåÁªìÁÇπ $x$ Âà∞ÁªìÁÇπ $y$ ÁöÑÊúÄÁü≠Ë∑ØÈïøÂ∫¶„ÄÇ\nÂæàÊòæÁÑ∂Ôºåf[n][x][y] Â∞±ÊòØÁªìÁÇπ $x$ Âà∞ÁªìÁÇπ $y$ ÁöÑÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÔºàÂõ†‰∏∫ $V\u0026rsquo;={1, 2, \\ldots, n}$ Âç≥‰∏∫ $V$ Êú¨Ë∫´ÔºåÂÖ∂Ë°®Á§∫ÁöÑÊúÄÁü≠Ë∑ØÂæÑÂ∞±ÊòØÊâÄÊ±ÇË∑ØÂæÑÔºâ„ÄÇ\nÊé•‰∏ãÊù•ËÄÉËôëÂ¶Ç‰ΩïÊ±ÇÂá∫ f Êï∞ÁªÑÁöÑÂÄº„ÄÇ\nf[0][x][y]Ôºö$x$ ‰∏é $y$ ÁöÑËæπÊùÉÔºåÊàñËÄÖ $0$ÔºåÊàñËÄÖ $+\\infty$Ôºàf[0][x][y] ‰ªÄ‰πàÊó∂ÂÄôÂ∫îËØ•ÊòØ $+\\infty$ÔºüÂΩì $x$ ‰∏é $y$ Èó¥ÊúâÁõ¥Êé•Áõ∏ËøûÁöÑËæπÁöÑÊó∂ÂÄôÔºå‰∏∫ÂÆÉ‰ª¨ÁöÑËæπÊùÉÔºõÂΩì $x = y$ ÁöÑÊó∂ÂÄô‰∏∫Èõ∂ÔºåÂõ†‰∏∫Âà∞Êú¨Ë∫´ÁöÑË∑ùÁ¶ª‰∏∫Èõ∂ÔºõÂΩì $x$ ‰∏é $y$ Ê≤°ÊúâÁõ¥Êé•Áõ∏ËøûÁöÑËæπÁöÑÊó∂ÂÄôÔºå‰∏∫ $+\\infty$Ôºâ„ÄÇ\nf[k][x][y] = min(f[k-1][x][y], f[k-1][x][k]+f[k-1][k][y])Ôºàf[k-1][x][y]Ôºå‰∏∫‰∏çÁªèËøá $k$ ÁÇπÁöÑÊúÄÁü≠Ë∑ØÂæÑÔºåËÄå f[k-1][x][k]+f[k-1][k][y]Ôºå‰∏∫ÁªèËøá‰∫Ü $k$ ÁÇπÁöÑÊúÄÁü≠Ë∑ØÔºâ„ÄÇ\n‰∏äÈù¢‰∏§Ë°åÈÉΩÊòæÁÑ∂ÊòØÂØπÁöÑÔºåÊâÄ‰ª•ËØ¥Ëøô‰∏™ÂÅöÊ≥ïÁ©∫Èó¥ÊòØ $O(N^3)$ÔºåÊàë‰ª¨ÈúÄË¶Å‰æùÊ¨°Â¢ûÂä†ÈóÆÈ¢òËßÑÊ®°Ôºà$k$ ‰ªé $1$ Âà∞ $n$ÔºâÔºåÂà§Êñ≠‰ªªÊÑè‰∏§ÁÇπÂú®ÂΩìÂâçÈóÆÈ¢òËßÑÊ®°‰∏ãÁöÑÊúÄÁü≠Ë∑Ø„ÄÇ\nfor (k = 1; k \u0026lt;= n; k++) { for (x = 1; x \u0026lt;= n; x++) { for (y = 1; y \u0026lt;= n; y++) { f[k][x][y] = min(f[k - 1][x][y], f[k - 1][x][k] + f[k - 1][k][y]); } } } Âõ†‰∏∫Á¨¨‰∏ÄÁª¥ÂØπÁªìÊûúÊó†ÂΩ±ÂìçÔºåÊàë‰ª¨ÂèØ‰ª•ÂèëÁé∞Êï∞ÁªÑÁöÑÁ¨¨‰∏ÄÁª¥ÊòØÂèØ‰ª•ÁúÅÁï•ÁöÑÔºå‰∫éÊòØÂèØ‰ª•Áõ¥Êé•ÊîπÊàê f[x][y] = min(f[x][y], f[x][k]+f[k][y])„ÄÇ\nDijkstra ÁÆóÊ≥ï DijkstraÁÆóÊ≥ïÁî±Ëç∑ÂÖ∞ËÆ°ÁÆóÊú∫ÁßëÂ≠¶ÂÆ∂ E. W. Dijkstra ‰∫é 1956 Âπ¥ÂèëÁé∞Ôºå1959 Âπ¥ÂÖ¨ÂºÄÂèëË°®„ÄÇÊòØ‰∏ÄÁßçÊ±ÇËß£ ÈùûË¥üÊùÉÂõæ ‰∏äÂçïÊ∫êÊúÄÁü≠Ë∑ØÂæÑÁöÑÁÆóÊ≥ï„ÄÇ\nÂ∞ÜÁªìÁÇπÂàÜÊàê‰∏§‰∏™ÈõÜÂêàÔºöÂ∑≤Á°ÆÂÆöÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÁöÑÁÇπÈõÜÔºàËÆ∞‰∏∫ $S$ ÈõÜÂêàÔºâÁöÑÂíåÊú™Á°ÆÂÆöÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÁöÑÁÇπÈõÜÔºàËÆ∞‰∏∫ $T$ ÈõÜÂêàÔºâ„ÄÇ‰∏ÄÂºÄÂßãÊâÄÊúâÁöÑÁÇπÈÉΩÂ±û‰∫é $T$ ÈõÜÂêà„ÄÇ\nÂàùÂßãÂåñ $dis(s)=0$ÔºåÂÖ∂‰ªñÁÇπÁöÑ $dis$ Âùá‰∏∫ $+\\infty$„ÄÇ\nÁÑ∂ÂêéÈáçÂ§çËøô‰∫õÊìç‰ΩúÔºö\n‰ªé $T$ ÈõÜÂêà‰∏≠ÔºåÈÄâÂèñ‰∏Ä‰∏™ÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÊúÄÂ∞èÁöÑÁªìÁÇπÔºåÁßªÂà∞ $S$ ÈõÜÂêà‰∏≠„ÄÇ ÂØπÈÇ£‰∫õÂàöÂàöË¢´Âä†ÂÖ• $S$ ÈõÜÂêàÁöÑÁªìÁÇπÁöÑÊâÄÊúâÂá∫ËæπÊâßË°åÊùæÂºõÊìç‰Ωú„ÄÇ Áõ¥Âà∞ $T$ ÈõÜÂêà‰∏∫Á©∫ÔºåÁÆóÊ≥ïÁªìÊùü„ÄÇ\nÊúâÂ§öÁßçÊñπÊ≥ïÊù•Áª¥Êä§ 1 Êìç‰Ωú‰∏≠ÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÊúÄÂ∞èÁöÑÁªìÁÇπÔºå‰∏çÂêåÁöÑÂÆûÁé∞ÂØºËá¥‰∫Ü Dijkstra ÁÆóÊ≥ïÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏äÁöÑÂ∑ÆÂºÇ„ÄÇ\nÊö¥ÂäõÔºö‰∏ç‰ΩøÁî®‰ªª‰ΩïÊï∞ÊçÆÁªìÊûÑËøõË°åÁª¥Êä§ÔºåÊØèÊ¨° 2 Êìç‰ΩúÊâßË°åÂÆåÊØïÂêéÔºåÁõ¥Êé•Âú® $T$ ÈõÜÂêà‰∏≠Êö¥ÂäõÂØªÊâæÊúÄÁü≠Ë∑ØÈïøÂ∫¶ÊúÄÂ∞èÁöÑÁªìÁÇπ„ÄÇ2 Êìç‰ΩúÊÄªÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(m)$Ôºå1 Êìç‰ΩúÊÄªÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(n^2)$ÔºåÂÖ®ËøáÁ®ãÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(n^2 + m) = O(n^2)$„ÄÇ ‰∫åÂèâÂ†ÜÔºöÊØèÊàêÂäüÊùæÂºõ‰∏ÄÊù°Ëæπ $(u,v)$ÔºåÂ∞±Â∞Ü $v$ ÊèíÂÖ•‰∫åÂèâÂ†Ü‰∏≠ÔºàÂ¶ÇÊûú $v$ Â∑≤ÁªèÂú®‰∫åÂèâÂ†Ü‰∏≠ÔºåÁõ¥Êé•‰øÆÊîπÁõ∏Â∫îÂÖÉÁ¥†ÁöÑÊùÉÂÄºÂç≥ÂèØÔºâÔºå1 Êìç‰ΩúÁõ¥Êé•ÂèñÂ†ÜÈ°∂ÁªìÁÇπÂç≥ÂèØ„ÄÇÂÖ±ËÆ° $O(m)$ Ê¨°‰∫åÂèâÂ†Ü‰∏äÁöÑÊèíÂÖ•Ôºà‰øÆÊîπÔºâÊìç‰ΩúÔºå$O(n)$ Ê¨°Âà†Èô§Â†ÜÈ°∂Êìç‰ΩúÔºåËÄåÊèíÂÖ•Ôºà‰øÆÊîπÔºâÂíåÂà†Èô§ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶Âùá‰∏∫ $O(\\log n)$ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O((n+m) \\log n) = O(m \\log n)$„ÄÇ ‰ºòÂÖàÈòüÂàóÔºöÂíå‰∫åÂèâÂ†ÜÁ±ª‰ººÔºå‰ΩÜ‰ΩøÁî®‰ºòÂÖàÈòüÂàóÊó∂ÔºåÂ¶ÇÊûúÂêå‰∏Ä‰∏™ÁÇπÁöÑÊúÄÁü≠Ë∑ØË¢´Êõ¥Êñ∞Â§öÊ¨°ÔºåÂõ†‰∏∫ÂÖàÂâçÊõ¥Êñ∞Êó∂ÊèíÂÖ•ÁöÑÂÖÉÁ¥†‰∏çËÉΩË¢´Âà†Èô§Ôºå‰πü‰∏çËÉΩË¢´‰øÆÊîπÔºåÂè™ËÉΩÁïôÂú®‰ºòÂÖàÈòüÂàó‰∏≠ÔºåÊïÖ‰ºòÂÖàÈòüÂàóÂÜÖÁöÑÂÖÉÁ¥†‰∏™Êï∞ÊòØ $O(m)$ ÁöÑÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(m \\log m)$„ÄÇ Fibonacci Â†ÜÔºöÂíåÂâçÈù¢‰∫åËÄÖÁ±ª‰ººÔºå‰ΩÜ Fibonacci Â†ÜÊèíÂÖ•ÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(1)$ÔºåÊïÖÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(n \\log n + m)$ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶ÊúÄ‰ºò„ÄÇ Á∫øÊÆµÊ†ëÔºöÂíå‰∫åÂèâÂ†ÜÂéüÁêÜÁ±ª‰ººÔºå‰∏çËøáÂ∞ÜÊØèÊ¨°ÊàêÂäüÊùæÂºõÂêéÊèíÂÖ•‰∫åÂèâÂ†ÜÁöÑÊìç‰ΩúÊîπ‰∏∫Âú®Á∫øÊÆµÊ†ë‰∏äÊâßË°åÂçïÁÇπ‰øÆÊîπÔºåËÄå 1 Êìç‰ΩúÂàôÊòØÁ∫øÊÆµÊ†ë‰∏äÁöÑÂÖ®Â±ÄÊü•ËØ¢ÊúÄÂ∞èÂÄº„ÄÇÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(m \\log n)$„ÄÇ Âú®Á®ÄÁñèÂõæ‰∏≠Ôºå$m = O(n)$Ôºå‰ΩøÁî®‰∫åÂèâÂ†ÜÂÆûÁé∞ÁöÑ Dijkstra ÁÆóÊ≥ïËæÉ Bellman‚ÄìFord ÁÆóÊ≥ïÂÖ∑ÊúâËæÉÂ§ßÁöÑÊïàÁéá‰ºòÂäøÔºõËÄåÂú®Á®†ÂØÜÂõæ‰∏≠Ôºå$m = O(n^2)$ÔºåËøôÊó∂ÂÄô‰ΩøÁî®Êö¥ÂäõÂÅöÊ≥ïËæÉ‰∫åÂèâÂ†ÜÂÆûÁé∞Êõ¥‰ºò„ÄÇ\nÁÆóÊ≥ïÂÆûÁé∞Ôºö\nstruct edge { int v, w; }; vector\u0026lt;edge\u0026gt; e[maxn]; int dis[maxn], vis[maxn]; void dijkstra(int n, int s) { memset(dis, 63, sizeof(dis)); dis[s] = 0; for (int i = 1; i \u0026lt;= n; i++) { int u = 0, mind = 0x3f3f3f3f; for (int j = 1; j \u0026lt;= n; j++) if (!vis[j] \u0026amp;\u0026amp; dis[j] \u0026lt; mind) u = j, mind = dis[j]; vis[u] = true; for (auto ed : e[u]) { int v = ed.v, w = ed.w; if (dis[v] \u0026gt; dis[u] + w) dis[v] = dis[u] + w; } } } ÈòüÂàó‰ºòÂåñÁöÑdijkstra:\nstruct edge { int v, w; }; struct node { int dis, u; //ÈáçËΩΩ bool operator\u0026gt;(const node\u0026amp; a) const { return dis \u0026gt; a.dis; } }; vector\u0026lt;edge\u0026gt; e[maxn]; int dis[maxn], vis[maxn]; priority_queue\u0026lt;node, vector\u0026lt;node\u0026gt;, greater\u0026lt;node\u0026gt; \u0026gt; q; void dijkstra(int n, int s) { memset(dis, 63, sizeof(dis)); dis[s] = 0; q.push({0, s}); while (!q.empty()) { int u = q.top().u; q.pop(); if (vis[u]) continue; vis[u] = 1; for (auto ed : e[u]) { int v = ed.v, w = ed.w; if (dis[v] \u0026gt; dis[u] + w) { dis[v] = dis[u] + w; q.push({dis[v], v}); } } } } ‰∏çÂêåÊñπÊ≥ïÁöÑÊØîËæÉ ÊúÄÁü≠Ë∑ØÁÆóÊ≥ï Floyd Bellman‚ÄìFord Dijkstra Johnson ÊúÄÁü≠Ë∑ØÁ±ªÂûã ÊØèÂØπÁªìÁÇπ‰πãÈó¥ÁöÑÊúÄÁü≠Ë∑Ø ÂçïÊ∫êÊúÄÁü≠Ë∑Ø ÂçïÊ∫êÊúÄÁü≠Ë∑Ø ÊØèÂØπÁªìÁÇπ‰πãÈó¥ÁöÑÊúÄÁü≠Ë∑Ø ‰ΩúÁî®‰∫é ‰ªªÊÑèÂõæ ‰ªªÊÑèÂõæ ÈùûË¥üÊùÉÂõæ ‰ªªÊÑèÂõæ ËÉΩÂê¶Ê£ÄÊµãË¥üÁéØÔºü ËÉΩ ËÉΩ ‰∏çËÉΩ ËÉΩ Êó∂Èó¥Â§çÊùÇÂ∫¶ $O(N^3)$ $O(NM)$ $O(M\\log M)$ $O(NM\\log M)$ 2.‰ª£‰ª∑Âú∞Âõæ 3.ÊãìÂ±ïÂØºËà™ÁÆóÊ≥ï 3.1.Âä®ÊÄÅËßÑÂàí 3.2.ÈÅó‰º†ÁÆóÊ≥ïÔºåËöÅÁæ§ÁÆóÊ≥ï $\\quad$ ÈÅó‰º†ÁÆóÊ≥ï(Genetic AlgorithmÔºåÁÆÄÁß∞GA) Ëµ∑Ê∫ê‰∫éÂØπÁîüÁâ©Á≥ªÁªüÊâÄËøõË°åÁöÑËÆ°ÁÆóÊú∫Ê®°ÊãüÁ†îÁ©∂ÔºåÊòØ‰∏ÄÁßçÈöèÊú∫ÂÖ®Â±ÄÊêúÁ¥¢‰ºòÂåñÊñπÊ≥ïÔºåÂÆÉÊ®°Êãü‰∫ÜËá™ÁÑ∂ÈÄâÊã©ÂíåÈÅó‰º†‰∏≠ÂèëÁîüÁöÑÂ§çÂà∂„ÄÅ‰∫§Âèâ(crossover)ÂíåÂèòÂºÇ(mutation)Á≠âÁé∞Ë±°Ôºå‰ªé‰ªª‰∏ÄÂàùÂßãÁßçÁæ§ÔºàPopulationÔºâÂá∫ÂèëÔºåÈÄöËøáÈöèÊú∫ÈÄâÊã©„ÄÅ‰∫§ÂèâÂíåÂèòÂºÇÊìç‰ΩúÔºå‰∫ßÁîü‰∏ÄÁæ§Êõ¥ÈÄÇÂêàÁéØÂ¢ÉÁöÑ‰∏™‰ΩìÔºå‰ΩøÁæ§‰ΩìËøõÂåñÂà∞ÊêúÁ¥¢Á©∫Èó¥‰∏≠Ë∂äÊù•Ë∂äÂ•ΩÁöÑÂå∫ÂüüÔºåËøôÊ†∑‰∏Ä‰ª£‰∏Ä‰ª£‰∏çÊñ≠ÁπÅË°çËøõÂåñÔºåÊúÄÂêéÊî∂ÊïõÂà∞‰∏ÄÁæ§ÊúÄÈÄÇÂ∫îÁéØÂ¢ÉÁöÑ‰∏™‰ΩìÔºàIndividualÔºâÔºå‰ªéËÄåÊ±ÇÂæóÈóÆÈ¢òÁöÑ‰ºòË¥®Ëß£„ÄÇ\nÈÅó‰º†ÁÆóÊ≥ïÊúØËØ≠ ÊüìËâ≤‰ΩìÔºöÊüìËâ≤‰ΩìÂèàÂèØÁß∞‰∏∫Âü∫Âõ†Âûã‰∏™‰ΩìÔºå‰∏ÄÂÆöÊï∞ÈáèÁöÑ‰∏™‰ΩìÁªÑÊàê‰∫ÜÁæ§‰Ωì,Áæ§‰Ωì‰∏≠‰∏™‰ΩìÁöÑÊï∞ÈáèÂè´ÂÅöÁæ§‰ΩìÂ§ßÂ∞è„ÄÇ\n‰Ωç‰∏≤Ôºö‰∏™‰ΩìÁöÑË°®Á§∫ÂΩ¢Âºè„ÄÇÂØπÂ∫î‰∫éÈÅó‰º†Â≠¶‰∏≠ÁöÑÊüìËâ≤‰Ωì„ÄÇ\nÂü∫Âõ†ÔºöÂü∫Âõ†ÊòØÊüìËâ≤‰Ωì‰∏≠ÁöÑÂÖÉÁ¥†ÔºåÁî®‰∫éË°®Á§∫‰∏™‰ΩìÁöÑÁâπÂæÅ„ÄÇ\nÁâπÂæÅÂÄºÔºöÂú®Áî®‰∏≤Ë°®Á§∫Êï¥Êï∞Êó∂ÔºåÂü∫Âõ†ÁöÑÁâπÂæÅÂÄº‰∏é‰∫åËøõÂà∂Êï∞ÁöÑÊùÉ‰∏ÄËá¥Ôºõ‰æãÂ¶ÇÂú®‰∏≤S=1011‰∏≠ÔºåÂü∫Âõ†‰ΩçÁΩÆ3‰∏≠ÁöÑ1ÔºåÂÆÉÁöÑÂü∫Âõ†ÁâπÂæÅÂÄº‰∏∫2ÔºåÂü∫Âõ†‰ΩçÁΩÆ1‰∏≠ÁöÑ1ÔºåÂÆÉÁöÑÂü∫Âõ†ÁâπÂæÅÂÄº‰∏∫8„ÄÇ\nÈÄÇÂ∫îÂ∫¶ÔºöÂêÑ‰∏™‰∏™‰ΩìÂØπÁéØÂ¢É‰∏≠ÁöÑÈÄÇÂ∫îÁ®ãÂ∫¶Âè´ÂÅöÈÄÇÂ∫îÂ∫¶„ÄÇ‰∏∫‰∫Ü‰ΩìÁé∞ÊüìËâ≤‰ΩìÁöÑÈÄÇÂ∫îËÉΩÂäõÔºåÂºïÂÖ•‰∫ÜÂØπÈóÆÈ¢ò‰∏≠ÁöÑÊØè‰∏Ä‰∏™ÊüìËâ≤‰ΩìÈÉΩËÉΩËøõË°åÂ∫¶ÈáèÁöÑÂáΩÊï∞ÔºåÂè´ÈÄÇÂ∫îÂ∫¶ÂáΩÊï∞„ÄÇËøô‰∏™ÂáΩÊï∞ÈÄöÂ∏∏‰ºöË¢´Áî®Êù•ËÆ°ÁÆó‰∏™‰ΩìÂú®Áæ§‰Ωì‰∏≠Ë¢´‰ΩøÁî®ÁöÑÊ¶ÇÁéá„ÄÇ\nÂü∫Âõ†ÂûãÔºöÊàñÁß∞ÈÅó‰º†ÂûãÔºåÊòØÊåáÂü∫Âõ†ÁªÑÂÆö‰πâÈÅó‰º†ÁâπÂæÅÂíåË°®Áé∞„ÄÇÂØπ‰∫é‰∫éGA‰∏≠ÁöÑ‰Ωç‰∏≤„ÄÇ\nË°®Áé∞ÂûãÔºöÁîüÁâ©‰ΩìÁöÑÂü∫Âõ†ÂûãÂú®ÁâπÊÄßÁéØÂ¢É‰∏ãÁöÑË°®Áé∞ÁâπÂæÅ„ÄÇÂØπÂ∫î‰∫éGA‰∏≠ÁöÑ‰Ωç‰∏≤Ëß£Á†ÅÁöÑÂèÇÊï∞\nÈÅó‰º†ÁÆóÊ≥ïÂü∫Êú¨ËøáÁ®ã $\\quad$ Âü∫Êú¨ÈÅó‰º†ÁÆóÊ≥ï(‰πüÁß∞Ê†áÂáÜÈÅó‰º†ÁÆóÊ≥ïÊàñÁÆÄÂçïÈÅó‰º†ÁÆóÊ≥ïÔºåSimple Genetic AlgorithmÔºåÁÆÄÁß∞SGA)ÊòØ‰∏ÄÁßçÁæ§‰ΩìÂûãÊìç‰ΩúÔºåËØ•Êìç‰Ωú‰ª•Áæ§‰Ωì‰∏≠ÁöÑÊâÄÊúâ‰∏™‰Ωì‰∏∫ÂØπË±°ÔºåÂè™‰ΩøÁî®Âü∫Êú¨ÈÅó‰º†ÁÆóÂ≠ê(Genetic Operator)ÔºöÈÄâÊã©ÁÆóÂ≠ê(Selection Operator)„ÄÅ‰∫§ÂèâÁÆóÂ≠ê(Crossover Operator)ÂíåÂèòÂºÇÁÆóÂ≠ê(Mutation Operator)ÔºåÂÖ∂ÈÅó‰º†ËøõÂåñÊìç‰ΩúËøáÁ®ãÁÆÄÂçïÔºåÂÆπÊòìÁêÜËß£ÔºåÊòØÂÖ∂ÂÆÉ‰∏Ä‰∫õÈÅó‰º†ÁÆóÊ≥ïÁöÑÂü∫Á°ÄÔºåÂÆÉ‰∏ç‰ªÖÁªôÂêÑÁßçÈÅó‰º†ÁÆóÊ≥ïÊèê‰æõ‰∫Ü‰∏Ä‰∏™Âü∫Êú¨Ê°ÜÊû∂ÔºåÂêåÊó∂‰πüÂÖ∑Êúâ‰∏ÄÂÆöÁöÑÂ∫îÁî®‰ª∑ÂÄº„ÄÇÈÄâÊã©„ÄÅ‰∫§ÂèâÂíåÂèòÂºÇÊòØÈÅó‰º†ÁÆóÊ≥ïÁöÑ3‰∏™‰∏ªË¶ÅÊìç‰ΩúÁÆóÂ≠êÔºåÂÆÉ‰ª¨ÊûÑÊàê‰∫ÜÈÅó‰º†Êìç‰ΩúÔºå‰ΩøÈÅó‰º†ÁÆóÊ≥ïÂÖ∑Êúâ‰∫ÜÂÖ∂ÂÆÉÊñπÊ≥ïÊ≤°ÊúâÁöÑÁâπÁÇπ„ÄÇ\nÂÖ∂Ë°®Á§∫ÊñπÊ≥ïÂ¶Ç‰∏ãÔºö\n$$SGA = (C,E,P_0,M,\\phi,\\Gamma,\\psi,T)$$\nÂÖ∂‰∏≠:\n$C$Ë°®Á§∫‰∏™‰ΩìÁöÑÁºñÁ†ÅÊñπÊ°à\n$E$Ë°®Á§∫‰∏™‰ΩìÈÄÇÂ∫îÂ∫¶ËØÑ‰ª∑ÂáΩÊï∞\n$P_0$Ë°®Á§∫ÂàùÂßãÁßçÁæ§\n$M$Ë°®Á§∫ÁßçÁæ§Â§ßÂ∞è\n$\\phi$Ë°®Á§∫ÈÄâÊã©ÁÆóÂ≠ê\n$\\Gamma$Ë°®Á§∫‰∫§ÂèâÁÆóÂ≠ê\n$\\psi$Ë°®Á§∫ÂèòÂºÇÁÆóÂ≠ê\n$T$Ë°®Á§∫ÈÅó‰º†ÁÆóÊ≥ïÁªàÊ≠¢Êù°‰ª∂\nÁºñÁ†Å $\\quad$ Ëß£Á©∫Èó¥‰∏≠ÁöÑËß£Âú®ÈÅó‰º†ÁÆóÊ≥ï‰∏≠ÁöÑË°®Á§∫ÂΩ¢Âºè„ÄÇ‰ªéÈóÆÈ¢òÁöÑËß£(solution)Âà∞Âü∫Âõ†ÂûãÁöÑÊò†Â∞ÑÁß∞‰∏∫ÁºñÁ†ÅÔºåÂç≥Êää‰∏Ä‰∏™ÈóÆÈ¢òÁöÑÂèØË°åËß£‰ªéÂÖ∂Ëß£Á©∫Èó¥ËΩ¨Êç¢Âà∞ÈÅó‰º†ÁÆóÊ≥ïÁöÑÊêúÁ¥¢Á©∫Èó¥ÁöÑËΩ¨Êç¢ÊñπÊ≥ï„ÄÇÈÅó‰º†ÁÆóÊ≥ïÂú®ËøõË°åÊêúÁ¥¢‰πãÂâçÂÖàÂ∞ÜËß£Á©∫Èó¥ÁöÑËß£Ë°®Á§∫ÊàêÈÅó‰º†ÁÆóÊ≥ïÁöÑÂü∫Âõ†Âûã‰∏≤(‰πüÂ∞±ÊòØÊüìËâ≤‰Ωì)ÁªìÊûÑÊï∞ÊçÆÔºåËøô‰∫õ‰∏≤ÁªìÊûÑÊï∞ÊçÆÁöÑ‰∏çÂêåÁªÑÂêàÂ∞±ÊûÑÊàê‰∫Ü‰∏çÂêåÁöÑÁÇπ„ÄÇ\n$\\quad$ Â∏∏ËßÅÁöÑÁºñÁ†ÅÊñπÊ≥ïÊúâ‰∫åËøõÂà∂ÁºñÁ†Å„ÄÅÊ†ºÈõ∑Á†ÅÁºñÁ†Å„ÄÅ ÊµÆÁÇπÊï∞ÁºñÁ†Å„ÄÅÂêÑÂèÇÊï∞Á∫ßËÅîÁºñÁ†Å„ÄÅÂ§öÂèÇÊï∞‰∫§ÂèâÁºñÁ†ÅÁ≠â„ÄÇ\n$\\quad$ ‰∫åËøõÂà∂ÁºñÁ†ÅÔºöÂç≥ÁªÑÊàêÊüìËâ≤‰ΩìÁöÑÂü∫Âõ†Â∫èÂàóÊòØÁî±‰∫åËøõÂà∂Êï∞Ë°®Á§∫ÔºåÂÖ∑ÊúâÁºñÁ†ÅËß£Á†ÅÁÆÄÂçïÊòìÁî®Ôºå‰∫§ÂèâÂèòÂºÇÊòì‰∫éÁ®ãÂ∫èÂÆûÁé∞Á≠âÁâπÁÇπ„ÄÇ\n$\\quad$ Ê†ºÈõ∑ÁºñÁ†ÅÔºö‰∏§‰∏™Áõ∏ÈÇªÁöÑÊï∞Áî®Ê†ºÈõ∑Á†ÅË°®Á§∫ÔºåÂÖ∂ÂØπÂ∫îÁöÑÁ†Å‰ΩçÂè™Êúâ‰∏Ä‰∏™‰∏çÁõ∏ÂêåÔºå‰ªéËÄåÂèØ‰ª•ÊèêÈ´òÁÆóÊ≥ïÁöÑÂ±ÄÈÉ®ÊêúÁ¥¢ËÉΩÂäõ„ÄÇËøôÊòØÊ†ºÈõ∑Á†ÅÁõ∏ÊØî‰∫åËøõÂà∂Á†ÅËÄåË®ÄÊâÄÂÖ∑Â§áÁöÑ‰ºòÂäø„ÄÇ\n$\\quad$ ÊµÆÁÇπÊï∞ÁºñÁ†ÅÔºöÊòØÊåáÂ∞Ü‰∏™‰ΩìËåÉÂõ¥Êò†Â∞ÑÂà∞ÂØπÂ∫îÊµÆÁÇπÊï∞Âå∫Èó¥ËåÉÂõ¥ÔºåÁ≤æÂ∫¶ÂèØ‰ª•ÈöèÊµÆÁÇπÊï∞Âå∫Èó¥Â§ßÂ∞èËÄåÊîπÂèò„ÄÇ\nËÆæÊüê‰∏ÄÂèÇÊï∞ÁöÑÂèñÂÄºËåÉÂõ¥‰∏∫$[U_1,U_2]$ÔºåÊàë‰ª¨ÂèØ‰ª•Áî®ÈïøÂ∫¶‰∏∫$k$ÁöÑ‰∫åËøõÂà∂ÁºñÁ†ÅÁ¨¶Âè∑Êù•Ë°®Á§∫ËØ•ÂèÇÊï∞ÔºåÂàôÂÆÉÊÄªÂÖ±‰∫ßÁîü$2^k$Áßç‰∏çÂêåÁöÑÁºñÁ†ÅÔºåÂèØ‰ª•‰ΩøÁî®ÂèÇÊï∞ÁºñÁ†ÅÊó∂ÁöÑÂØπÂ∫îÂÖ≥Á≥ª\n$$0000\u0026hellip;0000 = 0 \\to U_1$$\n$$0000\u0026hellip;0001 = 1 \\to U_1 + \\delta$$\n$$\u0026hellip;$$\n$$1111\u0026hellip;1111 = 2^k - 1 \\to U_2$$\nÂÖ∂‰∏≠Ôºå$\\delta = \\frac{U_2 - U_1}{2^k - 1}$\nËß£Á†Å $\\quad$ ÈÅó‰º†ÁÆóÊ≥ïÊüìËâ≤‰ΩìÂêëÈóÆÈ¢òËß£ÁöÑËΩ¨Êç¢ÔºåÂÅáËÆæÊüê‰∏Ä‰∏™‰ΩìÁöÑÁºñÁ†ÅÔºåÂØπÂ∫îÁöÑËß£Á†ÅÂÖ¨Âºè‰∏∫:\n$$X = U_1 + (\\sum_{i=1}^{k}b_i¬∑2^{i-1}) ¬∑ \\frac{U_2 - U_1}{2^k - 1}$$\nÂàùÂßãÁæ§‰ΩìÁöÑÁîüÊàê $\\quad$ ËÆæÁΩÆÊúÄÂ§ßËøõÂåñ‰ª£Êï∞$T$ÔºåÁæ§‰ΩìÂ§ßÂ∞è$M$Ôºå‰∫§ÂèâÊ¶ÇÁéá$P_c$ÔºåÂèòÂºÇÊ¶ÇÁéá$P_m$ÔºåÈöèÊú∫ÁîüÊàê$M$‰∏™‰∏™‰Ωì‰Ωú‰∏∫ÂàùÂßãÂåñÁæ§‰Ωì$P_0$„ÄÇ\nÈÄÇÂ∫îÂ∫¶ÂÄºËØÑ‰º∞Ê£ÄÊµã $\\quad$ ÈÄÇÂ∫îÂ∫¶ÂáΩÊï∞Ë°®Êòé‰∏™‰ΩìÊàñËß£ÁöÑ‰ºòÂä£ÊÄß„ÄÇÂØπ‰∫é‰∏çÂêåÁöÑÈóÆÈ¢òÔºåÈÄÇÂ∫îÂ∫¶ÂáΩÊï∞ÁöÑÂÆö‰πâÊñπÂºè‰∏çÂêå„ÄÇÊ†πÊçÆÂÖ∑‰ΩìÁöÑÈóÆÈ¢òÔºåËÆ°ÁÆóP(t)ÂêÑ‰∏™‰∏™‰ΩìÁöÑÈÄÇÂ∫îÂ∫¶„ÄÇ\n$\\quad$ ÈÄÇÂ∫îÂ∫¶Â∞∫Â∫¶ÂèòÊç¢Ôºö‰∏ÄËà¨Êù•ËÆ≤ÔºåÊòØÊåáÁÆóÊ≥ïËø≠‰ª£ÁöÑ‰∏çÂêåÈò∂ÊÆµÔºåËÉΩÂ§üÈÄöËøáÈÄÇÂΩìÊîπÂèò‰∏™‰ΩìÁöÑÈÄÇÂ∫îÂ∫¶Â§ßÂ∞èÔºåËøõËÄåÈÅøÂÖçÁæ§‰ΩìÈó¥ÈÄÇÂ∫îÂ∫¶Áõ∏ÂΩìËÄåÈÄ†ÊàêÁöÑÁ´û‰∫âÂáèÂº±ÔºåÂØºËá¥ÁßçÁæ§Êî∂Êïõ‰∫éÂ±ÄÈÉ®ÊúÄ‰ºòËß£„ÄÇ\nÂ∞∫Â∫¶ÂèòÊç¢ÈÄâÁî®ÁöÑÁªèÂÖ∏ÊñπÊ≥ïÔºöÁ∫øÊÄßÂ∞∫Â∫¶ÂèòÊç¢„ÄÅ‰πòÂπÇÂ∞∫Â∫¶ÂèòÊç¢‰ª•ÂèäÊåáÊï∞Â∞∫Â∫¶ÂèòÊç¢„ÄÇ\nÁ∫øÊÄßÂ∞∫Â∫¶ÂèòÊç¢ $$F` = aF + b$$\nÂÖ∂‰∏≠$a$‰∏∫ÊØî‰æãÁ≥ªÊï∞Ôºå$b$‰∏∫Âπ≥ÁßªÁ≥ªÊï∞Ôºå$F$‰∏∫ÂèòÊç¢ÂâçÈÄÇÂ∫îÂ∞∫Â∫¶„ÄÇ\n‰πòÂπÇÂ∞∫Â∫¶ÂèòÊç¢ $$F` = F^k$$\nÂÖ∂‰∏≠$k$‰∏∫ÂπÇÔºå$F$‰∏∫ËΩ¨ÂèòÂâçÈÄÇÂ∫îÂ∫¶Â∞∫Â∫¶„ÄÇ\nÊåáÊï∞Â∞∫Â∫¶ÂèòÊç¢ $$F` = e^{-\\beta F}$$\nÈÅó‰º†ÁÆóÂ≠ê ÈÄâÊã© $\\quad$ ÈÄâÊã©Êìç‰Ωú‰ªéÊóßÁæ§‰Ωì‰∏≠‰ª•‰∏ÄÂÆöÊ¶ÇÁéáÈÄâÊã©‰ºòËâØ‰∏™‰ΩìÁªÑÊàêÊñ∞ÁöÑÁßçÁæ§Ôºå‰ª•ÁπÅÊÆñÂæóÂà∞‰∏ã‰∏Ä‰ª£‰∏™‰Ωì„ÄÇ‰∏™‰ΩìË¢´ÈÄâ‰∏≠ÁöÑÊ¶ÇÁéáË∑üÈÄÇÂ∫îÂ∫¶ÊúâÂÖ≥Ôºå‰∏™‰ΩìÈÄÇÂ∫îÂ∫¶ÂÄºË∂äÈ´òÔºåË¢´ÈÄâ‰∏≠ÁöÑÊ¶ÇÁéáË∂äÂ§ß„ÄÇ‰ª•ËΩÆÁõòÊ≥ï‰∏∫‰æãÔºåËã•ËÆæÁßçÁæ§Êï∞‰∏∫$M$Ôºå‰∏™‰Ωì$i$ÁöÑÈÄÇÂ∫îÂ∫¶‰∏∫$f_i$ÔºåÂàô‰∏™‰ΩìË¢´ÈÄâÂèñÁöÑÊ¶ÇÁéá‰∏∫:\n$$P_i = \\frac{f_i}{\\sum_{k=1}^{M}{f_k}}$$\n$\\quad$ ÂΩì‰∏™‰ΩìÈÄâÊã©ÁöÑÊ¶ÇÁéáÁªôÂÆöÂêéÔºå‰∫ßÁîü[0,1]‰πãÈó¥ÂùáÂåÄÈöèÊú∫Êï∞Êù•ÂÜ≥ÂÆöÂì™‰∏™‰∏™‰ΩìÂèÇÂä†‰∫§ÈÖç„ÄÇËã•‰∏™‰ΩìÁöÑÈÄâÊã©Ê¶ÇÁéáÂ§ßÔºåÂàôÊúâÊú∫‰ºöË¢´Â§öÊ¨°ÈÄâ‰∏≠ÔºåÈÇ£‰πàÂÆÉÁöÑÈÅó‰º†Âü∫Âõ†Â∞±‰ºöÂú®ÁßçÁæ§‰∏≠Êâ©Â§ßÔºõËã•‰∏™‰ΩìÁöÑÈÄâÊã©Ê¶ÇÁéáÂ∞èÔºåÂàôË¢´Ê∑òÊ±∞ÁöÑÂèØËÉΩÊÄß‰ºöÂ§ß„ÄÇ\n‰∫§Âèâ $\\quad$ ‰∫§ÂèâÊìç‰ΩúÊòØÊåá‰ªéÁßçÁæ§‰∏≠ÈöèÊú∫ÈÄâÊã©‰∏§‰∏™‰∏™‰ΩìÔºåÈÄöËøá‰∏§‰∏™ÊüìËâ≤‰ΩìÁöÑ‰∫§Êç¢ÁªÑÂêàÔºåÊääÁà∂‰∏≤ÁöÑ‰ºòÁßÄÁâπÂæÅÈÅó‰º†ÁªôÂ≠ê‰∏≤Ôºå‰ªéËÄå‰∫ßÁîüÊñ∞ÁöÑ‰ºòÁßÄ‰∏™‰Ωì„ÄÇ\n$\\quad$ Âú®ÂÆûÈôÖÂ∫îÁî®‰∏≠Ôºå‰ΩøÁî®ÁéáÊúÄÈ´òÁöÑÊòØÂçïÁÇπ‰∫§ÂèâÁÆóÂ≠êÔºåËØ•ÁÆóÂ≠êÂú®ÈÖçÂØπÁöÑÊüìËâ≤‰Ωì‰∏≠ÈöèÊú∫ÁöÑÈÄâÊã©‰∏Ä‰∏™‰∫§Âèâ‰ΩçÁΩÆÔºåÁÑ∂ÂêéÂú®ËØ•‰∫§Âèâ‰ΩçÁΩÆÂØπÈÖçÂØπÁöÑÊüìËâ≤‰ΩìËøõË°åÂü∫Âõ†‰ΩçÂèòÊç¢„ÄÇËØ•ÁÆóÂ≠êÁöÑÊâßË°åËøáÁ®ãÂ¶Ç‰∏ãÂõæÊâÄÁ§∫„ÄÇ\na)ÂèåÁÇπ‰∫§ÂèâÊàñÂ§öÁÇπ‰∫§ÂèâÔºåÂç≥ÂØπÈÖçÂØπÁöÑÊüìËâ≤‰ΩìÈöèÊú∫ËÆæÁΩÆ‰∏§‰∏™ÊàñËÄÖÂ§ö‰∏™‰∫§ÂèâÁÇπÔºåÁÑ∂ÂêéËøõË°å‰∫§ÂèâËøêÁÆóÔºåÊîπÂèòÊüìËâ≤‰ΩìÂü∫Âõ†Â∫èÂàó„ÄÇ\nb)ÂùáÂåÄ‰∫§ÂèâÔºåÂç≥ÈÖçÂØπÁöÑÊüìËâ≤‰ΩìÂü∫Âõ†Â∫èÂàó‰∏äÁöÑÊØè‰∏™‰ΩçÁΩÆÈÉΩ‰ª•Á≠âÊ¶ÇÁéáËøõË°å‰∫§ÂèâÔºå‰ª•Ê≠§ÁªÑÊàêÊñ∞ÁöÑÂü∫Âõ†Â∫èÂàó„ÄÇ\nc)ÁÆóÊúØ‰∫§ÂèâÔºåÊòØÊåáÈÖçÂØπÊüìËâ≤‰Ωì‰πãÈó¥ÈááÁî®Á∫øÊÄßÁªÑÂêàÊñπÂºèËøõË°å‰∫§ÂèâÔºåÊîπÂèòÊüìËâ≤‰ΩìÂü∫Âõ†Â∫èÂàó„ÄÇ\nÂèòÂºÇ $\\quad$ ‰∏∫‰∫ÜÈò≤Ê≠¢ÈÅó‰º†ÁÆóÊ≥ïÂú®‰ºòÂåñËøáÁ®ã‰∏≠Èô∑ÂÖ•Â±ÄÈÉ®ÊúÄ‰ºòËß£ÔºåÂú®ÊêúÁ¥¢ËøáÁ®ã‰∏≠ÔºåÈúÄË¶ÅÂØπ‰∏™‰ΩìËøõË°åÂèòÂºÇÔºåÂú®ÂÆûÈôÖÂ∫îÁî®‰∏≠Ôºå‰∏ªË¶ÅÈááÁî®ÂçïÁÇπÂèòÂºÇÔºå‰πüÂè´‰ΩçÂèòÂºÇÔºåÂç≥Âè™ÈúÄË¶ÅÂØπÂü∫Âõ†Â∫èÂàó‰∏≠Êüê‰∏Ä‰∏™‰ΩçËøõË°åÂèòÂºÇÔºå‰ª•‰∫åËøõÂà∂ÁºñÁ†Å‰∏∫‰æãÔºåÂç≥0Âèò‰∏∫1ÔºåËÄå1Âèò‰∏∫0„ÄÇ\n3.3.Ê®°ÊãüÈÄÄÁÅ´ $\\quad$ Ê®°ÊãüÈÄÄÁÅ´ÁÆóÊ≥ï‰ªéÊüê‰∏ÄËæÉÈ´òÂàùÊ∏©Âá∫ÂèëÔºå‰º¥ÈöèÊ∏©Â∫¶ÂèÇÊï∞ÁöÑ‰∏çÊñ≠‰∏ãÈôç,ÁªìÂêà‰∏ÄÂÆöÁöÑÊ¶ÇÁéáÁ™ÅË∑≥ÁâπÊÄßÂú®Ëß£Á©∫Èó¥‰∏≠ÈöèÊú∫ÂØªÊâæÁõÆÊ†áÂáΩÊï∞ÁöÑÂÖ®Â±ÄÊúÄ‰ºòËß£ÔºåÂç≥Âú®Â±ÄÈÉ®ÊúÄ‰ºòËß£ËÉΩÊ¶ÇÁéáÊÄßÂú∞Ë∑≥Âá∫Âπ∂ÊúÄÁªàË∂ã‰∫éÂÖ®Â±ÄÊúÄ‰ºò„ÄÇ\n$\\quad$ Ê®°ÊãüÈÄÄÁÅ´ÁÆóÊ≥ï‰ºöÁªìÂêàÊ¶ÇÁéáÁ™ÅË∑≥ÁâπÊÄßÂú®Ëß£Á©∫Èó¥‰∏≠ÈöèÊú∫ÂØªÊâæÁõÆÊ†áÂáΩÊï∞ÁöÑÂÖ®Â±ÄÊúÄ‰ºòËß£ÔºåÈÇ£‰πàÂÖ∑‰ΩìÁöÑÊõ¥Êñ∞Ëß£ÁöÑÊú∫Âà∂ÊòØ‰ªÄ‰πàÂë¢ÔºüÂ¶ÇÊûúÊñ∞Ëß£ÊØîÂΩìÂâçËß£Êõ¥‰ºòÔºåÂàôÊé•ÂèóÊñ∞Ëß£ÔºåÂê¶ÂàôÂü∫‰∫éMetropolisÂáÜÂàôÂà§Êñ≠ÊòØÂê¶Êé•ÂèóÊñ∞Ëß£„ÄÇÊé•ÂèóÊ¶ÇÁéá‰∏∫Ôºö\n$$P = \\begin{cases} 1, \\quad E_{t+1} \u0026lt; E_t \\ e^{\\frac{-(E_{t+1} - E_t)}{kT}} E_{t+1} \\geq E_t \\end{cases}$$\nÂ¶Ç‰∏äÂÖ¨ÂºèÔºåÂÅáËÆæÂΩìÂâçÊó∂ÂàªÊêúÁ¥¢ÁöÑËß£‰∏∫$x_t$ÔºåÂØπÂ∫îÁöÑÁ≥ªÁªüËÉΩÈáè‰∏∫$E_t$ÔºåÂØπÊêúÁ¥¢ÁÇπ‰∫ßÁîüÈöèÊú∫Êâ∞Âä®Ôºå‰∫ßÁîüÊñ∞Ëß£$x_{t+1}$,Áõ∏Â∫îÂú∞ÔºåÁ≥ªÁªüËÉΩÈáè‰∏∫$E_{t+1}$ÔºåÈÇ£‰πàÁ≥ªÁªüÂØπÊêúÁ¥¢ÁÇπ‰ªé$x_t$Âà∞$x_{t+1}$ËΩ¨ÂèòÁöÑÊé•ÂèóÊ¶ÇÁéá‰∏∫‰∏äËø∞ÂÖ¨Âºè„ÄÇ\nÁÆóÊ≥ïÂÆûË¥®ÂàÜ‰∏§Â±ÇÂæ™ÁéØÔºåÂú®‰ªª‰∏ÄÊ∏©Â∫¶Ê∞¥Âπ≥‰∏ãÔºåÈöèÊú∫Êâ∞Âä®‰∫ßÁîüÊñ∞Ëß£ÔºåÂπ∂ËÆ°ÁÆóÁõÆÊ†áÂáΩÊï∞ÂÄºÁöÑÂèòÂåñÔºåÂÜ≥ÂÆöÊòØÂê¶Ë¢´Êé•Âèó„ÄÇÁî±‰∫éÁÆóÊ≥ïÂàùÂßãÊ∏©Â∫¶ÊØîËæÉÈ´òÔºåËøôÊ†∑Ôºå‰Ωø$E$Â¢ûÂ§ßÁöÑÊñ∞Ëß£Âú®ÂàùÂßãÊó∂‰πüÂèØËÉΩË¢´Êé•ÂèóÔºåÂõ†ËÄåËÉΩË∑≥Âá∫Â±ÄÈÉ®ÊûÅÂ∞èÂÄºÔºåÁÑ∂ÂêéÈÄöËøáÁºìÊÖ¢Âú∞Èôç‰ΩéÊ∏©Â∫¶ÔºåÁÆóÊ≥ïÂ∞±ÊúÄÁªàÂèØËÉΩÊî∂ÊïõÂà∞ÂÖ®Â±ÄÊúÄ‰ºòËß£ÔºåÂÖ∑‰ΩìÊµÅÁ®ã‰∏∫Ôºö\n‰ª§$T = T_0$ÔºåË°®Á§∫ÂºÄÂßãÈÄÄÁÅ´ÁöÑÂàùÂßãÊ∏©Â∫¶ÔºåÈöèÊú∫‰∫ßÁîü‰∏Ä‰∏™ÂàùÂßãËß£$x_0$,Âπ∂ËÆ°ÁÆóÂØπÂ∫îÁöÑÁõÆÊ†áÂáΩÊï∞ÂÄº$E(x_0)$;\n‰ª§$T = kT,k \\in (0,1)$Ôºå$k$‰∏∫Ê∏©Â∫¶‰∏ãÈôçÈÄüÁéá\nÂØπÂΩìÂâçËß£$x_t$ÊñΩÂä†ÈöèÊú∫Êâ∞Âä®ÔºåÂú®ÂÖ∂ÈÇªÂüü‰∫ßÁîü‰∏Ä‰∏™Êñ∞Ëß£$x_{t+1}$,Âπ∂ËÆ°ÁÆóÁõÆÊ†áÂáΩÊï∞ÂÄº$E(x_{t+1})$\nËÆ°ÁÆóÔºö\n$$\\Delta E = E(x_{t+1}) - E(x_t)$$\nËã•$\\Delta \u0026lt; 0$ÔºåÊé•ÂèóÊñ∞Ëß£‰Ωú‰∏∫ÂΩìÂâçËß£ÔºåÂê¶ÂàôÊåâÁÖßÊ¶ÇÁéáÂà§Êñ≠ÊòØÂê¶Êé•ÂèóÊñ∞Ëß£\nÂú®Ê∏©Â∫¶$T$‰∏ãÔºåÈáçÂ§ç$L$Ê¨°Êâ∞Âä®ÂíåÊé•ÂèóËøáÁ®ãÔºåÂç≥ÈáçÂ§ç3,4\nÂà§Êñ≠Ê∏©Â∫¶ÊòØÂê¶ËææÂà∞ÁªàÊ≠¢Ê∏©Â∫¶Ê∞¥Âπ≥ÔºåËã•ÊòØÂàôÁªàÊ≠¢ÁÆóÊ≥ïÔºåÂê¶ÂàôËøîÂõûÊ≠•È™§2\n4.Ë∑ØÂæÑÂπ≥ÊªëÁÆóÊ≥ï 4.1.Â§öÈ°πÂºèÊèíÂÄº $\\quad$ Â§öÈ°πÂºèÊèíÂÄºÁöÑÂéüÁêÜÂèØ‰ª•Âú®Êï∞ÂÄºÂàÜÊûê‰∏≠ÊâæÂà∞ÔºåËøôÈáåÂèØ‰ª•Â±ïÁ§∫Áõ∏Â∫îÁöÑÊ†∑‰æã\n#include\u0026lt;iostream\u0026gt; #define maxsize 100 using namespace std; double L_interpolitation(int n,double x[maxsize],double y[maxsize],double vx,double result) { double temp; for(int k=0;k\u0026lt;=n;k++) { temp=1; for(int i=0;i\u0026lt;=n;i++) { if(i!=k) { temp*=(vx-x[i])/(x[k]-x[i]); } } result += y[k]*temp; } return result; } int main() { int n; double x[maxsize],y[maxsize],result=0,vx,temp; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;vx; for(int i=0;i\u0026lt;=n;i++) { cin \u0026gt;\u0026gt; x[i] \u0026gt;\u0026gt; y[i]; } result=L_interpolitation(n,x,y,vx,result); cout\u0026lt;\u0026lt;result\u0026lt;\u0026lt;endl; return 0; } 4.2.Ë¥ùÂ°ûÂ∞îÊõ≤Á∫ø $\\quad$ ÂØπ‰∫é‰∏ÄÈò∂Êõ≤Á∫øÔºåÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞ÊòØ‰∏ÄÊù°Áõ¥Á∫øÔºåÈÄöËøáÂá†‰ΩïÁü•ËØÜÔºåÂæàÂÆπÊòìÊ†πÊçÆtÁöÑÂÄºÂæóÂá∫Á∫øÊÆµ‰∏äÈÇ£‰∏™ÁÇπÁöÑÂùêÊ†áÔºö\n$$B_1(t) = P_0 + (P_1 - P_0) t,t \\in [0,1]$$\n$\\quad$ ÂØπ‰∫é‰∫åÈò∂ÔºåÂÅáËÆæ$A,B,C$‰∏âÁÇπ‰∏çÂÖ±Á∫øÔºåÂú®Á¨¨‰∏ÄÊù°Á∫øÊÆµ‰∏ä‰ªªÈÄâ‰∏Ä‰∏™ÁÇπ$D$„ÄÇËÆ°ÁÆóËØ•ÁÇπÂà∞Á∫øÊÆµËµ∑ÁÇπÁöÑË∑ùÁ¶ª$AD$Ôºå‰∏éËØ•Á∫øÊÆµÊÄªÈïø$AB$ÁöÑÊØî‰æã„ÄÇ\n$\\quad$ Ê†πÊçÆ‰∏ä‰∏ÄÊ≠•ÂæóÂà∞ÁöÑÊØî‰æãÔºå‰ªéÁ¨¨‰∫åÊù°Á∫øÊÆµ‰∏äÊâæÂá∫ÂØπÂ∫îÁöÑÁÇπ$E$Ôºå‰ΩøÂæó\n$$\\frac{AD}{AB} = \\frac{BE}{BC}$$\n$\\quad$ ËøôÊó∂ÂÄô$DE$ÂèàÊòØ‰∏ÄÊù°Áõ¥Á∫ø‰∫ÜÔºåÂ∞±ÂèØ‰ª•ÊåâÁÖß‰∏ÄÈò∂ÁöÑË¥ùÂ°ûÂ∞îÊñπÁ®ãÊù•ËøõË°åÁ∫øÊÄßÊèíÂÄº‰∫ÜÔºåÂç≥Ôºö$t = AD : AE$\n$$B_2(t) = (1 - t)^2P_0 + 2t(1 - t)P_1 + t^2P_2,t \\in [0,1]$$\n$\\quad$ ÂØπ‰∫éÂÆûÈôÖÁöÑË¥ùÂ°ûÂ∞îÊõ≤Á∫øÔºåÊúâ‰∏§ÁßçË°®ËææÂºèÔºö\n$$P(t) = \\sum_{i=0}^{n}{P_i}\\tbinom{n}{i}t^i(1-t)^{n-i}[i=0,1,2,\u0026hellip;,n]$$\n$\\quad$ ÂÆÉÊú¨Ë∫´‰πüÂèØ‰ª•ÁêÜËß£‰∏∫‰∫åÈ°πÂºèÂ±ïÂºÄ\n$\\quad$ ËÄåÂè¶‰∏ÄÁßçÂΩ¢Âºè‰∏∫ÈÄíÂΩíÂΩ¢ÂºèÔºö\n$$B_{i,n}(t) = (1 - t)B_{i,n-1}(t) + tB_{i-1,n-1}(t)[i=0,1,\u0026hellip;,n]$$\n4.3.‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫ø,BÊ†∑Êù°Êõ≤Á∫ø $\\quad$ Ê†∑Êù°ÊòØ‰∏ÄÁßçÊï∞ÊçÆÊèíÂÄºÁöÑÊñπÂºèÔºåÂú®Â§öÈ°πÂºèÊèíÂÄº‰∏≠ÔºåÂ§öÈ°πÂºèÊòØÁªôÂá∫ÁöÑÂçï‰∏ÄÂÖ¨ÂºèÊù•Â∞ΩÂèØËÉΩÊª°Ë∂≥ÊâÄÊúâÁöÑÊï∞ÊçÆÁÇπÔºåËÄåÊ†∑Êù°Âàô‰ΩøÁî®Â§ö‰∏™ÂÖ¨ÂºèÔºåÊØè‰∏™ÂÖ¨ÂºèÈÉΩÊòØ‰ΩéÈò∂Â§öÈ°πÂºèÔºåÂÖ∂ËÉΩÂ§ü‰øùËØÅÈÄöËøáÊâÄÊúâÁöÑÊï∞ÊçÆÁÇπ„ÄÇ\n$\\quad$ Â∑•Á®ãÂ∏àÂà∂ÂõæÊó∂ÔºåÊääÂØåÊúâÂºπÊÄßÁöÑÁªÜÈïøÊú®Êù°ÔºàÊâÄË∞ìÊ†∑Êù°ÔºâÁî®ÂéãÈìÅÂõ∫ÂÆöÂú®ÈááÊ†∑ÁÇπ‰∏äÔºåÂú®ÂÖ∂‰ªñÂú∞ÊñπËÆ©ÂÆÉËá™Áî±ÂºØÊõ≤ÔºåÁÑ∂ÂêéÊ≤øÊú®Êù°Áîª‰∏ãÊõ≤Á∫øÔºåÁß∞‰∏∫Ê†∑Êù°Êõ≤Á∫ø„ÄÇ\n$\\quad$ Âú®Ê†∑Êù°‰∏§‰∏™ÈááÊ†∑ÁÇπ‰πãÈó¥Ëá™Áî±ÂºØÊõ≤ÁöÑÁ∫øÊÆµÂàô‰∏∫Êõ≤Á∫øÊÆµ„ÄÇÊ±ÇËß£‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫øÁöÑÊú¨Ë¥®Â∞±ÊòØÊ±ÇËß£‰∏§‰∏§ÈááÊ†∑ÁÇπ‰πãÈó¥ÁöÑÊõ≤Á∫øÊÆµË°®ËææÂÖ¨Âºè„ÄÇ\n$\\quad$ ÊúÄÁÆÄÂçïÁöÑÊ†∑Êù°Êõ≤Á∫ø‰∏∫Á∫øÊÄßÊ†∑Êù°Êõ≤Á∫øÔºåÂç≥Êää‰∏§‰∏™Áõ∏ÈÇªÁÇπËøûÊé•Ëµ∑Êù•ÂΩ¢ÊàêÁõ¥Á∫øÊÆµÔºå‰∏§‰∏™Áõ∏ÈÇªÁÇπ‰πãÈó¥ÁîªÁöÑÊòØÁ∫øÊÄßÂáΩÊï∞$y = a_ix + b_i$\n$\\quad$ Á∫øÊÄßÊ†∑Êù°ÂèØ‰ª•ÂØπ‰ªªÊÑèÁöÑ$n$‰∏™ÁÇπÈõÜËøõË°åÊèíÂÄºÔºå‰ΩÜÊòØÁ∫øÊÄßÊ†∑Êù°Áº∫‰πèÂπ≥ÊªëÊÄßÔºåËÄåÁ®çÂêé‰ªãÁªçÁöÑ‰∏âÊ¨°Ê†∑Êù°ÂèØ‰ª•ÂæàÂ•ΩÁöÑËß£ÂÜ≥Ëøô‰∏™Áº∫ÁÇπ„ÄÇ\n‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫øÊÄßË¥® ‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫øÂú®Á∫ΩÁªìÂ§ÑËøûÁª≠ $$S_i(x_i) = y_i,S_i(x_{i+1} = y_{y+1}),ÂÖ∂‰∏≠i=1,2,\u0026hellip;,n-1$$\n‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫øÂú®Á∫ΩÁªìÂ§ÑÊñúÁéáÁõ∏Âêå $$S^{(1)}_{i-1}(x_i) = S^{(1)}_i(x_i),ÂÖ∂‰∏≠i=1,2,\u0026hellip;,n-1$$\n‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫øÂú®Á∫ΩÁªìÂ§ÑÊõ≤ÁéáÁõ∏Âêå $$S^{(2)}_{i-1}(x_i) = S^{(2)}_i(x_i),ÂÖ∂‰∏≠i=1,2,\u0026hellip;,n-1$$\n‰∏âÊ¨°Ëá™ÁÑ∂Ê†∑Êù°Á´ØÁÇπÊù°‰ª∂ $$S^{(3)}1(x_1) = 0,S^{(3)}{n-1}(x_n) = 0$$\nÊñúÁéáË∞ÉÊï¥‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫ø/Èí≥Âà∂‰∏âÊ¨°Ê†∑Êù°(ÁªôÂÆöÂàùÂßãÈÄüÂ∫¶ÔºåÁªàÁÇπÈÄüÂ∫¶)Á´ØÁÇπÊù°‰ª∂„ÄÇ $$S^{(1)}1(x_1) = v_1ÔºåS^{(1)}{n-1}(x_n) = v_2$$\n‰∏âÊ¨°Ê†∑Êù°ÊèíÂÄºÊ≥ïÁöÑ‰∏ªË¶ÅÊ≠•È™§Â¶Ç‰∏ãÔºö\nÂú®ÊØè‰∏™Â∞èÂå∫Èó¥ÂÜÖÊãüÂêàÂá∫‰∏Ä‰∏™‰∏âÊ¨°Â§öÈ°πÂºèÔºõ ËÆæÁΩÆËæπÁïåÊù°‰ª∂ÔºåÂæóÂà∞ÊñπÁ®ãÁªÑÔºõ Ëß£Âá∫ÊñπÁ®ãÁªÑÔºåÊ±ÇÂá∫ÊØè‰∏™Â∞èÂå∫Èó¥ÁöÑÁ≥ªÊï∞Ôºõ ÁªôÂÆöÊèíÂÄºÁÇπÔºåÂà©Áî®Á≥ªÊï∞Ê±ÇÂá∫ÂØπÂ∫îÁöÑÂáΩÊï∞ÂÄº„ÄÇ ‰ΩøÁî®Python‰ª£Á†ÅÊºîÁ§∫Â¶Ç‰∏ãÔºö\nimport numpy as np import matplotlib.pyplot as plt def splinecoeff(x,y,v1=0,vn=0): n = len(x) A = np.zeros((n,n)) r = np.zeros((n,1)) dx = np.diff(x) dy = np.diff(y) for i in range(1,n-1): A[i,i-1:i+2] = [dx[i-1],2*(dx[i-1] + dx[i]),dx[i]] r[i] = 3*(dy[i]/dx[i]-dy[i-1]/dx[i-1]) A[0, 0] = 1 # Áü©Èòµ‰∏ÄË°å‰∏ÄÂàóÔºåÂÄº‰∏∫1 A[-1, -1] = 1 # Áü©ÈòµÊú´Ë°åÊú´ÂàóÔºåÂÄº‰∏∫1 coeff = np.zeros((n, 3)) coeff[:, 1] = np.linalg.solve(A, r).flatten() # Ëß£Áü©ÈòµÊñπÁ®ãÔºåÂæóc_i for i in range(n-1): # ‰ª£ÂõûÔºåËß£b_i,d_i coeff[i, 2] = (coeff[i+1, 1]-coeff[i, 1])/(3*dx[i]) # d_i = (c_i - c_i)/(3*dx) coeff[i, 0] = dy[i]/dx[i]-dx[i]*(2*coeff[i, 1]+coeff[i+1, 1])/3 # b_i = dy/dx - (dx/3) * (2*c_i + c_{i+1}) return coeff[:-1] #coeff[:-1]Êåá‰ª£‰∫ÜÂ§öÈ°πÂºèÊãüÂêàÂáΩÊï∞ËøîÂõûÁöÑÁ≥ªÊï∞coeff‰∏≠Èô§‰∫ÜÊúÄÂêé‰∏Ä‰∏™ÔºàË°åÔºâÂÖÉÁ¥†‰ª•Â§ñÁöÑÊâÄÊúâÂÖÉÁ¥†Ôºå‰πüÂ∞±ÊòØÂâçn-1‰∏™Á≥ªÊï∞ def splineplot(x, y, k): n = len(x) coeff = splinecoeff(x, y) x1 = [] y1 = [] for i in range(n-1): # ÂÜç‰ª£Âõû s_i(x) = a_i + b_i(x-x_i) + c_i(x - x_i)^2 + d_i(x - x_i)^3, x_i \u0026lt; x \u0026lt;x_{i+1} xs = np.linspace(x[i], x[i+1], k+1) dx = xs - x[i] ys = coeff[i, 2] * dx # Áß¶‰πùÈü∂ÁÆóÊ≥ï ÂΩïÂÖ•Ê±ÇÂÄº ys = (ys + coeff[i, 1]) * dx ys = (ys + coeff[i, 0]) * dx + y[i] x1.extend(xs[:-1]) # xs ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†Âà∞ÂÄíÊï∞Á¨¨‰∫å‰∏™ÂÖÉÁ¥†Ôºà‰∏çÂåÖÊã¨ÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÔºâÊ∑ªÂä†Âà∞ÂàóË°® x1 ÁöÑÊú´Â∞æ y1.extend(ys[:-1]) x1.append(x[-1]) # x ÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†Ê∑ªÂä†Âà∞ÂàóË°® x1 ÁöÑÊú´Â∞æ y1.append(y[-1]) plt.plot(x, y, \u0026#39;o\u0026#39;, x1, y1) plt.show() x = np.array([1, 2, 3, 4, 5]) y = np.array([7, 2, 6, 1, 9]) k = 1000 splineplot(x, y, k) ‰ΩøÁî®C++Á§∫‰æãÂ¶Ç‰∏ã(Ë∞ÉÁî®Eigen)\n#pragma once #include \u0026lt;iostream\u0026gt; #include \u0026lt;Eigen/Dense\u0026gt; //using Eigen::MatrixXd; using namespace Eigen; using namespace Eigen::internal; using namespace Eigen::Architecture; using namespace std; class CubicSpline { private: vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; point2D; vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; CubicSplineParameter;//a, b, c, d. vector\u0026lt;double\u0026gt; h; vector\u0026lt;double\u0026gt; m; public: void CubicSpline_init(vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; point2D_input) { point2D = point2D_input; //init h h.clear(); h.resize(point2D.size() - 1); for (int i = 0; i \u0026lt; point2D.size() - 1; i++) { double x1 = point2D[i][0]; double x2 = point2D[i + 1][0]; double h_i = abs(x2 - x1); h[i] = h_i; } //init m. m.size = point2D.size() //1, compute yh coefficient vector\u0026lt;double\u0026gt; yh(point2D_input.size()); for (int i = 0; i \u0026lt; yh.size(); i++) { if (i == 0 || i == yh.size() - 1) { yh[i] = 0; } else { yh[i] = 6 * ((point2D[i + 1][1] - point2D[i][1]) / h[i] - (point2D[i][1] - point2D[i - 1][1]) / h[i - 1]); } } MatrixXf A(point2D.size(), point2D.size()); MatrixXf B(point2D.size(), 1); MatrixXf m; //2, init A, B B(0, 0) = yh[0]; B(point2D.size() - 1, 0) = yh[point2D.size() - 1]; for (int i = 0; i \u0026lt; point2D.size() - 1; i++) { A(0, i) = 0; A(point2D.size() - 1, i) = 0; } A(0, 0) = 1; A(point2D.size() - 1, point2D.size() - 2) = 1; for (int i = 1; i \u0026lt; point2D.size() - 1; i++) { B(i, 0) = yh[i]; for (int j = 0; j \u0026lt; point2D.size(); j++) { if (j == i) { A(i, j) = 2 * (h[i - 1] + h[i]); } else if (j == i - 1) { A(i, j) = h[i - 1]; } else if (j == i + 1) { A(i, j) = h[i]; } else { A(i, j) = 0; } } } m = A.llt().solve(B); vector\u0026lt;double\u0026gt; mV(point2D.size()); for (int i = 0; i \u0026lt; point2D.size(); i++) { mV[i] = m(i, 0); } for (int i = 0; i \u0026lt; m.size() - 1; i++) { vector\u0026lt;double\u0026gt; CubicSplineParameter_i; double a = point2D[i][1]; double b = (point2D[i + 1][1] - point2D[i][1]) / h[i] - h[i] / 2 * mV[i] - h[i] / 6 * (mV[i + 1] - mV[i]); double c = mV[i] / 2; double d = (mV[i + 1] - mV[i]) / (6 * h[i]); CubicSplineParameter_i.push_back(a); CubicSplineParameter_i.push_back(b); CubicSplineParameter_i.push_back(c); CubicSplineParameter_i.push_back(d); CubicSplineParameter.push_back(CubicSplineParameter_i); } } vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; CubicSpline_Insert(int step) { vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; insertList; for (int i = 0; i \u0026lt; CubicSplineParameter.size(); i++) { double h_i = h[i] / (double)step; insertList.push_back(point2D[i]); double a = CubicSplineParameter[i][0]; double b = CubicSplineParameter[i][1]; double c = CubicSplineParameter[i][2]; double d = CubicSplineParameter[i][3]; for (int j = 1; j \u0026lt; step; j++) { double x_new = point2D[i][0] + h_i * j; double y_new = a + b * (x_new - point2D[i][0]) + c * (x_new - point2D[i][0]) * (x_new - point2D[i][0]) + d * (x_new - point2D[i][0]) * (x_new - point2D[i][0]) * (x_new - point2D[i][0]); vector\u0026lt;double\u0026gt; p_new_ij; p_new_ij.push_back(x_new); p_new_ij.push_back(y_new); insertList.push_back(p_new_ij); } } insertList.push_back(point2D[point2D.size() - 1]); return insertList; } vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; CubicSpline_Insert(double step) { vector\u0026lt;vector\u0026lt;double\u0026gt;\u0026gt; insertList; for (int i = 0; i \u0026lt; CubicSplineParameter.size(); i++) { int h_i = h[i] / (double)step; insertList.push_back(point2D[i]); double a = CubicSplineParameter[i][0]; double b = CubicSplineParameter[i][1]; double c = CubicSplineParameter[i][2]; double d = CubicSplineParameter[i][3]; for (int j = 1; j \u0026lt; h_i; j++) { double x_new = point2D[i][0] + step * j; double y_new = a + b * (x_new - point2D[i][0]) + c * (x_new - point2D[i][0]) * (x_new - point2D[i][0]) + d * (x_new - point2D[i][0]) * (x_new - point2D[i][0]) * (x_new - point2D[i][0]); vector\u0026lt;double\u0026gt; p_new_ij; p_new_ij.push_back(x_new); p_new_ij.push_back(y_new); insertList.push_back(p_new_ij); } } insertList.push_back(point2D[point2D.size() - 1]); return insertList; } }; $\\quad$ BÊ†∑Êù°ÊñπÊ≥ïÂÖ∑ÊúâË°®Á§∫‰∏éËÆæËÆ°Ëá™Áî±ÂûãÊõ≤Á∫øÊõ≤Èù¢ÁöÑÂº∫Â§ßÂäüËÉΩÔºåÊòØÂΩ¢Áä∂Êï∞Â≠¶ÊèèËø∞ÁöÑ‰∏ªÊµÅÊñπÊ≥ï‰πã‰∏ÄÔºåÂè¶Â§ñBÊ†∑Êù°ÊñπÊ≥ïÊòØÁõÆÂâçÂ∑•‰∏ö‰∫ßÂìÅÂá†‰ΩïÂÆö‰πâÂõΩÈôÖÊ†áÂáÜ‚Äî‚ÄîÊúâÁêÜBÊ†∑Êù°ÊñπÊ≥ï (NURBS)ÁöÑÂü∫Á°Ä„ÄÇBÊ†∑Êù°ÊñπÊ≥ïÂÖºÂ§á‰∫ÜBezierÊñπÊ≥ïÁöÑ‰∏ÄÂàá‰ºòÁÇπÔºåÂåÖÊã¨Âá†‰Ωï‰∏çÂèòÊÄßÔºå‰ªøÂ∞Ñ‰∏çÂèòÊÄßÁ≠âÁ≠âÔºåÂêåÊó∂ÂÖãÊúç‰∫ÜBezierÊñπÊ≥ï‰∏≠Áî±‰∫éÊï¥‰ΩìË°®Á§∫Â∏¶Êù•‰∏çÂÖ∑ÊúâÂ±ÄÈÉ®ÊÄßË¥®ÁöÑÁº∫ÁÇπÔºàÁßªÂä®‰∏Ä‰∏™ÊéßÂà∂È°∂ÁÇπÂ∞Ü‰ºöÂΩ±ÂìçÊï¥‰∏™Êõ≤Á∫øÔºâ„ÄÇBÊ†∑Êù°Êõ≤Á∫øÊñπÁ®ãÂèØË°®Á§∫‰∏∫:\n$$p(u) = \\sum_{i=0}^n{d_iN_{i,k}(u)}$$\n$\\quad$ ÂÖ∂‰∏≠,$d_i(i=0,1,\u0026hellip;,n)$‰∏∫ÊéßÂà∂È°∂ÁÇπ(ÂùêÊ†á)Ôºå$N_{i,k}(i=0,1,\u0026hellip;,n)$‰∏∫$k$Ê¨°ËßÑËåÉ$B$Ê†∑Êù°Âü∫ÂáΩÊï∞ÔºåÊúÄÈ´òÊ¨°Êï∞ÊòØ$k$„ÄÇÂü∫ÂáΩÊï∞ÊòØÊúâ‰∏Ä‰∏™Êàê‰∏∫ËäÇÁÇπÁü¢ÈáèÁöÑÈùûÈÄíÂáèÂèÇÊï∞$u$Â∫èÂàó$U$:$u_0 \\leq u_1 \\leq \u0026hellip; \\leq u_{n+k+1}$ ÊâÄÂÜ≥ÂÆöÁöÑ$k$ Ê¨°ÂàÜÊÆµÂ§öÈ°πÂºè\n$\\quad$ BÊ†∑Êù°ÁöÑÂü∫ÂáΩÊï∞ÈÄöÂ∏∏ÈááÁî®Cox-deBoorÈÄíÊé®ÂÖ¨ÂºèÔºö\n$$\\begin{cases} N_{i,0} = \\begin{cases} 1 \\quad if \\leq u_i \\leq u \\leq u_{i+1} \\ 0 \\quad others \\end{cases} \\ N_{i,k}(u) = \\frac{u - u_i}{u_{i+k} - u_i}N_{i,k-1}(u) + \\frac{u_{i+k+1} - u}{u_{i+k+1} - u_{i+1}}N_{i+1,k-1}(u) \\ define \\quad \\frac{0}{0} = 0 \\end{cases}$$\n$\\quad$ Âºè‰∏≠$i$‰∏∫ËäÇÁÇπÂ∫èÂè∑Ôºå$k$ÊòØÂü∫ÂáΩÊï∞ÁöÑÊ¨°Êï∞ÔºåÂÖ±Êúâ$n+1$‰∏™ÊéßÂà∂È°∂ÁÇπ„ÄÇÊ≥®ÊÑèÂå∫ÂàÜËäÇÁÇπÂíåÊéßÂà∂È°∂ÁÇπÔºåËäÇÁÇπÊòØÂú®ËäÇÁÇπÁü¢Èáè$U$‰∏≠ÂèñÂæóÔºåÊéßÂà∂È°∂ÁÇπÂàôÊòØÂùêÊ†áÁÇπÔºåÂÜ≥ÂÆö$B$Ê†∑Êù°ÁöÑÊéßÂà∂Â§öËæπÂΩ¢„ÄÇCox-deBoorÂú∞Êé®ÂÖ¨ÂºèÊòØBÊ†∑Êù°Êõ≤Á∫øÁöÑÂÆö‰πâÁöÑÊ†∏ÂøÉÔºåËØ•ÂÖ¨ÂºèÂú®Á®ãÂ∫è‰∏≠ÁöÑÂÆûÁé∞ÂèØÈááÁî®ÈÄíÂΩíÁöÑÊñπÂºèÔºö\ndouble N[max1][max2][max3]; double u_data[max3]; init(u_data);//init the data of u_data for(int i=0;i\u0026lt;max1;i++) { for(int u=0;u\u0026lt;max3;u++) { if(k == 0) { if(u \u0026gt;= u_data[i+1] \u0026amp;\u0026amp; u \u0026lt; u_data[i+2]) N[i][0][u] = 0; else N[i][0][u] = 1; } for(int k=1;k\u0026lt;max2;k++) { double length1 = u_data[i+k] - u_data[i]; double length2 = u_data[i+k+1] - u_data[i+1]; if(length1 == 0) length1 = 1.0; if(length2 == 0) length2 = 1.0; double temp1 = (u - u_data[i]) / length1 * N[i][k-1][u]; double temp2 = (u_data[i+k+1] - u) / length2 * N[i+1][k-1][u]; N[i][k][u] = temp1 + temp2; } } } Ê†πÊçÆËäÇÁÇπÁü¢Èáè‰∏≠ËäÇÁÇπÁöÑÂàÜÂ∏ÉÊÉÖÂÜµ‰∏çÂêåÔºåÂèØ‰ª•ÂàíÂàÜ4Áßç‰∏çÂêåÁ±ªÂûãÁöÑBÊ†∑Êù°Êõ≤Á∫ø„ÄÇ‰∏çÂêåÁ±ªÂûãÁöÑBÊ†∑Êù°Êõ≤Á∫ø‰∏ªË¶ÅÂú®‰∫éËäÇÁÇπÁü¢ÈáèÔºåÂØπ‰∫éÂÖ∑Êúâ$n+1$‰∏™ÊéßÂà∂È°∂ÁÇπ$(P_0,P_1,\u0026hellip;,P_n)$ÁöÑ$k$Ê¨°$B$Ê†∑Êù°Êõ≤Á∫øÔºåÊó†ËÆ∫ÊòØÂì™ÁßçÁ±ªÂûãÈÉΩÂÖ∑Êúâ$n+k+2$‰∏™ËäÇÁÇπ$[u_0,u_1,\u0026hellip;,u_{k+1}]$\nÂùáÂåÄBÊ†∑Êù°Êõ≤Á∫ø ËäÇÁÇπÁü¢Èáè‰∏≠ËäÇÁÇπ‰∏∫Ê≤øÂèÇÊï∞ËΩ¥ÂùáÂåÄÊàñÁ≠âË∑ùÂàÜÂ∏É\nÂØπÂ∫îÁöÑËäÇÁÇπÁü¢Èáè‰∏∫Ôºö$[0,\\frac{1}{7},\\frac{2}{7},\\frac{3}{7},\\frac{4}{7},\\frac{5}{7},\\frac{6}{7},1]$\nÂáÜÂùáÂåÄBÊ†∑Êù°Êõ≤Á∫ø ÂÖ∂ËäÇÁÇπÁü¢Èáè‰∏≠‰∏§Á´ØËäÇÁÇπÂÖ∑ÊúâÈáçÂ§çÂ∫¶$k+1$ÔºåÂç≥$u_0=u_1=\u0026hellip;=u_k,u_{n+1},u_{n+2},\u0026hellip;,u_{n+k+1}$ÔºåÊâÄÊúâÁöÑÂÜÖËäÇÁÇπÂùáÂåÄÂàÜÂ∏ÉÔºåÂÖ∑ÊúâÈáçÂ§çÂ∫¶1\nÂØπÂ∫îÁöÑËäÇÁÇπÁü¢Èáè‰∏∫Ôºö$[0,0,0,\\frac{1}{3},\\frac{2}{3},1,1,1]$\nÂàÜÊÆµBezierÊõ≤Á∫ø ÂÖ∂ËäÇÁÇπÁü¢Èáè‰∏≠‰∏§Á´ØËäÇÁÇπÁöÑÈáçÂ§çÂ∫¶‰∏éÁ±ªÂûã2Áõ∏ÂêåÔºå‰∏∫k+1„ÄÇ‰∏çÂêåÁöÑÊòØÂÜÖËäÇÁÇπÈáçÂ§çÂ∫¶‰∏∫$k$„ÄÇËØ•Á±ªÂûãÊúâÈôêÂà∂Êù°‰ª∂ÔºåÊéßÂà∂È°∂ÁÇπÊï∞Âáè1ÂøÖÈ°ªÁ≠â‰∫éÊ¨°Êï∞ÁöÑÊ≠£Êï¥Êï∞ÂÄçÔºåÂç≥ÂøÖÈ°ªÊª°Ë∂≥$\\frac{n}{k} \\in N$„ÄÇ\nÂØπÂ∫îÁöÑËäÇÁÇπÁü¢Èáè: $[0,0,0,\\frac{1}{2},\\frac{1}{2},1,1,1]$\n‰∏ÄËà¨ÈùûÂùáÂåÄBÊ†∑Êù°Êõ≤Á∫ø ÂØπ‰ªªÊÑèÂàÜÂ∏ÉÁöÑËäÇÁÇπÁü¢Èáè$U=[u_0,u_1,\u0026hellip;,u_{n+k+1}]$ÔºåÂè™Ë¶ÅÂú®Êï∞Â≠¶‰∏äÊàêÁ´ãÈÉΩÂèØÈÄâÂèñ„ÄÇ\nËøôÈáåÁªôÂá∫ÂáÜÂùáÂåÄBÊ†∑Êù°ÂíåÂàÜÊÆµBezierÊõ≤Á∫øÁöÑÁîüÊàêËäÇÁÇπÁü¢ÈáèÁöÑ‰ª£Á†ÅÔºåÂùáÂåÄBÊ†∑Êù°ÁöÑÂæàÁÆÄÂçïÂ∞±‰∏çÂàóÂá∫‰∫Ü„ÄÇÂÅáËÆæÂÖ±$n+1$‰∏™ÊéßÂà∂È°∂ÁÇπÔºå$k$Ê¨°BÊ†∑Êù°ÔºåËæìÂÖ•ÂèÇÊï∞n,kÔºåËæìÂá∫ËäÇÁÇπÂà∞Áü¢ÈáèNodeVector‰∏≠„ÄÇ\n#include \u0026lt;vector\u0026gt; std::vector\u0026lt;double\u0026gt; U_quasi_uniform(int n, int k) { std::vector\u0026lt;double\u0026gt; NodeVector(n + k + 2, 0.0); int piecewise = n - k + 1; if (piecewise == 1) { for (int i = n + 1; i \u0026lt; n + k + 2; ++i) { NodeVector[i] = 1.0; } } else { int flag = 1; while (flag != piecewise) { NodeVector[k + flag] = NodeVector[k + flag - 1] + 1.0 / piecewise; ++flag; } for (int i = n + 1; i \u0026lt; n + k + 2; ++i) { NodeVector[i] = 1.0; } } return NodeVector; } BÊ†∑Êù°Êõ≤Á∫øÁöÑËÆ°ÁÆó Ê†πÊçÆBÊ†∑Êù°Êõ≤Á∫øÁöÑÂÆö‰πâÂÖ¨Âºè(1)ÔºåÊõ≤Á∫ø‰∏ä‰ªª‰∏ÄÁÇπÂùêÊ†áÂÄºÊòØÂèÇÊï∞ÂèòÈáèuÁöÑÂáΩÊï∞ÔºåÁî®Áü©ÈòµÂΩ¢ÂºèË°®Á§∫\n$$p(u) = (d_0,d_1,..,d_n) \\left( \\begin{matrix} N_{0,k}(u) \\ N_{1,k}(u) \\ \u0026hellip; \\ N_{n,k}(u) \\end{matrix} \\right)$$\nÂèØ‰ª•ÁúãÂá∫Âè™Ë¶ÅÂ∑≤Áü•ÊéßÂà∂È°∂ÁÇπÂùêÊ†á$d_i$ÔºåÊõ≤Á∫øÁöÑÊ¨°Êï∞$k$‰ª•ÂèäÂü∫ÂáΩÊï∞$N_{i,k}(u)$ÔºåÂ∞±ÂÆåÂÖ®Á°ÆÂÆö‰∫ÜBÊ†∑Êù°Êõ≤Á∫øÔºåÂÖ∂‰∏≠Âü∫ÂáΩÊï∞\n4.4.ÁâπÊÆäÊõ≤Á∫ø 5.Á©∫Èó¥ÈááÊ†∑ÁÆóÊ≥ï 5.1 KËøëÈÇªÁÆóÊ≥ï kËøëÈÇªÁÆóÊ≥ïÊòØ‰∏ÄÁßçÂü∫Êú¨ÂàÜÁ±ªÂíåÂõûÂΩíÊñπÊ≥ï„ÄÇÊú¨ÁØáÊñáÁ´†Âè™ËÆ®ËÆ∫ÂàÜÁ±ªÈóÆÈ¢òÁöÑkËøëÈÇªÊ≥ï„ÄÇ\nKËøëÈÇªÁÆóÊ≥ïÔºåÂç≥ÊòØÁªôÂÆö‰∏Ä‰∏™ËÆ≠ÁªÉÊï∞ÊçÆÈõÜÔºåÂØπÊñ∞ÁöÑËæìÂÖ•ÂÆû‰æãÔºåÂú®ËÆ≠ÁªÉÊï∞ÊçÆÈõÜ‰∏≠ÊâæÂà∞‰∏éËØ•ÂÆû‰æãÊúÄÈÇªËøëÁöÑK‰∏™ÂÆû‰æãÔºåËøôK‰∏™ÂÆû‰æãÁöÑÂ§öÊï∞Â±û‰∫éÊüê‰∏™Á±ªÔºåÂ∞±ÊääËØ•ËæìÂÖ•ÂÆû‰æãÂàÜÁ±ªÂà∞Ëøô‰∏™Á±ª‰∏≠„ÄÇ\nkËøëÈÇªÁÆóÊ≥ïÊòØÂú®ËÆ≠ÁªÉÊï∞ÊçÆÈõÜ‰∏≠ÊâæÂà∞‰∏éËØ•ÂÆû‰æãÊúÄÈÇªËøëÁöÑK‰∏™ÂÆû‰æãÔºåËøôK‰∏™ÂÆû‰æãÁöÑÂ§öÊï∞Â±û‰∫éÊüê‰∏™Á±ªÔºåÊàë‰ª¨Â∞±ËØ¥È¢ÑÊµãÁÇπÂ±û‰∫éÂì™‰∏™Á±ª„ÄÇ\nÊ≠•È™§Â¶Ç‰∏ãÔºö\nÂÅáËÆæÊúâ‰∏ÄÁªÑÈõÜÔºö\n$$T = {(x_1,y_1),(x_2,y_2),\u0026hellip;,(x_N,y_N)}$$\nÂÖ∂‰∏≠\n$$x_i \\in X \\subseteq (x_N,y_N)$$\n‰∏∫$n$Áª¥ÁöÑÂÆû‰æãÁâπÂæÅÂêëÈáè\n$$y_i \\in Y = {c_1,c_2,\u0026hellip;,c_K}$$\n‰∏∫ÂÆû‰æãÁöÑÁ±ªÂà´ÔºåÂÖ∂‰∏≠Ôºå$i=1,2,\u0026hellip;,N$ÔºåÈ¢ÑÊµãÂÆû‰æã$x$„ÄÇ\nËæìÂá∫ÔºöÈ¢ÑÊµãÂÆû‰æã$x$ÊâÄÂ±ûÁ±ªÂà´$y$„ÄÇ\nÁÆóÊ≥ïÊâßË°åÊ≠•È™§Ôºö\nÊ†πÊçÆÁªôÂÆöÁöÑË∑ùÁ¶ªÈáèÂ∫¶ÊñπÊ≥ï(‰∏ÄËà¨ÊÉÖÂÜµ‰∏ã‰ΩøÁî®Ê¨ßÂºèË∑ùÁ¶ª)Âú®ËÆ≠ÁªÉÈõÜT‰∏≠ÊâæÂá∫‰∏é$x$ÊúÄÁõ∏ËøëÁöÑ$k$‰∏™Ê†∑Êú¨ÁÇπÔºåÂπ∂Â∞ÜËøô$k$‰∏™Ê†∑Êú¨ÁÇπÊâÄË°®Á§∫ÁöÑÈõÜÂêàËÆ∞‰∏∫$N_k(x)$\nÊ†πÊçÆÂ¶Ç‰∏ãÊâÄÁ§∫ÁöÑÂ§öÊï∞ÊäïÁ•®ÁöÑÂéüÂàôÁ°ÆÂÆöÂÆû‰æã$x$ÊâÄÂ±ûÁ±ªÂà´$y$:\n$$y = argmax\\sum_{x_i \\in N_{k(x)}}I(y_i,c_j),i=1,2,\u0026hellip;,N;j=1,2,\u0026hellip;,K$$\n‰∏äÂºè‰∏≠$I$‰∏∫ÊåáÁ§∫ÂáΩÊï∞\n$$I(x,y) = \\begin{cases} 1, if \\quad x = y \\ 0, if \\quad x \\neq y \\end{cases}$$\nÈÄöËøá‰∏äËø∞KNNÁÆóÊ≥ïÂéüÁêÜÁöÑËÆ≤Ëß£ÔºåÊàë‰ª¨ÂèëÁé∞Ë¶Å‰ΩøKNNÁÆóÊ≥ïËÉΩÂ§üËøêË°åÂøÖÈ°ªÈ¶ñÂÖàÁ°ÆÂÆö‰∏§‰∏™Âõ†Á¥†Ôºö\nÁÆóÊ≥ïË∂ÖÂèÇÊï∞kÔºõ\nÊ®°ÂûãÂêëÈáèÁ©∫Èó¥ÁöÑË∑ùÁ¶ªÈáèÂ∫¶„ÄÇ\nKÂÄºÁöÑÁ°ÆÂÆö KNNÁÆóÊ≥ï‰∏≠Âè™Êúâ‰∏Ä‰∏™Ë∂ÖÂèÇÊï∞kÔºåkÂÄºÁöÑÁ°ÆÂÆöÂØπKNNÁÆóÊ≥ïÁöÑÈ¢ÑÊµãÁªìÊûúÊúâÁùÄËá≥ÂÖ≥ÈáçË¶ÅÁöÑÂΩ±Âìç„ÄÇÊé•‰∏ãÊù•ÔºåÊàë‰ª¨ËÆ®ËÆ∫‰∏Ä‰∏ãkÂÄºÂ§ßÂ∞èÂØπÁÆóÊ≥ïÁªìÊûúÁöÑÂΩ±Âìç‰ª•Âèä‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÂ¶Ç‰ΩïÈÄâÊã©kÂÄº„ÄÇ\nÂ¶ÇÊûúkÂÄºÊØîËæÉÂ∞èÔºåÁõ∏ÂΩì‰∫éÊàë‰ª¨Âú®ËæÉÂ∞èÁöÑÈ¢ÜÂüüÂÜÖËÆ≠ÁªÉÊ†∑Êú¨ÂØπÂÆû‰æãËøõË°åÈ¢ÑÊµã„ÄÇËøôÊó∂ÔºåÁÆóÊ≥ïÁöÑËøë‰ººËØØÂ∑ÆÔºàApproximate ErrorÔºâ‰ºöÊØîËæÉÂ∞èÔºåÂõ†‰∏∫Âè™Êúâ‰∏éËæìÂÖ•ÂÆû‰æãÁõ∏ËøëÁöÑËÆ≠ÁªÉÊ†∑Êú¨Êâç‰ºöÂØπÈ¢ÑÊµãÁªìÊûúËµ∑‰ΩúÁî®„ÄÇ\n‰ΩÜÊòØÔºåÂÆÉ‰πüÊúâÊòéÊòæÁöÑÁº∫ÁÇπÔºöÁÆóÊ≥ïÁöÑ‰º∞ËÆ°ËØØÂ∑ÆÊØîËæÉÂ§ßÔºåÈ¢ÑÊµãÁªìÊûú‰ºöÂØπËøëÈÇªÁÇπÂçÅÂàÜÊïèÊÑüÔºå‰πüÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûúËøëÈÇªÁÇπÊòØÂô™Â£∞ÁÇπÁöÑËØùÔºåÈ¢ÑÊµãÂ∞±‰ºöÂá∫Èîô„ÄÇÂõ†Ê≠§ÔºåkÂÄºËøáÂ∞èÂÆπÊòìÂØºËá¥KNNÁÆóÊ≥ïÁöÑËøáÊãüÂêà„ÄÇ\nÂêåÁêÜÔºåÂ¶ÇÊûúkÂÄºÈÄâÊã©ËæÉÂ§ßÁöÑËØùÔºåË∑ùÁ¶ªËæÉËøúÁöÑËÆ≠ÁªÉÊ†∑Êú¨‰πüËÉΩÂ§üÂØπÂÆû‰æãÈ¢ÑÊµãÁªìÊûú‰∫ßÁîüÂΩ±Âìç„ÄÇËøôÊó∂ÂÄôÔºåÊ®°ÂûãÁõ∏ÂØπÊØîËæÉÈ≤ÅÊ£íÔºå‰∏ç‰ºöÂõ†‰∏∫‰∏™Âà´Âô™Â£∞ÁÇπÂØπÊúÄÁªàÈ¢ÑÊµãÁªìÊûú‰∫ßÁîüÂΩ±Âìç„ÄÇ‰ΩÜÊòØÁº∫ÁÇπ‰πüÂçÅÂàÜÊòéÊòæÔºöÁÆóÊ≥ïÁöÑËøëÈÇªËØØÂ∑Æ‰ºöÂÅèÂ§ßÔºåË∑ùÁ¶ªËæÉËøúÁöÑÁÇπÔºà‰∏éÈ¢ÑÊµãÂÆû‰æã‰∏çÁõ∏‰ººÔºâ‰πü‰ºöÂêåÊ†∑ÂØπÈ¢ÑÊµãÁªìÊûú‰∫ßÁîüÂΩ±ÂìçÔºå‰ΩøÂæóÈ¢ÑÊµãÁªìÊûú‰∫ßÁîüËæÉÂ§ßÂÅèÂ∑ÆÔºåÊ≠§Êó∂Ê®°ÂûãÂÆπÊòìÂèëÁîüÊ¨†ÊãüÂêà„ÄÇ\nÂõ†Ê≠§ÔºåÂú®ÂÆûÈôÖÂ∑•Á®ãÂÆûË∑µ‰∏≠ÔºåÊàë‰ª¨‰∏ÄËà¨ÈááÁî®‰∫§ÂèâÈ™åËØÅÁöÑÊñπÂºèÈÄâÂèñkÂÄº„ÄÇÈÄöËøá‰ª•‰∏äÂàÜÊûêÂèØÁü•Ôºå‰∏ÄËà¨kÂÄºÈÄâÂæóÊØîËæÉÂ∞èÔºåÊàë‰ª¨‰ºöÂú®ËæÉÂ∞èËåÉÂõ¥ÂÜÖÈÄâÂèñkÂÄºÔºåÂêåÊó∂ÊääÊµãËØïÈõÜ‰∏äÂáÜÁ°ÆÁéáÊúÄÈ´òÁöÑÈÇ£‰∏™Á°ÆÂÆö‰∏∫ÊúÄÁªàÁöÑÁÆóÊ≥ïË∂ÖÂèÇÊï∞k„ÄÇ\nÊ†∑Êú¨Á©∫Èó¥ÂÜÖÁöÑ‰∏§‰∏™ÁÇπ‰πãÈó¥ÁöÑË∑ùÁ¶ªÈáèÂ∫¶Ë°®Á§∫‰∏§‰∏™Ê†∑Êú¨ÁÇπ‰πãÈó¥ÁöÑÁõ∏‰ººÁ®ãÂ∫¶ÔºöË∑ùÁ¶ªË∂äÁü≠ÔºåË°®Á§∫Áõ∏‰ººÁ®ãÂ∫¶Ë∂äÈ´òÔºõÂèç‰πãÔºåÁõ∏‰ººÁ®ãÂ∫¶Ë∂ä‰Ωé„ÄÇ\nÈóµÂèØÂ§´ÊñØÂü∫Ë∑ùÁ¶ª ÈóµÂèØÂ§´ÊñØÂü∫Ë∑ùÁ¶ªÊú¨Ë∫´‰∏çÊòØ‰∏ÄÁßçË∑ùÁ¶ªÔºåËÄåÊòØ‰∏ÄÁ±ªË∑ùÁ¶ªÁöÑÂÆö‰πâ„ÄÇÂØπ‰∫énÁª¥Á©∫Èó¥‰∏≠ÁöÑ‰∏§‰∏™ÁÇπx(x1,x2,‚Ä¶,xn)Âíåy(y1,y2,‚Ä¶,yn)ÔºåxÂíåy‰πãÈó¥ÁöÑÈóµÂèØÂ§´ÊñØÂü∫Ë∑ùÁ¶ªÂèØ‰ª•Ë°®Á§∫‰∏∫Ôºö\n$$d_{xy} = (\\sum_{k=1}^{n}{(x_k - y_k)^p})^{\\frac{1}{n}}$$\nÂÖ∂‰∏≠Ôºå$p$ÊòØ‰∏Ä‰∏™ÂèØÂèòÂèÇÊï∞:\nÂΩì$p=1$Êó∂ÔºåË¢´Áß∞‰∏∫ÊõºÂìàÈ°øË∑ùÁ¶ª;\nÂΩì$p=2$Êó∂ÔºåË¢´Áß∞‰∏∫Ê¨ßÂºèË∑ùÁ¶ª;\nÂΩì$p=\\infty$ÔºåË¢´Áß∞‰∏∫ÂàáÊØîÈõ™Â§´Ë∑ùÁ¶ª\nÊ¨ßÂºèË∑ùÁ¶ª Ê¨ßÂºèË∑ùÁ¶ªÊòØÊúÄÊòì‰∫éÁêÜËß£ÁöÑ‰∏ÄÁßçË∑ùÁ¶ªËÆ°ÁÆóÊñπÊ≥ïÔºåÊ∫êËá™Ê¨ßÊ∞èÁ©∫Èó¥‰∏≠‰∏§ÁÇπÈó¥ÁöÑË∑ùÁ¶ªÂÖ¨ÂºèÔºå‰πüÊòØÊúÄÂ∏∏Áî®ÁöÑË∑ùÁ¶ªÈáèÂ∫¶„ÄÇ\nÊõºÂìàÈ°øË∑ùÁ¶ª ÊõºÂìàÈ°øË∑ùÁ¶ªÁöÑËÆ°ÁÆóÂÖ¨ÂºèÂèØ‰ª•ÂÜô‰∏∫Ôºö\n$$d_{xy} = \\sum_{k = 1}^{n}{|x_k - y_k|}$$\nËøôÈáåÂ±ïÁ§∫KNNÁöÑÁÆÄÂçïcppÁ§∫‰æã:\n#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;algorithm\u0026gt; using namespace std; struct Point { double x, y; int label; }; double euclidean_distance(const Point\u0026amp; a, const Point\u0026amp; b) { return sqrt(pow(a.x - b.x, 2) + pow(a.y - b.y, 2)); } int knn_classify(const Point\u0026amp; p, const vector\u0026lt;Point\u0026gt;\u0026amp; neighbors, int k) { vector\u0026lt;pair\u0026lt;double, int\u0026gt;\u0026gt; distances; for (const auto\u0026amp; n : neighbors) { distances.push_back(make_pair(euclidean_distance(p, n), n.label)); } sort(distances.begin(), distances.end()); vector\u0026lt;int\u0026gt; votes(3, 0); // Assuming there are 3 classes labeled as 0, 1, and 2 for (int i = 0; i \u0026lt; k; i++) { votes[distances[i].second]++; } return max_element(votes.begin(), votes.end()) - votes.begin(); } int main() { vector\u0026lt;Point\u0026gt; neighbors = { {1, 2, 0}, {3, 4, 1}, {5, 6, 2} }; Point p = {2, 3, -1}; // Point to be classified int k = 2; // Number of neighbors to consider p.label = knn_classify(p, neighbors, k); cout \u0026lt;\u0026lt; \u0026#34;The point is classified as: \u0026#34; \u0026lt;\u0026lt; p.label \u0026lt;\u0026lt; endl; return 0; } 5.2 PRMÁÆóÊ≥ï PRMÁÆóÊ≥ïÁöÑÊ≠•È™§Â¶Ç‰∏ãÔºö\nÂàùÂßãÂåñ‰∏§‰∏™ÈõÜÂêàÔºåÂÖ∂‰∏≠$N$: ÈöèÊú∫ÁÇπÈõÜÔºå$E$:Ë∑ØÂæÑÈõÜ\nÈöèÊú∫ÊííÁÇπÔºåÂ∞ÜÊííÂÖ•ÁöÑÁÇπÊîæÂÖ•$N$‰∏≠ÔºåÈöèÊú∫ÊííÁÇπÁöÑËøáÁ®ã‰∏≠Ôºö\nÂøÖÈ°ªÊòØËá™Áî±Á©∫Èó¥ÁöÑÈöèÊú∫ÁÇπ\nÊØè‰∏™ÁÇπÈÉΩË¶ÅÁ°Æ‰øù‰∏éÈöúÁ¢çÁâ©Êó†Á¢∞Êíû(ÊúÄÂü∫Êú¨Á∫¶Êùü)\nÂØπÊØè‰∏Ä‰∏™Êñ∞ÁöÑËäÇÁÇπCÔºåÊàë‰ª¨‰ªéÂΩìÂâçN‰∏≠ÈÄâÊã©‰∏ÄÁ≥ªÂàóÁöÑÁõ∏ÈÇªÁÇπ$n$ÔºåÂπ∂‰∏î‰ΩøÁî®local_plannerËøõË°åË∑ØÂæÑËßÑÂàí\nÂ∞ÜÂèØË°åÁöÑË∑ØÂæÑÁöÑËæπÁïå$(c,n)$Âä†ÂÖ•Âà∞$E$ÁöÑÈõÜÂêà‰∏≠Ôºå‰∏çÂèØË°åÁöÑË∑ØÂæÑÂéªÊéâ\nÂÆÉÊú¨Ë∫´ÂÆûÈôÖ‰∏äÊòØÂü∫‰∫éÂõæÊêúÁ¥¢ÁöÑÊñπÊ≥ïÔºå‰∏ÄÂÖ±ÂàÜ‰∏∫‰∏§‰∏™Ê≠•È™§ÔºöÂ≠¶‰π†Èò∂ÊÆµÂíåÊü•ËØ¢Èò∂ÊÆµ„ÄÇ\nÂÆÉÂ∞ÜËøûÁª≠Á©∫Èó¥ËΩ¨Êç¢ÊàêÁ¶ªÊï£Á©∫Èó¥ÔºåÂÜçÂà©Áî®ÊúÄÁü≠Ë∑ØÁ≠âÂú®Ë∑ØÁ∫øÂõæ‰∏äÂØªÊâæË∑ØÂæÑÔºåÊèêÈ´òÊêúÁ¥¢ÊïàÁéá„ÄÇÂèØ‰ª•Áî®Áõ∏ÂØπÂ∞ëÁöÑÈöèÊú∫ÈááÊ†∑ÁÇπÊù•ÊâæÂà∞‰∏Ä‰∏™Ëß£ÔºåÂØπÂ§öÊï∞ÈóÆÈ¢òËÄåË®ÄÔºåÁõ∏ÂØπÂ∞ëÁöÑÊ†∑Êú¨Ë∂≥‰ª•Ë¶ÜÁõñÂ§ßÈÉ®ÂàÜÂèØË°åÁöÑÁ©∫Èó¥ÔºåÂπ∂‰∏îÊâæÂà∞Ë∑ØÂæÑÁöÑÊ¶ÇÁéá‰∏∫1„ÄÇÂΩìÈááÊ†∑ÁÇπÂ§™Â∞ëÊàñËÄÖÂàÜÂ∏É‰∏çÂêàÁêÜÊó∂ÔºåPRMÁÆóÊ≥ïÊòØ‰∏çÂÆåÂ§áÁöÑ„ÄÇ\n#include\u0026lt;opencv2/opencv.hpp\u0026gt; #include\u0026lt;unistd.h\u0026gt; #include\u0026lt;typeinfo\u0026gt; #include\u0026lt;iostream\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;random\u0026gt; #define INF 13421772 #define sampleNum 200 #define START 0 #define GOAL 1 #define PI 3.141592653589793238 double toDegree(double radian) { return radian * 180 / PI; } double toRadian(double degree) { return degree * PI / 180; } struct GraphNode{ int label; std::vector\u0026lt;GraphNode*\u0026gt; neighbors; GraphNode(int x):label(x){}; }; bool checkCollision(const std::vector\u0026lt;int\u0026gt; point,const cv::Mat img_src) { bool reach = true; if(img_src.at\u0026lt;cv::Vec3b\u0026gt;(point[1],point[0])[0] == 0 \u0026amp;\u0026amp; img_src.at\u0026lt;cv::Vec3b\u0026gt;(point[1],point[0])[1] == 0 \u0026amp;\u0026amp; img_src.at\u0026lt;cv::Vec3b\u0026gt;(point[1],point[0])[2] == 0) { reach = false; } return reach; } bool checkPath(const std::vector\u0026lt;int\u0026gt; point_a, const std::vector\u0026lt;int\u0026gt; point_b, const cv::Mat map,int split_num) { std::vector\u0026lt;double\u0026gt; path_x; std::vector\u0026lt;double\u0026gt; path_y; double interval_x = (point_b[0] - point_a[0]) / split_num; double interval_y = (point_b[1] - point_a[1]) / split_num; for(int i = 0; i \u0026lt;= split_num; i++) { path_x.push_back(point_a[0] + i * interval_x); path_y.push_back(point_a[1] + i * interval_y); } for(int i = 0; i \u0026lt; split_num; i++) { if(!checkCollision({int(path_x[i]),int(path_y[i])},map)) { return false; } } return true; } double calcDistance(const std::vector\u0026lt;int\u0026gt; point_a, const std::vector\u0026lt;int\u0026gt; point_b) { return sqrt(std::pow(point_a[0] - point_b[0],2) + std::pow(point_a[1] - point_b[1],2)); } struct Dijkstra { struct node{ int point; double value; node(int _point, double _value):point(_point), value(_value){} bool operator \u0026lt; (const node\u0026amp; rhs) const{ return value \u0026gt; rhs.value; } }; std::vector\u0026lt;node\u0026gt; edges[sampleNum]; double dist[sampleNum]; int path[sampleNum]; void init() { for(int i = 0; i \u0026lt; sampleNum; i++) { edges[i].clear(); dist[i] = 0; path[i] = 0; } } void addEdge(int from, int to, double dist) { edges[from].push_back(node(to,dist)); // edges[to].push_back(node(from,dist)); } void showEdge() { std::cout \u0026lt;\u0026lt; \u0026#34;------------------------\u0026#34; \u0026lt;\u0026lt; std::endl; for(int i = 0; i\u0026lt; sampleNum; i++) { // cout \u0026lt;\u0026lt; \u0026#34;-----\u0026#34; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;-----\u0026#34; \u0026lt;\u0026lt; endl; for(int j=0; j\u0026lt;edges[i].size(); j++) { std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;,\u0026#34; \u0026lt;\u0026lt; edges[i][j].point \u0026lt;\u0026lt; \u0026#34;,\u0026#34; \u0026lt;\u0026lt; edges[i][j].value \u0026lt;\u0026lt; std::endl; } // cout \u0026lt;\u0026lt; \u0026#34;**********************\u0026#34; \u0026lt;\u0026lt; endl; } std::cout \u0026lt;\u0026lt; \u0026#34;------------------------\u0026#34; \u0026lt;\u0026lt; std::endl; } std::vector\u0026lt;int\u0026gt; dijkstra(int s, int t) { std::priority_queue \u0026lt;node\u0026gt; q; for(int i = 0; i \u0026lt; sampleNum; i++) dist[i] = INF; dist[s] = 0; q.push(node(s, dist[s])); while(!q.empty()) { node x = q.top(); q.pop(); for (int i = 0; i \u0026lt; edges[x.point].size(); i++) { // std::cout \u0026lt;\u0026lt; edges[x.point].size() \u0026lt;\u0026lt; std::endl; node y = edges[x.point][i]; if (dist[y.point] \u0026gt; dist[x.point] + y.value) { dist[y.point] = dist[x.point] + y.value; path[y.point] = x.point; q.push(node(y.point, dist[y.point])); } } } std::vector\u0026lt;int\u0026gt; result; // Â≠òË∑ùÁ¶ª // result.push_back(dist[t]); std::cout \u0026lt;\u0026lt; \u0026#34;dist[t]:\u0026#34; \u0026lt;\u0026lt; dist[t] \u0026lt;\u0026lt; std::endl; while(t) { result.push_back(t); t = path[t]; } result.push_back(path[0]); reverse(result.begin(),result.end()); //Ëµ∑ÁÇπ-\u0026gt;ÁªàÁÇπ Ôºå+ Ë∑ùÁ¶ª return result; } }; struct Dijkstra DijkstraPlanning; int main(int argc,char **argv) { cv::Mat dismap = cv::imread(\u0026#34;../map/map_2.bmp\u0026#34;); int mapLength = dismap.cols; int mapWidth = dismap.rows; std::vector\u0026lt;int\u0026gt; pStrat = {10, 10}; std::vector\u0026lt;int\u0026gt; pGoal = {490, 490}; std::vector\u0026lt;std::vector\u0026lt;int\u0026gt; \u0026gt; sampleMap; sampleMap.reserve(sampleNum + 2); sampleMap.push_back(pStrat); sampleMap.push_back(pGoal); //ÂàùÂßãÂåñÈááÊ†∑ÁÇπ while (sampleMap.size() \u0026lt; sampleNum + 2) // while (sampleMap.size() \u0026lt; 10) { std::random_device rd; std::mt19937 gen(rd()); std::uniform_int_distribution\u0026lt;\u0026gt; dis(0, dismap.size[0]-1); std::vector\u0026lt;int\u0026gt; res; // sampleMap.push_back(std::vector\u0026lt;int\u0026gt;()); for(int i=0; i\u0026lt;2; ++i){ res.push_back(dis(gen)); // sampleMap.back().push_back(dis(gen)); } if(checkCollision(res, dismap)){ sampleMap.push_back({res[0], res[1]}); } // std::cout \u0026lt;\u0026lt; res[0] \u0026lt;\u0026lt; \u0026#34;,\u0026#34; \u0026lt;\u0026lt; res[1] \u0026lt;\u0026lt; std::endl; } const int MAX_N = sampleNum + 2; GraphNode *Graph[MAX_N]; const double DISTANCE = 100; const int SPLIT_N = 10; DijkstraPlanning.init(); for (int i = 0; i \u0026lt; MAX_N; i++) { for(int j = 0; j \u0026lt; MAX_N; j++){ if (calcDistance(sampleMap[i], sampleMap[j]) \u0026lt;= DISTANCE \u0026amp;\u0026amp; checkPath(sampleMap[i], sampleMap[j], dismap, SPLIT_N) \u0026amp;\u0026amp; i!= j) { cv::line(dismap, cv::Point(sampleMap[i][0], sampleMap[i][1]), cv::Point(sampleMap[j][0], sampleMap[j][1]), cv::Scalar(0, 0, 255), 1); // Graph[i]-\u0026gt;neighbors.push_back(Graph(i)); DijkstraPlanning.addEdge(i, j, calcDistance(sampleMap[i], sampleMap[j])); } } } DijkstraPlanning.showEdge(); std::vector\u0026lt;int\u0026gt; result = DijkstraPlanning.dijkstra(START, GOAL); if(result.size() \u0026gt; 2){ for(int i=0;i \u0026lt; result.size() - 1; i++) { // std::cout \u0026lt;\u0026lt; result[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; cv::line(dismap, cv::Point(sampleMap[result[i]][0], sampleMap[result[i]][1]), cv::Point(sampleMap[result[i+1]][0], sampleMap[result[i+1]][1]), cv::Scalar(0, 255, 0), 5); } } for(int i=0; i\u0026lt;sampleMap.size(); i++){ // std::cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;:\u0026#34;; for(int j=0; j\u0026lt;sampleMap[i].size(); j++){ // std::cout \u0026lt;\u0026lt; sampleMap[i][j] \u0026lt;\u0026lt; \u0026#34;,\u0026#34;; dismap.at\u0026lt;cv::Vec3b\u0026gt;(sampleMap[i][1],sampleMap[i][0])[0] = 0; dismap.at\u0026lt;cv::Vec3b\u0026gt;(sampleMap[i][1],sampleMap[i][0])[1] = 255; dismap.at\u0026lt;cv::Vec3b\u0026gt;(sampleMap[i][1],sampleMap[i][0])[2] = 0; } // std::cout \u0026lt;\u0026lt; std::endl; } // std::cout \u0026lt;\u0026lt; sampleMap.size() \u0026lt;\u0026lt; std::endl; cv::imshow(\u0026#34;dismap\u0026#34;, dismap); cv::waitKey(10000); return 0; } 5.3 RRTÁÆóÊ≥ï RRTÊòØSteven M. LaValleÂíåJames J.Kuffner Jr.ÊèêÂá∫ÁöÑ‰∏ÄÁßçÈÄöËøáÈöèÊú∫ÊûÑÂª∫Space Filling TreeÂÆûÁé∞ÂØπÈùûÂá∏È´òÁª¥Á©∫Èó¥Âø´ÈÄüÊêúÁ¥¢ÁöÑÁÆóÊ≥ï„ÄÇËØ•ÁÆóÊ≥ïÂèØ‰ª•ÂæàÂÆπÊòìÁöÑÂ§ÑÁêÜÂåÖÂê´ÈöúÁ¢çÁâ©ÂíåÂ∑ÆÂàÜËøêÂä®Á∫¶ÊùüÁöÑÂú∫ÊôØÔºåÂõ†ËÄåÂπøÊ≥õÁöÑË¢´Â∫îÁî®Âú®ÂêÑÁßçÊú∫Âô®‰∫∫ÁöÑËøêÂä®ËßÑÂàíÂú∫ÊôØ‰∏≠„ÄÇ\nÂéüÂßãÁöÑRRTÁÆóÊ≥ï‰∏≠Â∞ÜÊêúÁ¥¢ÁöÑËµ∑ÁÇπ‰ΩçÁΩÆ‰Ωú‰∏∫Ë∑üËäÇÁÇπÔºåÁÑ∂ÂêéÈÄöËøáÈöèÊú∫ÈááÊ†∑Â¢ûÂä†Âè∂Â≠êËäÇÁÇπÁöÑÊñπÂºèÔºåÁîüÊàê‰∏Ä‰∏™ÈöèÊú∫ÊãìÂ±ïÊ†ë„ÄÇÂΩìÈöèÊú∫Ê†ëÁöÑÂè∂Â≠êËäÇÁÇπËøõÂÖ•ÁõÆÊ†áÂå∫ÂüüÔºåÂ∞±ÂæóÂà∞‰∫Ü‰ªéËµ∑ÁÇπ‰ΩçÁΩÆÂà∞ÁõÆÊ†á‰ΩçÁΩÆÁöÑË∑ØÂæÑ„ÄÇ\nPath RRT(const Map\u0026amp; M,const Node\u0026amp; x_start,const Node\u0026amp; x_end) { Path path = new Path(x_start); Node x_new = new Node(); while(x_new != x_end) { x_rand = Sample(M); x_near = Near(x_rand,path); x_new = Steer(x_rand,x_near,StepSize); E = Edge(x_new,x_near); if(CollisionFree(M,E)) { path.addNode(x_new); path.addEdge(E); } } return path; } ‰∏äÈù¢ÁöÑ‰ª£Á†Å‰∏≠ÔºåMÊòØÂú∞ÂõæÁéØÂ¢ÉÔºåx_startÊòØËµ∑Âßã‰ΩçÁΩÆÔºåx_goalÊòØÁõÆÊ†á‰ΩçÁΩÆ„ÄÇË∑ØÂæÑÁ©∫Èó¥ÊêúÁ¥¢ÁöÑËøáÁ®ã‰ªéËµ∑ÁÇπÂºÄÂßãÔºåÂÖàÈöèÊú∫ÊííÁÇπx_randÔºåÁÑ∂ÂêéÊü•ÊâæË∑ùÁ¶ªx_randÊúÄËøëÁöÑËäÇÁÇπx_nearÔºåÁÑ∂ÂêéÊ≤øÁùÄx_nearÂà∞x_randÊñπÂêëÂâçËøõStepsizeË∑ùÁ¶ªÂæóÂà∞x_new,‰ΩøÁî®CollisionFree(M,E)ÊñπÊ≥ïÊ£ÄÊµãEdge(x_new,x_near)ÊòØÂê¶‰∏éÂú∞ÂõæÁéØÂ¢É‰∏≠ÁöÑÈöúÁ¢çÁâ©ÊúâÁ¢∞ÊíûÔºåÂ¶ÇÊûúÊ≤°ÊúâÁ¢∞ÊíûÔºåÂàôÂÆåÊàê‰∏ÄÊ¨°Á©∫Èó¥ÊêúÁ¥¢ÊãìÂ±ï„ÄÇÈáçÂ§ç‰∏äËø∞ÊµÅÁ®ãÔºåÁõ¥Âà∞ËææÂà∞ÁõÆÊ†á‰ΩçÁΩÆ„ÄÇ\n‰∏∫‰∫ÜÂä†Âø´ÈöèÊú∫Êï∞Êî∂ÊïõÂà∞ÁõÆÊ†á‰ΩçÁΩÆÁöÑÈÄüÂ∫¶ÔºåÂü∫‰∫éÊ¶ÇÁéáÁöÑRRTÁÆóÊ≥ïÂú®ÈöèÊú∫Ê†ëÊãìÂ±ïÁöÑÊ≠•È™§‰∏≠ÂºïÂÖ•‰∫Ü‰∏Ä‰∏™Ê¶ÇÁéá$p$ÔºåÊ†πÊçÆÊ¶ÇÁéáÁöÑÂÄºÊù•ÈÄâÊã©Ê†ëÁöÑÁîüÈïøÊñπÂêëÊòØÈöèÂç≥ÁîüÈïøËøòÊòØÊúùÂêëÁõÆÊ†á‰ΩçÁΩÆÁîüÊàêÔºåÂºïÂÖ•ÂêëÁõÆÊ†áÁîüÈïøÁöÑÊú∫Âà∂ÂèØ‰ª•Âä†Âø´Ë∑ØÂæÑÊêúÁ¥¢ÁöÑÊî∂ÊïõÈÄüÂ∫¶„ÄÇ\nx_rand = ChooseTarget(x_rand,x_end,p); 5.4 RRT-Connect RRT-ConnectÂú®RRTÁöÑÂü∫Á°Ä‰∏äÂºïÂÖ•‰∫ÜÂèåÊ†ëÊãìÂ±ïÁéØËäÇÔºåÂç≥ÂàÜÂà´‰ª•Ëµ∑ÁÇπÂíåÁõÆÊ†áÁÇπ‰∏∫Ê†πËäÇÁÇπÁîüÊàê‰∏§‰∏™Ê†ëËøõË°åÂèåÂêëÊãìÂ±ïÔºåÂΩì‰∏§Ê£µÊ†ëÂª∫Á´ãËøûÊé•Êó∂ÂèØËÆ§‰∏∫Ë∑ØÂæÑËßÑÂàíÊàêÂäü„ÄÇÈÄöËøá‰∏ÄÊ¨°ÈááÊ†∑ÂæóÂà∞‰∏Ä‰∏™ÈááÊ†∑ÁÇπx_randÔºåÁÑ∂Âêé‰∏§Ê£µÊ†ëÂêåÊó∂Âêëx_randÊñπÂêëËøõË°åÊãìÂ±ïÔºåÂä†Âø´‰∏§Ê£µÊ†ëÂª∫Á´ãËøûÊé•ÁöÑÈÄüÂ∫¶„ÄÇÁõ∏ËæÉ‰∫éÂçïÊ†ëÊãìÂ±ïÁöÑRRTÁÆóÊ≥ïÔºåRRT-ConnectÂä†ÂÖ•‰∫ÜÂêØÂèëÂºèÊ≠•È™§ÔºåÂä†Âø´‰∫ÜÊêúÁ¥¢ÈÄüÂ∫¶ÔºåÂØπ‰∫éÁã≠Á™ÑÈÄöÈÅì‰πüÊúâËæÉÂ•ΩÁöÑÊïàÊûú„ÄÇ\n5.5 RRT*ÁÆóÊ≥ï RRT*ÁÆóÊ≥ïÊòØ‰∏ÄÁßçÊ∏êËøõÊúÄ‰ºòÁÆóÊ≥ï„ÄÇ\nÁÆóÊ≥ïÊµÅÁ®ã‰∏éRRTÁÆóÊ≥ïÊµÅÁ®ãÂü∫Êú¨Áõ∏ÂêåÔºå‰∏çÂêå‰πãÂ§ÑÂ∞±Âú®‰∫éÊúÄÂêéÂä†ÂÖ•Â∞Üx_newÂä†ÂÖ•ÊêúÁ¥¢Ê†ëÊó∂Áà∂ËäÇÁÇπÁöÑÈÄâÊã©Á≠ñÁï•„ÄÇ\nRRT*ÁÆóÊ≥ïÂú®ÈÄâÊã©Áà∂ËäÇÁÇπÊó∂‰ºöÊúâ‰∏Ä‰∏™ÈáçËøûÁöÑËøáÁ®ãÔºå‰πüÂ∞±ÊòØÂú®‰ª•x_new‰∏∫ÂúÜÂøÉÔºåÂçäÂæÑ‰∏∫rÁöÑÈÇªÂüüÂÜÖÔºåÊâæÂà∞‰∏éx_newËøûÊé•ÂêéË∑ØÂæÑ‰ª£‰ª∑(‰ªéËµ∑ÁÇπÁßªÂä®Âà∞x_newÁöÑË∑ØÂæÑÈïøÂ∫¶)ÊúÄÂ∞èÁöÑËäÇÁÇπÔºåÂπ∂ÈáçÊñ∞ÈÄâÊã©x_min‰Ωú‰∏∫x_newÁöÑÁà∂ËäÇÁÇπÔºåËÄå‰∏çÊòØx_near„ÄÇ\n","permalink":"http://knightsnape.github.io/public/posts/navigation_algorithm/","summary":"ÂØºËà™‰ΩøÁî®ÁöÑÁÆóÊ≥ï 1.Âü∫Êú¨ÁÆóÊ≥ï\n1.1.DFS\n1.2.ÂõæÁöÑÈÅçÂéÜ\n1.3.ÊúÄÁü≠Ë∑ØÈóÆÈ¢ò\n2.‰ª£‰ª∑Âú∞Âõæ\n3.ÊãìÂ±ïÂØºËà™ÁÆóÊ≥ï\n3.1.Âä®ÊÄÅËßÑÂàí\n3.2.ÈÅó‰º†ÁÆóÊ≥ïÔºåËöÅÁæ§ÁÆóÊ≥ï\n3.3.Ê®°ÊãüÈÄÄÁÅ´\n4.Ë∑ØÂæÑÂπ≥ÊªëÁÆóÊ≥ï\n4.1.Â§öÈ°πÂºèÊèíÂÄº\n4.2.Ë¥ùÂ°ûÂ∞îÊõ≤Á∫ø\n4.3.‰∏âÊ¨°Ê†∑Êù°Êõ≤Á∫ø,BÊ†∑Êù°Êõ≤Á∫ø\n4.4.ÁâπÊÆäÊõ≤Á∫ø\n5. Á©∫Èó¥ÈááÊ†∑ÁÆóÊ≥ï\n5.1.KËøëÈÇªÁÆóÊ≥ï\n5.2.PRMÁÆóÊ≥ï\n5.3.RRTÁÆóÊ≥ï\n5.4.RRT-Connect\n5.5.RRT*ÁÆóÊ≥ï\n1.Âü∫Êú¨ÁÆóÊ≥ï 1.1.DFS $\\quad$ ÊêúÁ¥¢Ôºå‰πüÂ∞±ÊòØÂØπÁä∂ÊÄÅÁ©∫Èó¥ËøõË°åÊûö‰∏æÔºåÈÄöËøáÁ©∑Â∞ΩÊâÄÊúâÁöÑÂèØËÉΩÊù•ÊâæÂà∞ÊúÄ‰ºòËß£,ÊàñËÄÖÁªüËÆ°ÂêàÊ≥ïËß£ÁöÑ‰∏™Êï∞„ÄÇ\n$\\quad$ ÊêúÁ¥¢ÊúâÂæàÂ§ö‰ºòÂåñÊñπÂºèÔºåÂ¶ÇÂáèÂ∞èÁä∂ÊÄÅÁ©∫Èó¥ÔºåÊõ¥ÊîπÊêúÁ¥¢È°∫Â∫èÔºåÂâ™ÊûùÁ≠âÁ≠â„ÄÇ\n$\\quad$ DFS‰∏∫ÂõæËÆ∫ÁöÑÊ¶ÇÂøµ„ÄÇÂú®ÊêúÁ¥¢ÁÆóÊ≥ï‰∏≠ÔºåËØ•ËØçÂ∏∏Â∏∏Âà©Áî®ÈÄíÂΩíÂáΩÊï∞Êñπ‰æøÂÆûÁé∞Êö¥ÂäõÊûö‰∏æÁöÑÁÆóÊ≥ï„ÄÇ\n$\\quad$ Â∏∏ËßÅ‰ΩøÁî®ÁöÑÂèØËÉΩÊñπÊ°àÔºåÂØπÂ∫îÁöÑÊ°ÜÊû∂Â¶Ç‰∏ã:\nvoid dfs(int state) { if(find) { return; } //ÂèØ‰ª•Êúâ‰∏çÂêåÁöÑÈÅçÂéÜÁ≠ñÁï• dfs(next(state)); } $\\quad$ Â∏∏ËßÅÁöÑÂÆû‰æãÂ¶Ç‰∏ãÔºöÊääÊ≠£Êï¥Êï∞$n$ÂàÜËß£Êàê3‰∏™‰∏çÂêåÁöÑÊ≠£Êï¥Êï∞ÔºåÂ¶Ç6=1+2+3„ÄÇÊéíÂú®ÂêéÈù¢ÁöÑÊï∞ÂøÖÈ°ªÂ§ß‰∫éÂâçÈù¢ÁöÑÊï∞ÔºåËæìÂá∫ÊâÄÊúâÁöÑÊñπÊ°àÊï∞„ÄÇ\nÂèØ‰ª•ËÄÉËôëÂæ™ÁéØÔºö\nfor (int i = 1; i \u0026lt;= n; ++i) for (int j = i; j \u0026lt;= n; ++j) for (int k = j; k \u0026lt;= n; ++k) if (i + j + k == n) printf(\u0026#34;%d = %d + %d + %d\\n\u0026#34;, n, i, j, k); $\\quad$ ÂèØ‰ª•ËÄÉËôëÂ¶Ç‰∏ãÊñπÊ°àÔºöËÆæ‰∏ÄÁªÑÊñπÊ°àÂ∞ÜÊ≠£Êï¥Êï∞$n$ÂàÜËß£Êàê$k$‰∏™Ê≠£Êï¥Êï∞$a_1,a_2,\u0026hellip;,a_k$ÁöÑÂíå„ÄÇ","title":"Navigation Algorithm"},{"content":"Êï∞ÂÄºÂàÜÊûê ÂâçË®Ä $\\quad$ Êï∞ÂÄºÂàÜÊûê‰∏ªË¶ÅËÄÉËôëÈóÆÈ¢òÁöÑÊï∞ÂÄºËß£ÊñπÈù¢ÁöÑÂÜÖÂÆπ, ÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÊï∞ÂÄºÁÆóÊ≥ïÁöÑÊûÑÂª∫, ËØØÂ∑Æ‰º†Êí≠ÁöÑÂΩ±Âìç, ËÆ°ÁÆóÂ§çÊùÇÂ∫¶ÁöÑ‰º∞ÁÆó‰ª•ÂèäÈ´òÊïàÂèØÈù†ÁöÑËÆ°ÁÆóÊú∫ÁöÑÂÆûÁé∞. ËôΩÁÑ∂ÂØπ‰∫é‰∏çÂêåÁöÑÈóÆÈ¢òÊúâ‰∏çÂêåÁöÑÊï∞ÂÄºÊ®°ÂûãÊù•ÊûÑÂª∫, ‰ΩÜÊòØ‰ªñ‰ª¨‰∏ÄËà¨ÈÉΩÂÖ∑Êúâ‰∏Ä‰∫õÂÖ±ÂêåÁÇπ:\n$\\quad$ Êï∞ÂÄºÂàÜÊûê‰∏ÄËà¨‰ºö‰ª•Á∫øÊÄß‰ª£Êï∞, È´òÁ≠âÊï∞Â≠¶, ÂÆûÂàÜÊûêÂíåÊ≥õÂáΩÂàÜÊûêÁ≠âÂÜÖÂÆπ‰∏∫Âü∫Á°ÄÊàñËÄÖÂàÜÊûêÂ∑•ÂÖ∑\n$\\quad$ Â¶ÇÊûú‰∏Ä‰∏™ÈóÆÈ¢ò‰∏çËÉΩÁõ¥Êé•Ê±ÇËß£, Â∞ùËØïËÄÉËôë‰∏Ä‰∏™Ëøë‰ººÁöÑÂèØËß£ÁöÑÈóÆÈ¢ò\n$\\quad$ Á®≥ÂÆöÊÄß. ËøôÈáåÁöÑÁ®≥ÂÆöÊÄßÊòØÊåáÊ®°ÂûãÈóÆÈ¢òÁöÑËß£ÂØπÂàùÂßãÊï∞ÊçÆÁöÑÊïèÊÑüÂ∫¶, ‰πüÂ∞±ÊòØËØ¥, Ëß£Âõ†‰∏∫ÂàùÂßãÊï∞ÊçÆÁöÑÂæÆÂ∞èÊîπÂèòËÄå‰∫ßÁîüÁöÑÂèòÂåñ, ÂèòÂåñË∂äÂ∞èË∂äÁ®≥ÂÆö.\nÊï∞ÂÄºÂàÜÊûêÁöÑÁ†îÁ©∂È¢ÜÂüüÈùûÂ∏∏ÂπøÊ≥õ, Âπ∂‰∏îÁî±‰∫éÁé∞‰ª£ÁßçÁ±ª‰∫§ÂèâÂ≠¶ÁßëÁöÑÂèëÂ±ï, Êï∞ÂÄºÂàÜÊûêÁöÑËæπÁïåÂèòÂæóË∂äÊù•Ë∂äÊ®°Á≥ä. ‰ΩÜÊòØ‰∏ªË¶ÅÁöÑÂÜÖÂÆπÂåÖÂê´Â¶Ç‰∏ãÂá†‰∏™ÊñπÈù¢:\nÊï∞ÂÄºÁ∫øÊÄß‰ª£Êï∞ $\\quad$ ‰∏ªË¶ÅÁ†îÁ©∂ÂÜÖÂÆπ‰∏ªË¶ÅÊ∂âÂèäÁ∫øÊÄßÊñπÁ®ãÁªÑÁÆóÊ≥ïÁ†îÁ©∂, ÁâπÂæÅÂÄºÂíåÁõ∏ÂÖ≥Êï∞ÂÄºÁÆóÊ≥ïÁ†îÁ©∂\nÈùûÁ∫øÊÄßÊñπÁ®ãÁªÑ $\\quad$ ÈùûÁ∫øÊÄßÊñπÁ®ãÁªÑÁöÑÊ±ÇËß£‰∏ÄËà¨ÊòØ‰ª•‰∏ÄÁ≥ªÂàóËøë‰ººÁöÑÁ∫øÊÄßÈóÆÈ¢ò‰∏∫Â∑•ÂÖ∑, ÁªèÂÖ∏ÁöÑÊñπÊ≥ïÂåÖÊã¨‰∫åÂàÜÊ≥ï, ‰∏çÂä®ÁÇπËø≠‰ª£, ÊúÄÈÄü‰∏ãÈôçÊ≥ïÂíåÁâõÈ°øÊ≥ïÁ≠â\nÈÄºËøëÁêÜËÆ∫ $\\quad$ ÈÄºËøëÁêÜËÆ∫‰∏ªË¶ÅËÄÉËôëÂ¶Ç‰ΩïÂà©Áî®ÁÆÄÂçïÁöÑÂáΩÊï∞Êù•ÈÄºËøëÂ§çÊùÇÂáΩÊï∞, Âπ∂‰∏îÂ¶Ç‰ΩïÁªôÂá∫ÂÆöÈáèËØØÂ∑Æ‰º∞ËÆ°\n1.Êï∞ÂÄºËÆ°ÁÆóÁöÑËØØÂ∑Æ\n2.ÂÜÖÁßØÁ©∫Èó¥‰∏éÊ≠£‰∫§ÂàÜËß£\n3.Á∫øÊÄßÊñπÁ®ãÁªÑÈóÆÈ¢ò\n3.1.È´òÊñØÊ∂àÂÖÉÊ≥ï 3.2.Âàó‰∏ªÂÖÉÊ∂àÂéªÊ≥ï 3.3.Áü©ÈòµÁöÑ‰∏âËßíÂàÜËß£Ê≥ï 3.4.Áü©ÈòµÁöÑÁõ¥Êé•LUÂàÜËß£Ê≥ï 3.5.‰∏âÂØπËßíÁ∫øÊÄßÊñπÁ®ãÁªÑÁöÑËøΩËµ∂Ê≥ï 3.6.Ëø≠‰ª£Ê≥ïÊ±ÇËß£Á∫øÊÄßÊñπÁ®ãÁªÑ 3.7.ÈõÖÂèØÊØîËø≠‰ª£Ê≥ï 3.8.È´òÊñØ-ËµõÂæ∑Â∞îËø≠‰ª£Ê≥ï 4.ÊèíÂÄºÁÆóÊ≥ï\n4.1.Á∫øÊÄßÊèíÂÄº 4.2.ÂèåÁ∫øÊÄßÊèíÂÄº 4.3.ÊãâÊ†ºÊúóÊó•ÊèíÂÄº 4.4.ÁâõÈ°øÊèíÂÄº 5.Êï∞ÂÄºÂæÆÂàÜÂíåÁßØÂàÜ\n5.1.Êï∞ÂÄºÂæÆÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 5.2.Êï∞ÂÄºÁßØÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 6.Êï∞ÂÄºÈÄºËøë\n6.1.Êõ≤Á∫øÂíåÊõ≤Èù¢ÁöÑÊãüÂêà 6.2.Ê≠£‰∫§Â§öÈ°πÂºè‰∏éÂáΩÊï∞ÈÄºËøë 1.Êï∞ÂÄºËÆ°ÁÆóÁöÑËØØÂ∑Æ $\\quad$Êó¢ÁÑ∂Áõ¥Êé•ËÅäÂà∞‰∫ÜËØØÂ∑ÆÔºåÈÇ£‰πàÂ∞±Áõ¥Êé•ËÆ≤ÂÖ∂ÂàÜÁ±ª‰ª•ÂèäÊù•Ê∫ê:\nÊ®°ÂûãËØØÂ∑ÆÔºöÂÆûÈôÖÈóÆÈ¢òÂíåÂØπÂÖ∂ËøõË°åÊäΩË±°ÔºåÁÆÄÂåñÂêéÂæóÂà∞ÁöÑÊï∞Â≠¶Ê®°Âûã‰πãÈó¥Â≠òÂú®ÁöÑËØØÂ∑Æ ËßÇÊµãËØØÂ∑ÆÔºöÁî±‰∫éÁ≤æÂ∫¶ÈôêÂà∂ÔºåËßÇÂØüÂíåÊµãÈáèÁöÑÊó∂ÂÄô‰∫ßÁîüÁöÑËØØÂ∑Æ ËàçÂÖ•ËØØÂ∑ÆÔºöËÆ°ÁÆóÊú∫Â≠óÈïøÁöÑÈôêÂà∂ÔºåÊâÄËÉΩË°®Á§∫ÁöÑÊï∞Âè™ËÉΩÊúâÊúâÈôêÁöÑ‰ΩçÊï∞ÔºåÂêéÈù¢ÁöÑÈÉ®ÂàÜÊåâÁÖß‰∏çÂêåÁöÑËàçÂÖ•ËßÑÂàôËàçÂéª‰∫ßÁîüÁöÑËØØÂ∑Æ„ÄÇ Êà™Êñ≠/ÊñπÊ≥ïËØØÂ∑ÆÔºöÂæó‰∏çÂà∞Á≤æÁ°ÆËß£ÁöÑÊï∞Â≠¶Ê®°ÂûãÈÄöÂ∏∏Áî®Êï∞ÂÄºÊñπÊ≥ïÊ±ÇËøë‰ººËß£Ôºå‰∫åËÄÖ‰πãÈó¥ÁöÑËØØÂ∑ÆÔºåÈÄöÂ∏∏Áî®ÊúâÈôêËøáÁ®ãÂØπÊó†Á©∑ËøõË°åÊà™Êñ≠ÔºåÊØîÂ¶ÇÔºöÊ≥∞ÂãíÂÖ¨ÂºèÁöÑËøë‰ºº‰ª£ÊõøÂ¶Ç‰∏ãÔºö $$ P_n(x) = f(0) + \\frac{f`(0)}{1!}x + \\frac{f``(0)}{2!}x^2 + \u0026hellip; + \\frac{f^{n}(0)}{n!}x^n $$\nÂàôÊà™Êñ≠ËØØÂ∑Æ‰∏∫:\n$$ R_n(x) = f(x) - P_n(x) = \\frac{f^{n+1}(\\xi)}{(n+1)!}x^{n+1} $$\nÂÖ∂‰∏≠$\\xi \\in (0,x)$\nÂÆö‰πâ1: ËÆæ$x$‰∏∫ÂáÜÁ°ÆÂÄºÔºå$x^$‰∏∫$x$ÁöÑ‰∏Ä‰∏™Ëøë‰ººÂÄºÔºåÁß∞$E(x^) = x^* - x$‰∏∫Ëøë‰ººÂÄºÁöÑÁªùÂØπËØØÂ∑ÆÔºåÁÆÄÁß∞ËØØÂ∑Æ\nÂÆûÈôÖ‰∏äÔºåÂáÜÁ°ÆÂÄº$x$ÈÄöÂ∏∏Êó†Ê≥ïÊ±ÇÂæóÁîöËá≥Êú™Áü•ÔºåÂõ†Ê≠§‰∏äÈù¢ÁöÑ$E(x^)$ÂæÄÂæÄ‰πüÊó†Ê≥ïÊ±ÇÂæóÔºåÂè™ËÉΩÁü•ÈÅìÂÖ∂ÁªùÂØπÂÄºÁöÑÊüê‰∏™‰∏äÁïå$\\varepsilon(x) \\ge E(x^) = |x^ - x|$ÔºåÊï∞ÂÄº$\\varepsilon(x*)$Áß∞‰∏∫$x^*$ÁöÑ(ÁªùÂØπ)ËØØÂ∑ÆÈôê„ÄÇ\n‰ΩÜÊòØ‰∏Ä‰∏™ÊµãÈáèÂÄºÁöÑÁ≤æÁ°ÆÁ®ãÂ∫¶Èô§‰∫Ü‰∏éÁªùÂØπËØØÂ∑ÆÈôêÊúâÂÖ≥Â§ñÔºåËøòÂíåËØ•ÈáèÁöÑÂ§ßÂ∞èÊúâÂÖ≥ÔºåÁî±Ê≠§ÂºïÂÖ•Áõ∏ÂØπËØØÂ∑ÆÈôêÔºö\nÂÆö‰πâ2: ËÆæ$x$‰∏∫ÂáÜÁ°ÆÂÄºÔºå$x^$‰∏∫$x$ÁöÑ‰∏Ä‰∏™Ëøë‰ººÂÄºÔºåÁß∞$\\frac{E(x^)}{x} = \\frac{x^* - x}{x}$‰∏∫Ëøë‰ººÂÄºx^ÁöÑÁõ∏ÂØπËØØÂ∑ÆÔºåÁÆÄËÆ∞‰∏∫E_rÔºå$\\varepsilon_r(x^) \\ge |E_r(x^)|$‰∏∫$x^$ÁöÑÁõ∏ÂØπËØØÂ∑ÆÈôê\n‰∏§ÁßçËØØÂ∑ÆÈôêÂà∂ÁöÑÂÖ≥Á≥ª‰∏∫:$\\varepsilon_r = \\frac{\\varepsilon}{|x^*|}$\nÂÆö‰πâ3: Ëã•$x^$‰∏∫$x$ÁöÑËøë‰ººÂÄºÔºåÂÖ∂ÁªùÂØπËØØÂ∑ÆÁöÑÁªùÂØπÂÄº‰∏çË∂ÖËøáÊüê‰∏Ä‰ΩçÊï∞Â≠óÁöÑÂçä‰∏™Âçï‰ΩçÔºåËÄåËØ•‰ΩçÊï∞Â≠óÂà∞$x^$ÁöÑÁ¨¨‰∏Ä‰ΩçÈùûÈõ∂Êï∞Â≠óÂÖ±Êúân‰ΩçÔºåÂàôÁß∞Áî®$x^$Ëøë‰ºº$x$Êó∂ÂÖ∑Êúâ$n$‰ΩçÊúâÊïàÊï∞Â≠óÔºåÁÆÄÁß∞$x^$Êúâ$n$‰ΩçÊúâÊïàÊï∞Â≠ó„ÄÇ\nÊúâÊïàÊï∞Â≠ó‰∏éÁªùÂØπËØØÂ∑ÆÈôêÁöÑÂÖ≥Á≥ªÔºö\n$x$ÁöÑËøë‰ººÂÄº$x^*$ÁöÑËßÑÊ†ºÂåñÂΩ¢ÂºèÂèØ‰ª•ÂÜô‰ΩúÔºö\n$$ x^* = \\pm0.a_1a_2\u0026hellip;a_k \\times 10^m $$\nÂÖ∂‰∏≠$m$ÊòØÊï¥Êï∞Ôºå$a_i$ÊòØ0-9‰∏≠ÁöÑ‰∏Ä‰∏™Êï∞Â≠ó‰∏î$a_1=0$,Âàô‰∏äÂºèÂÖ∑Êúân‰Ωç($n \\leq k$)ÊúâÊïàÊï∞Â≠óÂΩì‰∏î‰ªÖÂΩì$|E| = |x^* - x| \\leq 0.5 \\times 10^{m - n}$\n$x^*$Êúân‰ΩçÊúâÊïàÊï∞Â≠óÔºåÂàôÁõ∏ÂØπËØØÂ∑ÆÈôê:\n$$ e_r^* \\leq \\frac{1}{2a_1} \\times 10^{1-n} $$\nÂèç‰πãÁõ∏ÂØπËØØÂ∑ÆÈôê:\n$$ e_r^* \\leq \\frac{1}{2(a_1+1)} \\times 10^{1-n} $$\nÊï∞ÂÄºËøêÁÆóÁöÑËØØÂ∑Æ‰º∞ËÆ°Ôºö\n$$ \\varepsilon(x_1^* + x_2^) = \\varepsilon(x_1^) + \\varepsilon(x_2^*) $$\n$$ \\varepsilon (x_1^x_2^) \\approx |x_1^|\\varepsilon(x_2^) + |x_2^|\\varepsilon(x_1^) $$\n$$ \\varepsilon(\\frac{x_1^}{x_2^}) \\approx \\frac{|x_1^|\\varepsilon(x_2^) + |x_2^|\\varepsilon(x_1^)}{|x_2^*|^2} $$\n‰∏ÄËà¨Âú∞ÔºåËá™ÂèòÈáèÊúâËØØÂ∑ÆÊó∂ÔºåËÆ°ÁÆóÂáΩÊï∞ÂÄº‰πü‰∫ßÁîüËØØÂ∑ÆÔºåËØØÂ∑ÆÈôêÂèØÂà©Áî®ÂáΩÊï∞ÁöÑÊ≥∞ÂãíÂ±ïÂºÄÂºèËøõË°å‰º∞ËÆ°Ôºå\n$$ \\varepsilon(f(x^)) = f(x) - f(x^) = f`(x^)(x - x^) + \\frac{f``(\\xi)}{2}(x - x^*)^2 $$\nÂÖ∂‰∏≠$\\xi$‰ªã‰∫é$x$Âíå$x^*$‰πãÈó¥\nÂèñÁªùÂØπÂÄºÂπ∂ÂÅáÂÆö$f`(x^)$Âíå$f``(x^)$ÊØîÂÄº‰∏çÂ§ßÔºåÂøΩÁï•$\\varepsilon(x^*)$ÁöÑÈ´òÈò∂È°πÔºåÊúâÔºö\n$$ \\varepsilon(f(x^)) \\approx |f`(x^)|\\varepsilon(x^*) $$\nÂ§öÂÖÉÂáΩÊï∞ÂêåÁêÜ\nÂõõÂàôËøêÁÆóÁöÑÁ®≥ÂÆöÊÄßÈóÆÈ¢òÔºö\nÈò≤Ê≠¢Â§ßÊï∞ÂêÉÂ∞èÊï∞(ËÆ°ÁÆóÊú∫‰ΩçÊï∞ÊúâÈôêÈÄ†Êàê)-\u0026gt;Ê±ÇÂíåÊó∂‰ªéÂ∞èÂà∞Â§ßÁõ∏Âä†ÔºåÂèØ‰ΩøÂíåÁöÑËØØÂ∑ÆÂáèÂ∞è ÂÅöÂáèÊ≥ïÊó∂ÈÅøÂÖçÁõ∏ËøëÊï∞Áõ∏Âáè-\u0026gt;‰ΩøÁî®ÊúâÁêÜÂåñÔºå‰∏âËßíÂèòÊç¢Á≠â ÈÅøÂÖçÂ∞èÊï∞‰Ωú‰∏∫Èô§Êï∞ÂíåÂ§ßÊï∞‰Ωú‰∏∫‰πòÊï∞ ÊèêÈ´òÁÆóÊ≥ïÊïàÁéáÈóÆÈ¢òÔºö\nÂáèÂ∞ëËøêÁÆóÊ¨°Êï∞(Â§öÈ°πÂºèËÆ°ÁÆóÁöÑÁß¶‰πùÈü∂ÁÆóÊ≥ï) ÁóÖÊÄÅÈóÆÈ¢ò ÂÆö‰πâ4: ÂØπÊï∞Â≠¶ÈóÆÈ¢òÊú¨Ë∫´Â¶ÇÊûúËæìÂÖ•Êï∞ÊçÆÊúâÂæÆÂ∞èÊâ∞Âä®ÔºåÂºïËµ∑ËæìÂá∫Êï∞ÊçÆÁöÑÂæàÂ§ßÊâ∞Âä®ÔºåÂç≥ÁóÖÊÄÅÈóÆÈ¢ò\nËÆ°ÁÆóÂáΩÊï∞ÂÄº$f(x)$ÔºåÂΩì$x$ÊúâÊâ∞Âä®Ôºå$\\delta = x - x^$ÔºåÁõ∏ÂØπËØØÂ∑Æ$\\frac{\\delta}{x}$ÔºåÂáΩÊï∞ÂÄºÁõ∏ÂØπËØØÂ∑Æ$\\frac{f(x) - f(x^)}{f(x)}$ÔºåÁõ∏ÂØπËØØÂ∑ÆÊØîÂÄº‰∏∫:$\\frac{\\frac{f(x) - f(x^*)}{f(x)}}{\\frac{\\delta}{x}} \\approx \\frac{xf`(x)}{f(x)} = C_p$ ÂÖ∂‰∏≠$C_p$‰∏∫ËÆ°ÁÆóÂáΩÊï∞ÂÄºÈóÆÈ¢òÁöÑÊù°‰ª∂Êï∞\n2.ÂÜÖÁßØÁ©∫Èó¥‰∏éÊ≠£‰∫§ÂàÜËß£ Áü¢ÈáèÁöÑÊ®°‰∏éËµãËåÉÁ©∫Èó¥ ÂêëÈáèÁöÑÊ®°ÊòØÁ∫øÊÄßÁ©∫Èó¥‰∏≠‰∏çÂ≠òÂú®ÁöÑÊ¶ÇÂøµÔºåÂÆÉÂ∞±ÊòØÂêëÈáèÁöÑÂ§ßÂ∞èÔºåÂØπ‰∫éÂá†‰ΩïËÄåË®ÄÂèçÊò†‰∏∫ÊúâÂêëÁ∫øÊÆµÁöÑÈïøÁü≠ÔºåÂÖ∂Êª°Ë∂≥Â¶Ç‰∏ãÊÄßË¥®Ôºö\n1.Ê≠£ÂÆöÊÄß:$||\\mathbf{a}|| \u0026gt; 0 , ||\\mathbf{0}|| = 0$ 2.Ê≠£ÈΩêÊ¨°ÊÄß:$||\\lambda\\mathbf{a}||=|\\lambda|||\\mathbf{a}||$ 3.‰∏âËßí‰∏çÁ≠âÂºè:$||\\mathbf{a}+\\mathbf{b}|| \\leq ||a|| + ||b||$\nÁü¢ÈáèÁöÑÊ®°ËøêÁÆóÂèØ‰ª•ÁúãÊàêÊòØ$R^3$Á©∫Èó¥Âà∞$R$ÁöÑÊò†Â∞ÑÔºå‰πüÂèØ‰ª•ÁúãÊàê‰∏ÄÁª¥ÂÆûÊï∞ÁöÑÁªùÂØπÂÄºÂú®‰∫åÁª¥Âíå‰∏âÁª¥Á©∫Èó¥ÁöÑÊé®Âπø„ÄÇÊàë‰ª¨ÂèØ‰ª•Ëøõ‰∏ÄÊ≠•Êé®ÂπøÂà∞nÁª¥ÂêëÈáèÁöÑÊ®°Âú∫Ôºö\n$$ ||\\mathbf{v}|| = \\sqrt{\\sum_{i=1}^{n}{x_i^2}} $$\nÊõ¥‰∏ÄËà¨ÁöÑÔºåÊàë‰ª¨‰∏çÈúÄË¶ÅÂÆö‰πâËÆ°ÁÆóÂÖÉÁ¥†‚ÄúÈïøÁü≠‚ÄùÁöÑÂÖ¨ÂºèÔºåÊàë‰ª¨Âè™ÈúÄË¶ÅÂÆö‰πâËÆ°ÁÆóÂÖÉÁ¥†‚ÄúÈïøÁü≠‚ÄùÁöÑËøêÁÆóÊâÄÊª°Ë∂≥ÁöÑÊù°‰ª∂„ÄÇÊØîÂ¶ÇÊàë‰ª¨Âú®Á∫øÊÄßÁ©∫Èó¥‰∏≠ÔºåÂÆö‰πâËåÉÊï∞(norm)ËøêÁÆóÔºåËÆ∞‰∏∫$||¬∑||$Ôºå‰Ωø‰πãÊª°Ë∂≥‰∏äÈù¢ÁöÑÊ≠£ÂÆöÊÄßÔºåÊ≠£ÈΩêÊ¨°ÊÄßÔºå‰∏âËßí‰∏çÁ≠âÂºèÔºåÊàë‰ª¨Â∞±ÂæóÂà∞‰∫Ü‰∏Ä‰∏™Êñ∞ÁöÑ‰ª£Êï∞ÁªìÊûÑ‚Äî‚ÄîËµãËåÉÁ∫øÊÄßÁ©∫Èó¥„ÄÇ\nÁü¢ÈáèÁöÑÂçï‰ΩçÂåñ: Âçï‰ΩçÂêëÈáèÊòØÂÆö‰πâ‰∏∫Ê®°Èïø‰∏∫1ÁöÑÂêëÈáè,ÈÇ£‰πà‰ªªÊÑèÂêëÈáèÁöÑÂçï‰ΩçÂåñ:\n$$ normalize(\\mathbf{a}) = \\frac{\\mathbf{a}}{||\\mathbf{a}||} $$\nÂçï‰ΩçÂåñ‰πüÂ∏∏Áß∞ÂΩí‰∏ÄÂåñÔºåËßÑËåÉÂåñ„ÄÇÂçï‰ΩçÂåñÂêëÈáèÂú®Âá†‰ΩïÂíåÁâ©ÁêÜ‰∏≠ÔºåÁâπÊåáÂêëÈáèÁöÑÊñπÂêë„ÄÇÂçï‰ΩçÂêëÈáèÂíåÂéüÂêëÈáèÁ∫øÊÄßÁõ∏ÂÖ≥\nËµãËåÉÁ∫øÊÄßÁ©∫Èó¥ÁöÑÂÆö‰πâÔºö$V$ÊòØÊï∞Âüü$F$‰∏äÁöÑÁ∫øÊÄßÁ©∫Èó¥ÔºåÊò†Â∞Ñ$||¬∑||:V \\to F$Êª°Ë∂≥\n1.Ê≠£ÂÆöÊÄß: $||\\mathbf{\\xi}|| \u0026gt; 0, ||\\mathbf{0}|| = 0$\n2.Ê≠£ÈΩêÊ¨°ÊÄßÔºö$||k\\xi||=|k|||\\xi||,k \\in F$\n3.‰∏âËßí‰∏çÁ≠âÂºè $||\\xi_1 + \\xi_2|| \\leq ||\\xi_1|| + ||\\xi_2||$\nÊØîÂ¶ÇÔºåÂú®Á∫øÊÄßÁ©∫Èó¥‰∏éÁ∫øÊÄßÂèòÊç¢‰∏≠ÔºåÊàë‰ª¨Áü•ÈÅìÊâÄÊúâÂú®Èó≠Âå∫Èó¥$[a,b]$‰∏äËøûÁª≠ÁöÑÂáΩÊï∞ÊûÑÊàê‰∏Ä‰∏™Á∫øÊÄßÁ©∫Èó¥$C[a,b]$ÔºåÊàë‰ª¨ÂèØ‰ª•ÂÆö‰πâ‰∏âÁßçÂ∏∏Áî®ÁöÑËåÉÊï∞Ôºå‰Ωø‰πãÊûÑÊàêËµãËåÉÁ∫øÊÄßÁ©∫Èó¥„ÄÇÈÇ£‰πàÂèØ‰ª•ÂÆö‰πâÂáΩÊï∞ÁöÑËåÉÊï∞Ôºö\n1.$\\infty - $ËåÉÊï∞:$||f(x)||\\infty=max{a \\leq x \\leq b}|f(x)|$\n2.$1 - $ËåÉÊï∞:$||f(x)||1 = \\int{a}^{b}|f(x)|dx$\n3.$2 - $ËåÉÊï∞:$||f(x)||2 = \\sqrt{\\int{a}^{b}{(f(x))^2}dx}$\nÁ±ªÊØî‰∫éÂêëÈáèÁöÑÂçï‰ΩçÂåñÔºå‰∏éÂáΩÊï∞ËåÉÊï∞ÁöÑÂÆö‰πâÔºåÊàë‰ª¨ÂèØ‰ª•ÂæóÂà∞ÂáΩÊï∞ÁöÑÂçï‰ΩçÂåñÔºöÂçï‰ΩçÂáΩÊï∞ÊòØËåÉÊï∞‰∏∫1ÁöÑÂáΩÊï∞ÔºåÈÇ£‰πàÂáΩÊï∞ÁöÑÂçï‰ΩçÂåñÔºö\n$$ normalize[f(x)] = \\frac{f(x)}{||f(x)||} $$\nÂçï‰ΩçÂáΩÊï∞ÁöÑÂèçÊò†Âú®ÂáΩÊï∞ÂõæÂÉè‰∏äÔºå‰øùÁïô‰∫ÜÂéüÂáΩÊï∞ÁöÑ‚ÄúËµ∑‰ºè‚ÄùÂΩ¢Áä∂„ÄÇ‰πüÂç≥Âçï‰ΩçÂáΩÊï∞‰∏éÂéüÂáΩÊï∞Á∫øÊÄßÁõ∏ÂÖ≥ÔºåËÄå‰∏îÂØºÂáΩÊï∞‰∏éÂéüÂáΩÊï∞ÈÉΩÁ∫øÊÄßÁõ∏ÂÖ≥Ôºö\n$$ (\\frac{f(x)}{||f(x)||})=\\frac{1}{||f(x)||}f(x)=kf`(x) $$\n$$ \\int{\\frac{f(x)}{f`(x)}dx}=\\frac{1}{||f(x)||}\\int{f(x)dx}=k\\int{f(x)dx} $$\nËåÉÊï∞ÊòØÊ®°ÁöÑÊäΩË±°ÔºåÊòØÊï∞Â≠¶‰∏äË°°ÈáèÂÖÉÁ¥†‚ÄúÈïøÁü≠‚ÄùÁöÑ‰∏ÄËà¨Ê¶ÇÂøµÔºåÂ¶ÇÊûúÊòØÊõ¥‰∏ÄËà¨ÁöÑÈõÜÂêàÔºåÂè™Ë¶ÅËåÉÊï∞ËøêÁÆóÊª°Ë∂≥Ê≠£ÂÆöÊÄß„ÄÅÊ≠£ÈΩêÊ¨°ÊÄß„ÄÅ‰∏âËßí‰∏çÁ≠âÂºèÔºåÈÇ£‰πàÂ∞±Áß∞ÂÆÉ‰∏∫ËµãËåÉÁ©∫Èó¥„ÄÇ\nÂêëÈáèÁöÑÂÜÖÁßØÂíåÂÜÖÁßØÁ©∫Èó¥ ÁÜüÊÇâÁöÑÂÜÖÁßØÂÖ¨Âºè‰∏∫Ôºö\n$$ \\mathbf{a}¬∑\\mathbf{b} = ||\\mathbf{a}||||\\mathbf{b}||cos\u0026lt;\\mathbf{a},\\mathbf{b}\u0026gt; $$\nÈÄöËøáÂÜÖÁßØËøêÁÆóÔºå‰πüÂª∫Á´ã‰∏Ä‰∏™‰ªéÁü¢ÈáèÂà∞Ê†áÈáèÁöÑÊò†Â∞Ñ„ÄÇÁü¢ÈáèÂÜÖÁßØÊúÄÈáçË¶ÅÁöÑÂá†‰ΩïÊÑè‰πâÊòØÂèçÂ∫î‰∫Ü‰∏§Áü¢ÈáèÁöÑÂ§πËßí$\\alpha$ÔºåÊâÄ‰ª•Êàë‰ª¨‰πüÂ∏∏Â∏∏‰ΩøÁî®Áü¢ÈáèÂÜÖÁßØËÆ°ÁÆó‰∏§Áü¢ÈáèÁöÑÂ§πËßíÔºö\n$$ \\cos{\\alpha} = \\frac{\\mathbf{a}¬∑\\mathbf{b}}{||\\mathbf{a}||||\\mathbf{b}||} $$\nÂõ†‰∏∫$-1 \\leq cos\\alpha \\leq -1$ÔºåÊâÄ‰ª•Êúâ $|\\mathbf{a}¬∑\\mathbf{b}| \\leq ||\\mathbf{a}||||\\mathbf{b}||$\nËøô‰∏™‰∏çÁ≠âÂºèÂ∞±ÊòØÊüØË•ø-Â∏ÉÊ∂ÖÊüØÂ§´ÊñØÂü∫‰∏çÁ≠âÂºè„ÄÇ\nÁî±ÂÆö‰πâÔºåÊàë‰ª¨ËøòÂèØ‰ª•‰ªéÂÜÖÁßØÂÖ¨Âºè‰∏≠ÂæóÂà∞ÂêëÈáèÊ®°ÁöÑËÆ°ÁÆóÂÖ¨ÂºèÔºö\n$$ ||\\mathbf{a}|| = \\sqrt{\\mathbf{a}¬∑\\mathbf{a}} $$\nÂÜÖÁßØÁ©∫Èó¥ÁöÑÂÆö‰πâÔºö $V$ ÊòØÊï∞Âüü$F$‰∏äÁöÑÁ∫øÊÄßÁ©∫Èó¥ÔºåÂú®$V$‰∏äÂÆö‰πâÂÜÖÁßØËøêÁÆó$(\\alpha,\\beta)$ÔºåÂØπ$\\forall \\alpha,\\beta \\in V$ÔºåÈÉΩÊúâ$F$‰∏≠ÁöÑ‰∏Ä‰∏™ÂÖÉÁ¥†‰∏é‰πãÂØπÂ∫î„ÄÇÂÆÉÂÖ∑Êúâ‰ª•‰∏ãÊÄßË¥®:\nÂÖ±ËΩ≠ÂØπÁß∞ÊÄßÔºö$(\\alpha,\\beta) = \\overline{(\\beta,\\alpha)}$ Êï∞‰πòÁªìÂêàÂæã: $(k\\alpha,\\beta) = k(\\alpha,\\beta)$ Âä†Ê≥ïÂàÜÈÖçÂæã: $(\\alpha + \\beta,\\gamma) = (\\alpha,\\gamma) + (\\beta,\\gamma)$ Ê≠£ÂÆöÊÄß: $(\\alpha,\\alpha) \\geq 0$ÔºåÂΩì‰∏î‰ªÖÂΩì$\\alpha = 0$Êó∂$(\\alpha,\\alpha) = 0$ Áî±ÂÆö‰πâÔºåÂÜÖÁßØÁ©∫Èó¥‰∏ÄÂÆöÊòØÁ∫øÊÄßÁ©∫Èó¥„ÄÇ\nÊ≠£‰∫§ ÂÆö‰πâÔºö Â¶ÇÊûú$(\\alpha,\\beta)=0$ÔºåÁß∞$\\alpha,\\beta$Ê≠£‰∫§„ÄÇÊ≠£‰∫§ÊòØÂûÇÁõ¥ÁöÑÊé®ÂπøÔºåÂè™ÊúâÂú®ÂÜÖÁßØÁ©∫Èó¥‰∏≠ÊâçÊúâÊÑè‰πâ„ÄÇ‰∏§Ê≠£‰∫§ÂÖÉÁ¥†ÊòØÁ∫øÊÄßÊó†ÂÖ≥ÁöÑ„ÄÇ\nÊ≠£‰∫§Âü∫‰∏éÊ†áÂáÜÊ≠£‰∫§Âü∫ÔºöÂú®ÂÜÖÁßØÁ©∫Èó¥Ôºå‰∏ÄÁªÑÈùûÈõ∂ÁöÑÂÖÉÁ¥†ÔºåÂ¶ÇÊûúÂÆÉ‰ª¨‰∏§‰∏§Ê≠£‰∫§ÔºåÂ∞±Áß∞‰∏∫Ê≠£‰∫§ÂÖÉÁ¥†ÁªÑ„ÄÇÂú®$n$Áª¥ÂÜÖÁßØÁ©∫Èó¥‰∏≠ÔºåÊúâ$n$‰∏™‰∏§‰∏§Ê≠£‰∫§ÁöÑÂÖÉÁ¥†ÔºåÁß∞‰∏∫Ê≠£‰∫§Âü∫ÔºåÂ¶ÇÊûúÊ≠£‰∫§Âü∫ÁöÑÂÖÉÁ¥†ÈÉΩÊòØÂçï‰ΩçÂÖÉÁ¥†ÔºåÂàôÁß∞‰∏∫Ê†áÂáÜÊ≠£‰∫§Âü∫„ÄÇËÆæ$\\epsilon_1,\\epsilon_2,\u0026hellip;,\\epsilon_n$ÊòØ‰∏ÄÁªÑÊ≠£‰∫§Âü∫ÔºåÈÇ£‰πàÔºö\n$$ (\\epsilon_i,\\epsilon_j) = \\left{ \\begin{aligned} \u0026amp;E_i,when \\quad i=j \\ \u0026amp;0,when \\quad i \\neq j \\ \\end{aligned} \\right. $$\nÂΩì$E_i=1$Êó∂ÔºåÂ∞±ÊòØÊ†áÂáÜÊ≠£‰∫§Âü∫„ÄÇ‰∏ÄÁªÑÂü∫‰∏∫Ê†áÂáÜÊ≠£‰∫§Âü∫ÁöÑÂÖÖË¶ÅÊù°‰ª∂ÊòØÔºåÂÆÉÁöÑÂ∫¶ÈáèÁü©Èòµ‰∏∫Âçï‰ΩçÁü©Èòµ„ÄÇÂú®Ê†áÂáÜÊ≠£‰∫§Âü∫‰∏ãÔºåÂÜÖÁßØÂÖ¨ÂºèÂèØ‰ª•ÁÆÄÂåñ‰∏∫Ôºö\n$$ (\\alpha,\\beta) = \\sum_{i=1}^{n}{\\sum_{j=1}^{n}{x_iy_i}} = X_TY $$\nÂÆöÁêÜ(ÊñΩÂØÜÁâπ(Schimidt)Ê≠£‰∫§Âåñ)Ôºö ÈÄöËøá$n$Áª¥Ê¨ßÂºèÁ©∫Èó¥‰∏≠‰ªªÊÑè‰∏ÄÁªÑÁ∫øÊÄßÊó†ÂÖ≥ÁöÑÂêëÈáèÁªÑ${\\epsilon_i}$ÔºåÈÉΩÂèØ‰ª•ÊâæÂà∞‰∏ÄÁªÑÊ†áÂáÜÁöÑÊ≠£‰∫§Âü∫${\\eta_i}$\nÈÄê‰∏™Ê≠£‰∫§ÂåñÔºå‰ª§$\\beta_1 = \\epsilon_1$\nÂõ†‰∏∫\\beta_iÊòØ${\\epsilon_i}$ÁöÑÁ∫øÊÄßÁªÑÂêàÔºåÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•ÊûÑÈÄ†ÈÄíÊé®ÂÖ¨ÂºèÔºö\n$$ \\beta_i = \\epsilon_i - \\sum_{j=1}^{i-1}{k_j\\beta_j},i \u0026gt; 1 $$\nÂÖ∂‰∏≠\n$$ k_j = \\frac{(\\epsilon_{i+1},\\beta_i)}{(\\beta_i,\\beta_i)} $$\nÂÜçÈÄê‰∏™ÂΩí‰∏ÄÂåñÔºö\n$$ \\eta_i = \\frac{\\beta_i}{|\\beta_i|},i=1,2,\u0026hellip;,n $$\n3.Á∫øÊÄßÊñπÁ®ãÁªÑÈóÆÈ¢ò 3.1.È´òÊñØÊ∂àÂÖÉÊ≥ï ‰Ω†‰∏ÄÂÆö‰ºöËß£ÁÆÄÂçïÁöÑÁ∫øÊÄßÊñπÁ®ãÁªÑÔºåÊØîÂ¶Ç‰∏ãÈù¢ËøôÊ†∑ÁöÑÔºö\n$$ 2x_1 + 4x_2 - 2x_3 = 2 $$\n$$ 4x_1 + 9x_2 - 3x_3 = 8 $$\n$$ -2x_1 - 3x_2 + 7x_3 = 10 $$\n‰Ω†‰∏ÄÂÆöÁü•ÈÅìÔºåÊ∂àÂÖÉÁöÑËøáÁ®ãÂ∞±ÊòØËß£ÊñπÁ®ãÁöÑËøáÁ®ã„ÄÇÂØπ‰∫é‰∏äÈù¢ÁöÑÊñπÁ®ãÁªÑÔºå $(1) + (3),(1) \\times 2 - (2)$ ÂèØ‰ª•Ê∂àÊéâ$x_1$ÔºåÂæóÂà∞‰∏§‰∏™ÊñπÁ®ãËøõ‰∏ÄÊ≠•ÂèØ‰ª•Ê∂àÊéâ$x_2$ Êàñ $x_3$ÔºåËøõËÄåËß£ÂæóÁªìÊûú\nËøô‰∏™ËøáÁ®ãÂèØ‰ª•Áî®Áü©ÈòµÊèèËø∞ÔºåË°®ËææÁöÑÊòØÁõ∏ÂêåÂê´‰πâ„ÄÇ\nÊääÊñπÁ®ãÁªÑÂ∑¶ËæπÂèòÈáèÂæóÁ≥ªÊï∞ÊîæËøõÁü©ÈòµÔºö\n$$ A = \\begin{bmatrix} 2 \u0026amp; 4 \u0026amp; -2\\ 4 \u0026amp; 9 \u0026amp; -3\\ -2 \u0026amp; -3 \u0026amp; 7 \\end{bmatrix} $$\nÊääÊñπÁ®ãÁªÑÂè≥ËæπÁöÑÊï∞Â≠óÊîæÂÖ•Áü©ÈòµÔºö\n$$ b = \\begin{bmatrix} 2 \\ 8 \\ 10 \\end{bmatrix} $$\nÂéüÊñπÁ®ãÂèØ‰ª•ÂÜôÊàêÔºö\n$$ Ax = b $$\nÊé•‰∏ãÊù•ËøõË°åÈ´òÊñØÊ∂àÂÖÉÂæóËøáÁ®ãÔºåÁî±‰∫éÁ≠âÂçÅ‰πãÈó¥ÂæóÂä†ÂáèÊ≥ïÂêåÊó∂Êìç‰ΩúÁ≠âÂºè‰∏§ËæπÔºå‰ª•‰∏ä‰∏§‰∏™Áü©Èòµ$A,b$ÁöÑË°åÂèòÊç¢ÈúÄË¶ÅÂêåÊó∂ËøõË°åÔºåÊïÖÊääÂÆÉ‰ª¨ÊîæËøõÂêå‰∏Ä‰∏™Áü©ÈòµÔºö\n$$ A` = \\begin{bmatrix} 2 \u0026amp; 4 \u0026amp; -2 \u0026amp; 2\\ 4 \u0026amp; 9 \u0026amp; -3 \u0026amp; 8\\ -2 \u0026amp; -3 \u0026amp; 7 \u0026amp; 10 \\end{bmatrix} $$\nÂÖàÊ∂àÊéâ$(2)$,$(3)$‰∏≠ÁöÑ$x_1$Ôºå‰πüÂ∞±ÊòØÊääÁü©ÈòµÁ¨¨2Ôºå3Ë°åÁöÑÁ¨¨‰∏ÄÂàóÂèòÊàê0„ÄÇÂèØ‰ª•ÂÆûÁé∞ËøôÊ†∑ÁöÑÊïàÊûúÔºö\n$$ A^{(1)} = \\begin{bmatrix} 2 \u0026amp; 4 \u0026amp; -2 \u0026amp; 2\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 4\\ 0 \u0026amp; 1 \u0026amp; 5 \u0026amp; 12 \\end{bmatrix} $$\nÁõ∏ÂΩì‰∫é‰øùÊåÅÁ¨¨‰∏Ä‰∏™ÊñπÁ®ã‰∏çÂèòÔºå‰ΩøÁî®Á¨¨‰∏Ä‰∏™ÊñπÁ®ã„ÄÇÂú®Á¨¨2,3‰∏≠Ê∂àÂéª‰∫Ü$x_1$ÔºåÊñ∞ÁöÑ2,3ÊñπÁ®ãÂ¶Ç‰∏ãÔºö\n$$ x_2 + x_3 = 4 $$\n$$ x_2 + 5x_3 = 12 $$\n‰∏äÈù¢ÁöÑÊìç‰ΩúÂèØ‰ª•ÁúãÂá∫ÔºåÊääÁü©ÈòµÁöÑ‰∏ÄË°å‰πò‰∏äÊüê‰∏™Êï∞Â≠óÔºåÂÜçÂä†/ÂáèÂà∞Âè¶‰∏ÄË°åÔºåÂèØ‰ª•Áúã‰ΩúÊääÊñπÁ®ãÁªÑ‰∏≠ÁöÑ‰∏§‰∏™ÊñπÁ®ãÊãøÂá∫Êù•ÔºåËÆ©‰ªñ‰ª¨ÁöÑÁ≠âÂºè‰∏§ËæπÁõ∏‰∫íÂä†ÂáèÔºåÂ∞±ÊòØÊàë‰ª¨ÁÜüÊÇâÁöÑÊ∂àÂÖÉÊâãÊ≥ïÔºÅ\n3.2.Âàó‰∏ªÂÖÉÊ∂àÂéªÊ≥ï Âàó‰∏ªÂÖÉÁ¥†Ê∂àÂéªÊ≥ïÊòØ‰∏∫ÊéßÂà∂ËàçÂÖ•ËØØÂ∑ÆËÄåÊèêÂá∫Êù•ÁöÑ‰∏ÄÁßçÁÆóÊ≥ïÔºåÂàó‰∏ªÂÖÉÁ¥†Ê∂àÂéªÊ≥ïËÆ°ÁÆóÂü∫Êú¨‰∏äËÉΩÊéßÂà∂ËàçÂÖ•ËØØÂ∑ÆÁöÑÂΩ±ÂìçÔºåÂÖ∂Âü∫Êú¨ÊÄùÊÉ≥ÊòØÔºöÂú®ËøõË°åÁ¨¨ $k(k=1,2,‚Ä¶,n-1)$Ê≠•Ê∂àÂÖÉÊó∂Ôºå‰ªéÁ¨¨kÂàóÁöÑ akkÂèäÂÖ∂‰ª•‰∏ãÁöÑÂêÑÂÖÉÁ¥†‰∏≠ÈÄâÂèñÁªùÂØπÂÄºÊúÄÂ§ßÁöÑÂÖÉÁ¥†ÔºåÁÑ∂ÂêéÈÄöËøáË°åÂèòÊç¢Â∞ÜÂÆÉ‰∫§Êç¢Âà∞‰∏ªÂÖÉÁ¥†akkÁöÑ‰ΩçÁΩÆ‰∏äÔºåÂÜçËøõË°åÊ∂àÂÖÉ„ÄÇ\n‰ºòÁÇπ È´òÊñØÊ∂àÂéªÊ≥ï‰ªéÁ¨¨kÊ≠•Âà∞Á¨¨k+1Ê≠•ÁöÑÊ∂àÂÖÉËøáÁ®ãÔºåÂøÖÈ°ªÊª°Ë∂≥Êù°‰ª∂a(kk)‰∏çÁ≠â‰∫éÈõ∂ ÔºàkkÊåá‰∏ãÊ†áÔºâ„ÄÇËÄåËøô‰∏™ÂÖÉÁ¥† Âç≥Ë¢´Áß∞‰∏∫Á¨¨kÊ≠•ÁöÑ‰∏ªÂÖÉ(Á¥†)„ÄÇÊòæÁÑ∂ÔºåÈ´òÊñØÊ∂àÂéªÊ≥ïÊòØÊåâÊñπÁ®ãÊéíÂàóÁöÑËá™ÁÑ∂È°∫Â∫è‰∫ßÁîü‰∏ªÂÖÉÁöÑÔºåËøôÊ†∑Ôºå‰∏ÄÊó¶Âá∫Áé∞ ËÆ°ÁÆóÂ∞±ÂΩí‰∫éÂ§±Ë¥•ÔºåËÄå‰∏îÂç≥‰Ωøa(kk)‰∏çÁ≠â‰∫éÈõ∂ ÔºàkkÊåá‰∏ãÊ†áÔºâ Ôºå‰ΩÜËã•ÂÖ∂ÁªùÂØπÂÄºÂæàÂ∞èÔºå‰πüÂ∞Ü‰ºöÂõ†Áî®ÂÆÉ‰ΩúÈô§Êï∞ÔºåÂºïËµ∑ÂÖ∂‰ªñÂÖÉÁ¥†ÁöÑÊï∞ÈáèÁ∫ßÂèäËàç‰∫∫ËØØÂ∑ÆÊÄ•ÂâßÂ¢ûÂ§ßÔºåÂØºËá¥ÊúÄÁªàËÆ°ÁÆóÁªìÊûú‰∏çÂèØÈù†„ÄÇ‰∏∫‰∫ÜÈÅøÂÖçÂú®È´òÊñØÊ∂àÂéªÊ≥ïÂ∫îÁî®‰∏≠ÂèØËÉΩÂá∫Áé∞ÁöÑËøôÁ±ªÈóÆÈ¢òÔºåÂ∞±ÂèëÂ±ïÂΩ¢Êàê‰∫ÜÂàó‰∏ªÂÖÉ„ÄÅÂÖ®‰∏ªÂÖÉÁ≠âÂ§öÁßçÊ∂àÂéªÊ≥ï„ÄÇËøô‰∫õÊñπÊ≥ïÁöÑÂü∫Êú¨ÁÇπÂú®‰∫éÂØπÈ´òÊñØÊ∂àÂéªÊ≥ïÁöÑËøáÁ®ã‰ΩúÊüê‰∫õÊäÄÊúØÊÄß‰øÆÊîπÔºåÂÖ®Èù¢ÊàñÂ±ÄÈÉ®Âú∞ÈÄâÂèñÁªùÂØπÂÄºÊúÄÂ§ßÁöÑÂÖÉÁ¥†‰∏∫‰∏ªÂÖÉÁ¥†Ôºå‰ªéËÄåÊûÑÊàê‰∫ÜÁõ∏Â∫îÁöÑ‰∏ªÂÖÉ(Á¥†)Ê∂àÂéªÊ≥ï„ÄÇÂàó‰∏ªÂÖÉ(Á¥†)Ê∂àÂéªÊ≥ï‰ª•Â§ÑÁêÜÁÆÄÂçï„ÄÅÁõ∏ÂØπËÆ°ÁÆóÈáèÂ∞èÁöÑÁâπÁÇπÔºåÂú®ÂêÑÁ±ª‰∏ªÂÖÉÊ∂àÂéªÊ≥ï‰∏≠ÂæóÂà∞ÊúÄ‰∏∫ÂπøÊ≥õÁöÑÂ∫îÁî®„ÄÇ\nÁÆóÊ≥ïÊµÅÁ®ã Êú¨ÁÆóÊ≥ïÂ∞ÜÊ∂àÂÖÉÁªìÊûúË¶ÜÁõñ$A$Ôºå‰πòÊï∞$m_{jk}$ ÔºåÂÜ≤Êéâ$a_{ik}$ÔºåËß£xÂ≠òÊîæÂú®bÂÜÖ„ÄÇ\nÂØπ‰∫é$k=1,2,3\u0026hellip;.n$Ôºå‰æùÊ¨°ÂÅöÂà∞Á¨¨‰∫îÊ≠• ÊåâÂàóÈÄâ‰∏ªÂÖÉÔºåÂç≥Á°ÆÂÆö$i_k$Ôºå‰ΩøÂæó $$ |a_{i_k,k}| = max_{k \\leq i \\leq n}|a_{ik}| $$\nÂ¶ÇÊûú$a_{i_k,k} = 0ÔºåÂàôËæìÂá∫Êó†Ëß£$ Â¶ÇÊûú$i_k = k$ÔºåÂàôËΩ¨Âêë5ÔºåÂê¶ÂàôÊç¢Ë°å $$ a_{kj} \\Leftrightarrow a_{i_k,k} (j=k,k+1,\u0026hellip;,n) $$\n$$ b_k \\Leftrightarrow b_{i_k} $$\nÊ∂àÂÖÉËøáÁ®ãÔºö $$ a_{ik} \\leftarrow m_{ik} = \\frac{a_{ik}}{a_{kk}}, (i=k+1,\u0026hellip;,n) $$\n$$ a_{ij} \\leftarrow a_{ij} - m_{ik}a_{kj} (i,j=k+1,\u0026hellip;,m) $$\n$$ b_i \\leftarrow b_i - m_{ik}b_k, (i=k+1,\u0026hellip;,n) $$\nÂ¶ÇÊûú$a_{00} = 0$ÔºåÂàôÂÅúÊú∫ Âõû‰ª£Ê±ÇËß£ $$ b_n \\leftarrow \\frac{b_n}{a_{nm}} $$\n$$ b_i \\leftarrow \\frac{b_i - \\sum_{j=i+1}^{n}{a_{ij}b_j}}{a_{ii}},(i=n-1,\u0026hellip;,2,1) $$\nËæìÂá∫ÁªìÊûúx. 3.3.Áü©ÈòµÁöÑ‰∏âËßíÂàÜËß£Ê≥ï ÂÅáËÆæÊàë‰ª¨ÊúâËøôÊ†∑ÁöÑÊñπÁ®ãÔºö\n$$ 2x_1 + x_2 + x_3 = 4 $$\n$$ 4_x1 + 3x_2 + 3x_3 + x_4 = 11 $$\n$$ 8x_1 + 7x_2 + 9x_3 + 5x_4 = 29 $$\n$$ 6x_1 + 7x_2 + 9x_3 + 8x_4 = 30 $$\nÈÄöËøáÈ´òÊñØÊ∂àÂÖÉÊ≥ïÔºåËé∑ÂæóÁ≠â‰ª∑ÈóÆÈ¢ò:\n$$ 2x_1 + x_2 + x_3 = 4 $$\n$$ x_2 + x_3 + x_4 = 3 $$\n$$ 2x_3 + 2x_4 = 4 $$\n$$ 2x_4 = 2 $$\nËøôÊ†∑ÁöÑÊ∂àÂÖÉËøáÁ®ãÂ¶ÇÊûúÂÜôÊàêÁü©ÈòµÁõ∏‰πòÁöÑËøáÁ®ãÔºåÈÇ£‰πàÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö\n$$ L_1A = \\begin{bmatrix} 1 \u0026amp; \u0026amp; \u0026amp; \\ -2 \u0026amp; 1 \u0026amp; \u0026amp; \\ -4 \u0026amp; \u0026amp; 1 \u0026amp; \\ -3\u0026amp; \u0026amp; \u0026amp; 1 \\end{bmatrix}\\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 8 \u0026amp; 7 \u0026amp; 9 \u0026amp; 5 \\ 6 \u0026amp; 7 \u0026amp; 9 \u0026amp; 8 \\end{bmatrix} = \\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 0 \u0026amp; 3 \u0026amp; 5 \u0026amp; 5 \\ 0 \u0026amp; 4 \u0026amp; 6 \u0026amp; 8 \\end{bmatrix} $$\nÁ¨¨‰∫åÊ¨°Ê∂àÂÖÉÊÑèÂë≥ÁùÄ\n$$ L_2L_1A = \\begin{bmatrix} 1 \u0026amp; \u0026amp; \u0026amp; \\ \u0026amp; 1 \u0026amp; \u0026amp; \\ \u0026amp; -3 \u0026amp; 1 \u0026amp; \\ \u0026amp; -4 \u0026amp; \u0026amp; 1 \\end{bmatrix}\\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 8 \u0026amp; 7 \u0026amp; 9 \u0026amp; 5 \\ 6 \u0026amp; 7 \u0026amp; 9 \u0026amp; 8 \\end{bmatrix} = \\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 0 \u0026amp; 0 \u0026amp; 2 \u0026amp; 2 \\ 0 \u0026amp; 0 \u0026amp; 2 \u0026amp; 4 \\end{bmatrix} $$\nÁ¨¨‰∏âÊ¨°Ê∂àÂÖÉÊÑèÂë≥ÁùÄ\n$$ L_3L_2L_1A = \\begin{bmatrix} 1 \u0026amp; \u0026amp; \u0026amp; \\ \u0026amp; 1 \u0026amp; \u0026amp; \\ \u0026amp; \u0026amp; 1 \u0026amp; \\ \u0026amp; \u0026amp; -1 \u0026amp; 1 \\end{bmatrix} \\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 8 \u0026amp; 7 \u0026amp; 9 \u0026amp; 5 \\ 6 \u0026amp; 7 \u0026amp; 9 \u0026amp; 8 \\end{bmatrix} = \\begin{bmatrix} 2 \u0026amp; 1 \u0026amp; 1 \u0026amp; 0\\ 0 \u0026amp; 1 \u0026amp; 1 \u0026amp; 1\\ 0 \u0026amp; 0 \u0026amp; 2 \u0026amp; 2 \\ 0 \u0026amp; 0 \u0026amp; 0 \u0026amp; 2 \\end{bmatrix} = U $$\nÈÄöËøá‰∏äËø∞ËøáÁ®ãÂæóÂà∞‰∫ÜLUÂàÜËß£ÁöÑÂü∫Êú¨ÂΩ¢Âºè„ÄÇ\nÂØπ‰∫énÈò∂ÊñπÈòµAÔºåÂ¶ÇÊûúÂ≠òÂú®nÈò∂Âçï‰Ωç‰∏ã‰∏âËßíÁü©ÈòµLÂíånÈò∂‰∏ä‰∏âËßíÂΩ¢Áü©ÈòµUÔºå‰ΩøÂæóA=LUÔºåÂàôÁß∞ÂÖ∂‰∏∫Áü©ÈòµAÁöÑLUÂàÜËß£Ôºå‰πüÁß∞‰∏∫DoolittleÂàÜËß£„ÄÇ\nÂØπ‰∫éGaussÊ∂àÂéªÊ≥ïÂíåLUÂàÜËß£Ê≥ïÁöÑ‰πòÊ≥ïËÆ°ÁÆóËÆ°ÁÆóÈáèÈÉΩÊòØÂú®$\\frac{n^3}{3}$ ÈáèÁ∫ßÔºåËøô‰∏™Â∞±ÊòØÂàÜËß£ËøáÁ®ãÁöÑ‰πòÊ≥ïËÆ°ÁÆóÈáèÔºåÊé®ÂØºËøáÁ®ãÂèØ‰ª•Ê®°Êãü‰∏Ä‰∏ãÈ´òÊñØÊ∂àÂéªÊ≥ïÁöÑÊï¥‰ΩìËøáÁ®ãÔºåÂ∞±ÂèØ‰ª•ÂæóÂà∞Â¶Ç‰∏ãÁöÑÁ≠âÂºèÔºå\n$$ \\sum_{k=1}^{n-1}(n-k)(n-k+2) = \\frac{1}{3}n^3 + \\frac{1}{2}n^2 - \\frac{5}{6}n $$\n$$ \\sum_{k=1}^{n}(n-k+1)=\\frac{n(n+1)}{2} $$\n#include\u0026lt;iostream\u0026gt; using namespace std; const int n = 3; //Áü©ÈòµÁöÑALUÂàÜËß£ void ALU(double a[n][n], double b[n]) { double l[n][n] = { 0 }; double u[n][n] = { 0 }; int i, r, k; //ËøõË°åUÁöÑÁ¨¨‰∏ÄË°åÁöÑËµãÂÄº for (i = 0; i\u0026lt;n; i++) { u[0][i] = a[0][i]; } //ËøõË°åLÁöÑÁ¨¨‰∏ÄÂàóÁöÑËµãÂÄº for (i = 1; i\u0026lt;n; i++) { l[i][0] = a[i][0] / u[0][0]; } //ËÆ°ÁÆóUÁöÑÂâ©‰∏ãÁöÑË°åÊï∞ÂíåLÁöÑÂâ©‰∏ãÁöÑÂàóÊï∞ for (r = 1; r\u0026lt;n; r++) { for (i = r; i \u0026lt;n; i++) { double sum1 = 0; for (k = 0; k \u0026lt; r; k++) { sum1 += l[r][k] * u[k][i]; //cout \u0026lt;\u0026lt; \u0026#34;\u0026#34; \u0026lt;\u0026lt; r \u0026lt;\u0026lt; \u0026#34;\u0026#34; \u0026lt;\u0026lt; sum1 \u0026lt;\u0026lt; endl; } u[r][i] = a[r][i] - sum1; } if(r!=n) for(i=r+1;i\u0026lt;n;i++) { double sum2 = 0; for (k = 0; k\u0026lt;r; k++) { sum2 += l[i][k] * u[k][r]; } l[i][r] = (a[i][r] - sum2) / u[r][r]; } } double y[n] = { 0 }; y[0] = b[0]; for (i = 1; i\u0026lt;n; i++) { double sum3 = 0; for (k = 0; k\u0026lt;i; k++) sum3 += l[i][k] * y[k]; y[i] = b[i] - sum3; } double x[n] = { 0 }; x[n - 1] = y[n - 1] / u[n - 1][n - 1]; for (i = n - 2; i \u0026gt;= 0; i--) { double sum4 = 0; for (k = i + 1; k\u0026lt;n; k++) sum4 += u[i][k] * x[k]; x[i] = (y[i] - sum4) / u[i][i]; } for (i = 0; i\u0026lt;n; i++) cout \u0026lt;\u0026lt; \u0026#34;x[\u0026#34; \u0026lt;\u0026lt; i + 1 \u0026lt;\u0026lt; \u0026#34;]=\u0026#34; \u0026lt;\u0026lt; x[i] \u0026lt;\u0026lt; endl; return; } int main() { double a[3][3] = { 1,2,3,2,5,2,3,1,5 }; double b[3] = { 14,18,20 }; ALU(a, b); return 0; } 3.4.Áü©ÈòµÁöÑÁõ¥Êé•LUÂàÜËß£Ê≥ï 3.5.‰∏âÂØπËßíÁ∫øÊÄßÊñπÁ®ãÁªÑÁöÑËøΩËµ∂Ê≥ï 3.6.Ëø≠‰ª£Ê≥ïÊ±ÇËß£Á∫øÊÄßÊñπÁ®ãÁªÑ ËÄÉËôëÊ±ÇËß£Á∫øÊÄßÊñπÁ®ãÁªÑ$Ax=b$ÔºåÂÖ∂‰∏≠$A \\in \\mathbf{R}^{n \\times n}$ÈùûÂ•áÂºÇ„ÄÇÂ∞ÜÊñπÁ®ãÁªÑÂåñ‰∏∫$x = Hx+g$ÁöÑÁ≠â‰ª∑ÂΩ¢ÂºèÔºåÂπ∂ÊûÑÈÄ†‰∏Ä‰∏™Êî∂ÊïõÂà∞Ëß£ÁöÑËø≠‰ª£Â∫èÂàóÔºö$x^{(k+1)}=Hx^{(k)}+g$ÔºåÂÖ∂‰∏≠${x^{(k)}}$‰∏∫Ëø≠‰ª£Â∫èÂàóÔºå$H$‰∏∫Ëø≠‰ª£Áü©Èòµ„ÄÇ\nÈÄöËøáËØÅÊòéÂèØ‰ª•ÁúãÂà∞ÔºåÂØπ‰∫é‰ªªÊÑèÂàùÂÄºÂ∫èÂàóÔºåÂΩì$k \\to \\infty$Êó∂ÔºåÂ¶ÇÊûú${x^{(k)}}ÊúâÂîØ‰∏ÄÊûÅÈôê$x* \\in \\mathbf{R}^{n \\times n}$ÔºåÂàôÁß∞$H$‰∏∫Êî∂ÊïõÁü©ÈòµÔºå‰∏îÊ≠§Êó∂$x*$ÊÅ∞‰∏∫Á∫øÊÄßÊñπÁ®ãÁªÑ$Ax=b$ÁöÑËß£„ÄÇËøô‰æøÊòØËø≠‰ª£Ê≥ïÊ±ÇËß£ÁöÑÂü∫Êú¨ÊÄùÊÉ≥ÔºåÂç≥ÊûÑÈÄ†Êî∂ÊïõÂ∫èÂàóÊù•ÈÄºËøëÊñπÁ®ãÁªÑËøë‰ººÁöÑËß£„ÄÇ\nÊòæÁÑ∂ÔºåËø≠‰ª£Ëß£Ê≥ïÁöÑÊî∂ÊïõÊÄß‰ª•ÂèäËØØÂ∑Æ‰º∞ËÆ°ÁöÑÈóÆÈ¢òËá≥ÂÖ≥ÈáçË¶ÅÔºåÂõ†‰∏∫ËøôÂÜ≥ÂÆö‰∫ÜÊî∂ÊïõÊ≥ïÊòØÂê¶ÊúâÊïà„ÄÇ\nËø≠‰ª£Áü©Èòµ$H$‰∏∫Êî∂ÊïõÁü©ÈòµÔºåÂΩì‰∏î‰ªÖÂΩì$H$ÁöÑË∞±ÂçäÂæÑ$\\rho(H) \u0026lt; 1$\n3.7.ÈõÖÂèØÊØîËø≠‰ª£Ê≥ï (1) Ëø≠‰ª£Ê†ºÂºèÔºö\n‰ªªÂèñ$x_i^{(0)}(i=1,2,3,\u0026hellip;,n)$,‰æùÊ¨°Ê±ÇËß£Ôºö$x_i^{(k+1)}(k=0,1,\u0026hellip;)$\n$$ a_{11}x_1^{(k+1)} + a_{12}x_2^{(k)} + a_{13}x_3^{(k)} + \u0026hellip; + a_{1n}x_n^{(k)} = b_1 $$\n$$ a_{21}x_1^{(k+1)} + a_{22}x_2^{(k)} + a_{23}x_3^{(k)} + \u0026hellip; + a_{2n}x_n^{(k)} = b_2 $$\n$$ a_{n1}x_1^{(k+1)} + a_{n2}x_2^{(k)} + a_{n3}x_3^{(k)} + \u0026hellip; + a_{nn}x_n^{(k)} = b_n $$\n‰∫ßÁîüËø≠‰ª£Ê†ºÂºèÔºö\n$$ x_1^{(k+1)} = -\\frac{1}{a_{11}}(a_{12}x_2^{(k)} + a_{13}x_3^{(k)} + \u0026hellip; + a_{1n}x_n^{(k)}-b_1) $$\n$$ x_2^{(k+1)} = -\\frac{1}{a_{21}}(a_{22}x_1^{(k)} + a_{23}x_3^{(k)} + \u0026hellip; + a_{2n}x_n^{(k)}-b_2) $$\n$$ x_n^{(k+1)} = -\\frac{1}{a_{21}}(a_{22}x_1^{(k)} + a_{23}x_2^{(k)} + \u0026hellip; + a_{2n}x_{n-1}^{(k)}-b_2) $$\nÂ∑≤Áü•$D = diag(a_{11},\u0026hellip;,a_{nn})$ ‰∏∫ÂØπËßíÁü©ÈòµÔºåÊàë‰ª¨Áß∞Ëøô‰∏ÄËø≠‰ª£Ê†ºÂºè‰∏∫Ê±ÇËß£ÊñπÁ®ãÁªÑ $Ax = b$ JacobiËø≠‰ª£ÔºåÂÖ∂Áõ∏Â∫îÁöÑÁü©ÈòµÂΩ¢Âºè‰∏∫Ôºö\n$$ x^{(k+1)} = (I - D^{-1}A)x^{(k)} + D^{-1}b $$\n3.8.È´òÊñØ-ËµõÂæ∑Â∞îËø≠‰ª£Ê≥ï 4.ÊèíÂÄºÁÆóÊ≥ï 4.1.Á∫øÊÄßÊèíÂÄº $\\quad$ ÂçïÁ∫øÊÄßÊèíÂÄºÊòØÂú®‰∏Ä‰∏™ÊñπÂêë‰∏äËøõË°åÁ∫øÊÄßÊèíÂÄº,ÊØîÂ¶ÇXÊñπÂêë„ÄÇÂÅáËÆæÊàë‰ª¨Â∑≤Áü•ÂùêÊ†á$(x_0,y_0)$ ‰∏é$(x_1,y_1)$ÔºåË¶ÅÂæóÂà∞$[x_0,x_1]$ Âå∫Èó¥ÂÜÖÊüê‰∏Ä‰ΩçÁΩÆ$x$ Âú®Áõ¥Á∫ø‰∏äÁöÑÂÄº„ÄÇÊ†πÊçÆÂõæÁ§∫ÔºåÊàë‰ª¨ÂæóÂà∞Ôºö\n$$ \\frac{y - y_0}{x - x_0} = \\frac{y_1 - y_0}{x_1 - x_0} $$\n$\\quad$ Áî±‰∫é$x$ÂÄºÂ∑≤ÁªèÔºåÊâÄ‰ª•ÂèØ‰ª•‰ªéÂÖ¨ÂºèÂæóÂà∞$y$ÁöÑÂÄºÔºö\n$$ y = y_0 + (x - x_0)\\frac{y_1 - y_0}{x_1 - x_0} = y_0 + \\frac{(x - x_0)y_1 - (x - x_0)y_0}{x_1 - x_0} $$\n$\\quad$ Â∑≤Áü•$y$Ê±Ç$x$ÁöÑËøáÁ®ã‰∏é‰ª•‰∏äËøáÁ®ãÁõ∏ÂêåÔºåÂè™ÊòØ$x$‰∏é$y$Ë¶ÅËøõË°å‰∫§Êç¢\n4.2.ÂèåÁ∫øÊÄßÊèíÂÄº $\\quad$ ÂèåÁ∫øÊÄßÊèíÂÄºÊòØÊúâ‰∏§‰∏™ÂèòÈáèÁöÑÊèíÂÄºÂáΩÊï∞ÁöÑÂçïÁ∫øÊÄßÊèíÂÄºÊâ©Â±ï,Âô®Ê†∏ÂøÉÊÄùÊÉ≥ÊòØÂú®‰∏§‰∏™ÊñπÂêë‰∏äÂàÜÂà´ËøõË°å‰∏ÄÊ¨°Á∫øÊÄßÊèíÂÄº.\n$$ f(R_1) \\approx \\frac{x_2 - x}{x_2 - x_1}f(Q_{11}) + \\frac{x - x_1}{x_2 - x_1}f(Q_{21}) \\quad where \\quad R_1 = (x,y_1) $$\n$$ f(R_2) \\approx \\frac{x_2 - x}{x_2 - x_1}f(Q_{12}) + \\frac{x - x_1}{x_2 - x_1}f(Q_{22}) \\quad where \\quad R_2 = (x,y_2) $$\n$$ f(P) \\approx \\frac{y_2 - y}{y_2 - y_1}f(R_1) + \\frac{y - y_1}{y_2 - y_1}f(R_2) $$\n4.3.Êãâ‰∏™ÊúóÊó•ÊèíÂÄº $\\quad$ ËÆæÂáΩÊï∞$f(x)$Âú®Âå∫Âà´$[a,b]$‰∏äÊúâÂÆö‰πâÔºå‰∏îÂ∑≤ÁªèÂú®ÁÇπ$a \\leq x_0 \u0026lt; x_1 \u0026lt; x_2 \u0026lt; \u0026hellip; \u0026lt; x_n \\leq b$‰∏äÁöÑÂáΩÊï∞Êï∞ÂÄº$y_0,y_1,\u0026hellip;,y_n$ÔºåÊ±ÇÊûÑÈÄ†‰∏Ä‰∏™Ê¨°Êï∞‰∏çË∂ÖËøá$n$ÁöÑÊèíÂÄºÂ§öÈ°πÂºè\n$L_n(x) = a_0 + a_1x + \u0026hellip; + a_nx^n$\n‰ΩøÂæó$L_n(x_i) = y_i(i = 0,1,2,\u0026hellip;,n)$ÊàêÁ´ã\n$$ n = 1 $$\n$f(x)$ Âú®Âå∫Èó¥$[x_k,x_{k+1}]$Á´ØÁÇπÂ§ÑÁöÑÂáΩÊï∞ÂÄº$f(x_k)$Âíå$f(x_{k+1})$ÔºåÊ±ÇÊûÑÈÄ†ÂáΩÊï∞‰∏Ä‰∏™Á∫øÊÄßÊèíÂÄºÂ§öÈ°πÂºè$L_1(x)$‰ΩøÂæó\n$$ L_1(x_k) = y_k = f(x_k) $$\n$$ L_1(x_{k+1}) = y_{k+1} = f(x_{k+1}) $$\nÊàêÁ´ãÔºåÁî±Áõ¥Á∫øÁöÑÁÇπÊñúÂºèÂèØ‰ª•ÂæóÂà∞Ôºö\n$$ L_1(x) = y_k + \\frac{y_{k+1} - y_k}{x_{k+1} - x_k}(x - x_k) = l_k(x)y_k + l_{k+1}(x)y_{k+1} $$\nÂÖ∂‰∏≠ $l_k(x) = \\frac{x - x_{k+1}}{x_k - x_{k+1}}Ôºål_{k+1}(x) = \\frac{x - x_k}{x_{k+1} - x_k}$ÔºåËøôÈáå$l_k(x)$Âíå$l_{k+1}(x)$Áß∞‰ΩúÁ∫øÊÄßÊèíÂÄºÂü∫ÂáΩÊï∞„ÄÇ\n$$ n = 2 $$\nÂ∑≤Áü•$f(x)Âú®ÁÇπx_{k-1},x_k,x_{k+1}$‰∏äÁöÑÂáΩÊï∞ÂÄº\n$$ f(x_{k-1}),f(x_k),f(x_{k+1}) $$\nÔºåÊ±ÇÊûÑÈÄ†‰∏Ä‰∏™‰∫åÊ¨°ÊèíÂÄºÂ§öÈ°πÂºè$L_2(x)$Ôºå‰ΩøÂæó\n$$ L_2(x_{k-1}) = y_{k-1} = f(x_{k-1}) $$\n$$ L_2(x_k) = y_k = f(x_k) $$\n$$ L_2(x_{k+1}) = y_{k+1} = f(x_{k+1}) $$\nÊàêÁ´ãÔºåÊûÑÈÄ†\n$$ L_2(x) = y_{k-1}l_{k-1}(x) + y_kl_k(x) + y_{k+1}l_{k+1}(x) $$\nÊòìÂæó\n$$ l_{k-1}(x) = \\frac{(x - x_k)(x - x_{k+1})}{(x_{k-1} - x_k)(x_{k-1} - x_{k+1})} $$\n$$ l_k(x) = \\frac{(x - x_{k-1})(x - x_{k+1})}{(x_k - x_{k+1})(x_k - x_{k+1})} $$\n$$ l_{k+1}(x) = \\frac{(x - x_{k-1})(x - x_k)}{(x_{k+1} - x_{k-1})(x_{k+1} - x_k)} $$\n‰∏ÄËà¨ÊÉÖÂÜµÔºö\nÂÅáËÆæ$L_n(x) = l_0(x)y_0 + l_1(x)y_1 + \u0026hellip; + l_n(x)y_n$\nÂÖ∂‰∏≠$l_i(x)(i=0,1,2,\u0026hellip;,n)$‰∏∫$n$Ê¨°Â§öÈ°πÂºèÔºåÁß∞‰Ωú$n$Ê¨°ÊèíÂÄºÂü∫ÂáΩÊï∞Ôºå‰∏îÊª°Ë∂≥Ôºö\n$$ l_i(x_j) = \\begin{cases} 1, x_j = x_i \\ 0, x_j \\neq x_i \\end{cases} ,(i=0,1,2,\u0026hellip;,n) $$\nÊòìÂæó\n$$ l_i(x) = \\prod_{j = 0,j \\neq i}^{n}{\\frac{x - x_j}{x_i - x_j}} $$\n4.4.ÁâõÈ°øÊèíÂÄº Â∑ÆÂïÜ ËÆæÂáΩÊï∞$f(x)$ÔºåÂ∑≤Áü•ÂÖ∂$n$‰∏™ÊèíÂÄºËäÇÁÇπ‰∏∫$(x_1,y_1),(x_2,y_2),(x_3,y_3),\u0026hellip;,(x_n,y_n)$ÔºåÊàë‰ª¨ÂÆö‰πâÔºö\n$$ [‰∏ÄÈò∂Â∑ÆÂïÜ] $$\n$$ f[x_i,x_j] = \\frac{f(x_i) - f(x_j)}{x_i - x_j} \\quad (i \\neq j,x_i \\neq x_j) $$\n$$ [‰∫åÈò∂Â∑ÆÂïÜ] $$\n$$ f[x_i,x_j,x_k] = \\frac{f[x_i,x_j] - f[x_j,x_k]}{x_i - x_k} \\quad (i \\neq k) $$\n$$ [nÈò∂Â∑ÆÂïÜ] $$\n$$ f[x_0,x_1,\u0026hellip;,x_n] = \\frac{f[x_0,x_1,\u0026hellip;,x_{n-1}] - f[x_1,x_2,\u0026hellip;,x_n]}{x_0 - x_n} $$\nÂü∫‰∫éÂ∑ÆÂïÜÁöÑÂÆö‰πâÔºåÊàë‰ª¨ÂèØ‰ª•ÂæóÂà∞‰∏ãÈù¢ÁöÑÂÖ¨ÂºèÔºö\n$$ f(x) = f(x_0) + f[x,x_0](x - x_0) $$\n$$ f[x,x_0] = f[x_0,x_1] + f[x,x_0,x_1](x - x_1) $$\n$$ \u0026hellip; $$\n$$ f[x,x_0,x_1,\u0026hellip;,x_{n-1}] = f[x_0,x_1,\u0026hellip;,x_n] + f[x,x_0,x_1,\u0026hellip;,x_n](x - x_n) $$\n‰∏çÊñ≠Ê∂àÂéªÂõû‰ª£ÂèØ‰ª•ÂæóÂà∞Ôºö\n$$ f(x) = \\sum_{i = 0}^{n}{fx_0,\u0026hellip;,x_i\u0026hellip;(x - x_i)} $$\nËøô‰∏™Êó∂ÂÄô‰∏äÂºèÊúâ‰∏§ÈÉ®ÂàÜÁªÑÊàêÔºåÁâõÈ°øÊèíÂÄºÈÄºËøëÂáΩÊï∞$P(x)$ÔºåËØØÂ∑ÆÂáΩÊï∞$R(x)$ÔºåÂéªÊéâÂ∞±ÂèØ‰ª•ÂæóÂà∞Ôºö\n$$ N(x) = f(x_0) + f[x_0,x_1](x - x_0) + \u0026hellip; + f[x_0,\u0026hellip;,x_n](x - x_0)\u0026hellip;(x - x_{n-1}) $$\n5.Êï∞ÂÄºÂæÆÂàÜÂíåÁßØÂàÜ 5.1.Êï∞ÂÄºÂæÆÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 5.2.Êï∞ÂÄºÁßØÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 6.Êï∞ÂÄºÈÄºËøë 6.1.Êõ≤Á∫øÂíåÊõ≤Èù¢ÁöÑÊãüÂêà Êàë‰ª¨Âú®ËøôÈáå‰ºö‰ªãÁªç‰∏ãÈù¢Âá†ÁßçÊãüÂêàÊñπÂºèÔºö\nÂ§öÈ°πÂºèÊãüÂêà\nÊ†∑Êù°ÊèíÂÄº\nÊúÄÂ∞è‰∫å‰πòÊ≥ï\nÂ§öÈ°πÂºèÊãüÂêà $\\quad$ ÂÅáËÆæÊúâ‰∏ÄÁªÑÊï∞ÊçÆÁÇπÔºåÂåÖÂê´$m$‰∏™ÁÇπÔºå‰∏∫${(x_i,y_i)},i=1,2,..,m$\n$\\quad$ Êàë‰ª¨ÂèØ‰ª•ËÆ©Ê†∑Êú¨ÁÇπÁöÑÂàÜÂ∏ÉÂàíÊàê‰∏Ä‰∏™$n$Ê¨°Â§öÈ°πÂºè\n$$\\hat{y} = \\sum_{i=0}^{n}{a_ix^{n-i}}$$\n$\\quad$ ÂèØ‰ª•ÁúãÂà∞Ôºå$n$ Ê¨°Â§öÈ°πÂºèÊúâ$a_0$Âà∞$a_n$Ëøô$n+1$‰∏™Êú™Áü•ÁöÑÊãüÂêàÁ≥ªÊï∞ÔºåÊàë‰ª¨Ë¶ÅÂÅöÁöÑÂ∞±ÊòØÊ±ÇÂá∫Ëøô$n+1$‰∏™ÊãüÂêàÁ≥ªÊï∞\n$\\quad$ Êàë‰ª¨ÊääÊ†∑Êú¨ÁÇπÁöÑÊ®™ÂùêÊ†áÂÄº$x_i$ÔºåÂ∏¶ÂÖ•ÂÅáÂÆöÁöÑÂ§öÈ°πÂºè$\\hat{y}$ÔºåÂæó$n$Ê¨°Â§öÈ°πÂºèÂú®ÁªôÂÆöÊ†∑Êú¨ÁÇπÁöÑÊ®™ÂùêÊ†áÂ§ÑÁöÑÁ∫µÂùêÊ†á‰∏∫Ôºö\n$$\\hat{y}i = a_0x_i^n + a_1x_i^{n-1} + a_2x_i^{n-2} + \u0026hellip; + a{n-1}x_i + a_n$$\nÊàë‰ª¨ÈúÄË¶Å‰∏Ä‰∏™ÊåáÊ†áÊù•ËØÑÂà§ÊâÄÊúâÁöÑ$\\hat{y}_i$ÂíåÊ†∑Êú¨ÁÇπ‰∏≠ÁöÑ$y_i$Áõ∏Â∑ÆÂ§öÂ∞ëÔºåÂèØ‰ª•ÈááÁî®ÊÆãÂ∑ÆÂπ≥ÊñπÂíåÊù•Ë°®ÂæÅ„ÄÇ\n$$\\epsilon = \\sum_{i=1}^{m}{(\\hat{y} - y_i)^2} = \\sum_{i=1}^{m}{[(a_0x_i^{n}+a_1x_i^{n-1}+a_2x_i^{n-2}+\u0026hellip;+a_{n-1}x_i+a_n)-y_i]^2}$$\n$\\quad$ ÂõûÂà∞Ê±ÇÊúÄ‰Ω≥ÊãüÂêàÁ≥ªÊï∞ÁöÑÈóÆÈ¢òÔºåÂ¶ÇÊûúÊúâ‰∏ÄÁªÑÊãüÂêàÁ≥ªÊï∞ËÆ©$\\epsilon$ÊúÄÂ∞èÔºåÈÇ£ËøôÁªÑÊãüÂêàÁ≥ªÊï∞Êàë‰ª¨Â∞±ÂèØ‰ª•ËÆ§‰∏∫ÊòØÊúÄÂ•ΩÁöÑ„ÄÇ\n$\\quad$ ÈÇ£‰πàÊÄé‰πàÊ±ÇÂë¢ÔºåÊàë‰ª¨ÂèØ‰ª•ÂØπ$\\epsilon$ÂàÜÂà´Ê±ÇÂ¶Ç‰∏ã$n+1$Ê¨°ÂÅèÂØºÔºåÂπ∂‰ª§ÊØè‰∏™ÂÅèÂØº‰∏∫0„ÄÇ(‰ª§ÂÅèÂØº‰∏∫0Ê±ÇÂ§öÂÖÉÂáΩÊï∞ÁöÑÊûÅÂÄºÔºåÊòØÈ´ò‰∏≠ÁöÑÂ∏∏ËßÅÊìç‰Ωú‰∫Ü„ÄÇ‰∏ãÂºè‰∏≠ÁöÑ$\\frac{\\partial \\epsilon}{\\partial a_j}$‰πù‰∫å‰∏ÄËØÅÊòéÊòØÂÖ≥‰∫é$a_j$ÁöÑÂçïË∞ÉÂ¢ûÂä†ÁöÑ‰∏ÄÊ¨°ÂáΩÊï∞ÔºåÊâÄ‰ª•ÂèØ‰ª•ËØÅÊòéÊûÅÂÄºÊòØÊûÅÂ∞èÂÄº)\n$$\\begin{cases} \\frac{\\partial \\epsilon}{\\partial a_0} = 0 \\ \\frac{\\partial \\epsilon}{\\partial a_1} = 0 \\ \u0026hellip; \\ \\frac{\\partial \\epsilon}{\\partial a_n} = 0 \\ \\end{cases}$$\nÂÖ∂‰∏≠Ôºå‰∏äËø∞ÊñπÁ®ãÁªÑÁöÑÊüê‰∏ÄÈ°πÔºåÂèØ‰ª•Â±ïÂºÄÂÜôÊàêÔºö\n$$\\frac{\\partial \\epsilon}{\\partial a_j} = \\sum_{i=1}^{m}{2x_i^{n-j}[(a_0x_i^n+a_1x_i^{n-1}+a_2x_i^{n-2}+\u0026hellip;+a_{n-1}x_i+a_n)-y_i]}=0$$\nÂêåÁêÜÔºå‰∏äËø∞ÊñπÁ®ãÁªÑ‰∏≠ÁöÑÂÖ∂‰ªñÈ°π‰πüÂèØ‰ª•Â±ïÂºÄ‰∏∫ÂåÖÂê´ÊãüÂêàÁ≥ªÊï∞$a_0$Âà∞$a_n$ÁöÑÁ≠âÂºè„ÄÇÈÇ£‰πàÔºåÊñπÁ®ãÁªÑ‰∏≠ÁöÑ$n+1$‰∏™ÁÅØÈ•∞Â∞±ÂèØ‰ª•Ê±ÇÂá∫Ëøô‰∏™$n+1$‰∏™ÊãüÂêàÁ≥ªÊï∞„ÄÇ\nËøôÊ†∑Â∞±ÂèØ‰ª•ÂæóÂà∞‰∏ÄÁªÑËÆ©$\\epsilon$ÊúÄÂ∞èÁöÑÊãüÂêàÁ≥ªÊï∞ÔºåÂ∏¶Âõû$\\hat{y}$ÁöÑË°®ËææÂºèÂ∞±ÊãüÂêàÂÆåÂï¶„ÄÇ\n6.2.Ê≠£‰∫§Â§öÈ°πÂºè‰∏éÂáΩÊï∞ÈÄºËøë ","permalink":"http://knightsnape.github.io/public/posts/math_numerical_analysis/","summary":"Êï∞ÂÄºÂàÜÊûê ÂâçË®Ä $\\quad$ Êï∞ÂÄºÂàÜÊûê‰∏ªË¶ÅËÄÉËôëÈóÆÈ¢òÁöÑÊï∞ÂÄºËß£ÊñπÈù¢ÁöÑÂÜÖÂÆπ, ÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÊï∞ÂÄºÁÆóÊ≥ïÁöÑÊûÑÂª∫, ËØØÂ∑Æ‰º†Êí≠ÁöÑÂΩ±Âìç, ËÆ°ÁÆóÂ§çÊùÇÂ∫¶ÁöÑ‰º∞ÁÆó‰ª•ÂèäÈ´òÊïàÂèØÈù†ÁöÑËÆ°ÁÆóÊú∫ÁöÑÂÆûÁé∞. ËôΩÁÑ∂ÂØπ‰∫é‰∏çÂêåÁöÑÈóÆÈ¢òÊúâ‰∏çÂêåÁöÑÊï∞ÂÄºÊ®°ÂûãÊù•ÊûÑÂª∫, ‰ΩÜÊòØ‰ªñ‰ª¨‰∏ÄËà¨ÈÉΩÂÖ∑Êúâ‰∏Ä‰∫õÂÖ±ÂêåÁÇπ:\n$\\quad$ Êï∞ÂÄºÂàÜÊûê‰∏ÄËà¨‰ºö‰ª•Á∫øÊÄß‰ª£Êï∞, È´òÁ≠âÊï∞Â≠¶, ÂÆûÂàÜÊûêÂíåÊ≥õÂáΩÂàÜÊûêÁ≠âÂÜÖÂÆπ‰∏∫Âü∫Á°ÄÊàñËÄÖÂàÜÊûêÂ∑•ÂÖ∑\n$\\quad$ Â¶ÇÊûú‰∏Ä‰∏™ÈóÆÈ¢ò‰∏çËÉΩÁõ¥Êé•Ê±ÇËß£, Â∞ùËØïËÄÉËôë‰∏Ä‰∏™Ëøë‰ººÁöÑÂèØËß£ÁöÑÈóÆÈ¢ò\n$\\quad$ Á®≥ÂÆöÊÄß. ËøôÈáåÁöÑÁ®≥ÂÆöÊÄßÊòØÊåáÊ®°ÂûãÈóÆÈ¢òÁöÑËß£ÂØπÂàùÂßãÊï∞ÊçÆÁöÑÊïèÊÑüÂ∫¶, ‰πüÂ∞±ÊòØËØ¥, Ëß£Âõ†‰∏∫ÂàùÂßãÊï∞ÊçÆÁöÑÂæÆÂ∞èÊîπÂèòËÄå‰∫ßÁîüÁöÑÂèòÂåñ, ÂèòÂåñË∂äÂ∞èË∂äÁ®≥ÂÆö.\nÊï∞ÂÄºÂàÜÊûêÁöÑÁ†îÁ©∂È¢ÜÂüüÈùûÂ∏∏ÂπøÊ≥õ, Âπ∂‰∏îÁî±‰∫éÁé∞‰ª£ÁßçÁ±ª‰∫§ÂèâÂ≠¶ÁßëÁöÑÂèëÂ±ï, Êï∞ÂÄºÂàÜÊûêÁöÑËæπÁïåÂèòÂæóË∂äÊù•Ë∂äÊ®°Á≥ä. ‰ΩÜÊòØ‰∏ªË¶ÅÁöÑÂÜÖÂÆπÂåÖÂê´Â¶Ç‰∏ãÂá†‰∏™ÊñπÈù¢:\nÊï∞ÂÄºÁ∫øÊÄß‰ª£Êï∞ $\\quad$ ‰∏ªË¶ÅÁ†îÁ©∂ÂÜÖÂÆπ‰∏ªË¶ÅÊ∂âÂèäÁ∫øÊÄßÊñπÁ®ãÁªÑÁÆóÊ≥ïÁ†îÁ©∂, ÁâπÂæÅÂÄºÂíåÁõ∏ÂÖ≥Êï∞ÂÄºÁÆóÊ≥ïÁ†îÁ©∂\nÈùûÁ∫øÊÄßÊñπÁ®ãÁªÑ $\\quad$ ÈùûÁ∫øÊÄßÊñπÁ®ãÁªÑÁöÑÊ±ÇËß£‰∏ÄËà¨ÊòØ‰ª•‰∏ÄÁ≥ªÂàóËøë‰ººÁöÑÁ∫øÊÄßÈóÆÈ¢ò‰∏∫Â∑•ÂÖ∑, ÁªèÂÖ∏ÁöÑÊñπÊ≥ïÂåÖÊã¨‰∫åÂàÜÊ≥ï, ‰∏çÂä®ÁÇπËø≠‰ª£, ÊúÄÈÄü‰∏ãÈôçÊ≥ïÂíåÁâõÈ°øÊ≥ïÁ≠â\nÈÄºËøëÁêÜËÆ∫ $\\quad$ ÈÄºËøëÁêÜËÆ∫‰∏ªË¶ÅËÄÉËôëÂ¶Ç‰ΩïÂà©Áî®ÁÆÄÂçïÁöÑÂáΩÊï∞Êù•ÈÄºËøëÂ§çÊùÇÂáΩÊï∞, Âπ∂‰∏îÂ¶Ç‰ΩïÁªôÂá∫ÂÆöÈáèËØØÂ∑Æ‰º∞ËÆ°\n1.Êï∞ÂÄºËÆ°ÁÆóÁöÑËØØÂ∑Æ\n2.ÂÜÖÁßØÁ©∫Èó¥‰∏éÊ≠£‰∫§ÂàÜËß£\n3.Á∫øÊÄßÊñπÁ®ãÁªÑÈóÆÈ¢ò\n3.1.È´òÊñØÊ∂àÂÖÉÊ≥ï 3.2.Âàó‰∏ªÂÖÉÊ∂àÂéªÊ≥ï 3.3.Áü©ÈòµÁöÑ‰∏âËßíÂàÜËß£Ê≥ï 3.4.Áü©ÈòµÁöÑÁõ¥Êé•LUÂàÜËß£Ê≥ï 3.5.‰∏âÂØπËßíÁ∫øÊÄßÊñπÁ®ãÁªÑÁöÑËøΩËµ∂Ê≥ï 3.6.Ëø≠‰ª£Ê≥ïÊ±ÇËß£Á∫øÊÄßÊñπÁ®ãÁªÑ 3.7.ÈõÖÂèØÊØîËø≠‰ª£Ê≥ï 3.8.È´òÊñØ-ËµõÂæ∑Â∞îËø≠‰ª£Ê≥ï 4.ÊèíÂÄºÁÆóÊ≥ï\n4.1.Á∫øÊÄßÊèíÂÄº 4.2.ÂèåÁ∫øÊÄßÊèíÂÄº 4.3.ÊãâÊ†ºÊúóÊó•ÊèíÂÄº 4.4.ÁâõÈ°øÊèíÂÄº 5.Êï∞ÂÄºÂæÆÂàÜÂíåÁßØÂàÜ\n5.1.Êï∞ÂÄºÂæÆÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 5.2.Êï∞ÂÄºÁßØÂàÜ‰∏éËÆ°ÁÆóÊñπÊ≥ï 6.Êï∞ÂÄºÈÄºËøë\n6.1.Êõ≤Á∫øÂíåÊõ≤Èù¢ÁöÑÊãüÂêà 6.2.Ê≠£‰∫§Â§öÈ°πÂºè‰∏éÂáΩÊï∞ÈÄºËøë 1.Êï∞ÂÄºËÆ°ÁÆóÁöÑËØØÂ∑Æ $\\quad$Êó¢ÁÑ∂Áõ¥Êé•ËÅäÂà∞‰∫ÜËØØÂ∑ÆÔºåÈÇ£‰πàÂ∞±Áõ¥Êé•ËÆ≤ÂÖ∂ÂàÜÁ±ª‰ª•ÂèäÊù•Ê∫ê:\nÊ®°ÂûãËØØÂ∑ÆÔºöÂÆûÈôÖÈóÆÈ¢òÂíåÂØπÂÖ∂ËøõË°åÊäΩË±°ÔºåÁÆÄÂåñÂêéÂæóÂà∞ÁöÑÊï∞Â≠¶Ê®°Âûã‰πãÈó¥Â≠òÂú®ÁöÑËØØÂ∑Æ ËßÇÊµãËØØÂ∑ÆÔºöÁî±‰∫éÁ≤æÂ∫¶ÈôêÂà∂ÔºåËßÇÂØüÂíåÊµãÈáèÁöÑÊó∂ÂÄô‰∫ßÁîüÁöÑËØØÂ∑Æ ËàçÂÖ•ËØØÂ∑ÆÔºöËÆ°ÁÆóÊú∫Â≠óÈïøÁöÑÈôêÂà∂ÔºåÊâÄËÉΩË°®Á§∫ÁöÑÊï∞Âè™ËÉΩÊúâÊúâÈôêÁöÑ‰ΩçÊï∞ÔºåÂêéÈù¢ÁöÑÈÉ®ÂàÜÊåâÁÖß‰∏çÂêåÁöÑËàçÂÖ•ËßÑÂàôËàçÂéª‰∫ßÁîüÁöÑËØØÂ∑Æ„ÄÇ Êà™Êñ≠/ÊñπÊ≥ïËØØÂ∑ÆÔºöÂæó‰∏çÂà∞Á≤æÁ°ÆËß£ÁöÑÊï∞Â≠¶Ê®°ÂûãÈÄöÂ∏∏Áî®Êï∞ÂÄºÊñπÊ≥ïÊ±ÇËøë‰ººËß£Ôºå‰∫åËÄÖ‰πãÈó¥ÁöÑËØØÂ∑ÆÔºåÈÄöÂ∏∏Áî®ÊúâÈôêËøáÁ®ãÂØπÊó†Á©∑ËøõË°åÊà™Êñ≠ÔºåÊØîÂ¶ÇÔºöÊ≥∞ÂãíÂÖ¨ÂºèÁöÑËøë‰ºº‰ª£ÊõøÂ¶Ç‰∏ãÔºö $$ P_n(x) = f(0) + \\frac{f`(0)}{1!","title":""}]